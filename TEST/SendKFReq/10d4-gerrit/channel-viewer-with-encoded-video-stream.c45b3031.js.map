{"version":3,"sources":["webpack://phenix/src/sdk/channels/index.ts","webpack://phenix/webpack/universalModuleDefinition","webpack://phenix/src/promise/PromiseHandler.ts","webpack://phenix/src/promise/Promise.ts","webpack://phenix/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://phenix/node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://phenix/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://phenix/node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://phenix/node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://phenix/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://phenix/node_modules/@babel/runtime/helpers/createClass.js","webpack://phenix/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://phenix/node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://phenix/node_modules/@babel/runtime/helpers/inherits.js","webpack://phenix/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://phenix/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://phenix/node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://phenix/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://phenix/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://phenix/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://phenix/node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://phenix/node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://phenix/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://phenix/node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://phenix/node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://phenix/node_modules/@babel/runtime/helpers/typeof.js","webpack://phenix/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://phenix/node_modules/@babel/runtime/regenerator/index.js","webpack://phenix/webpack/bootstrap","webpack://phenix/webpack/runtime/compat get default export","webpack://phenix/webpack/runtime/define property getters","webpack://phenix/webpack/runtime/get javascript chunk filename","webpack://phenix/webpack/runtime/hasOwnProperty shorthand","webpack://phenix/webpack/runtime/make namespace object","webpack://phenix/webpack/runtime/publicPath","webpack://phenix/webpack/runtime/jsonp chunk loading","webpack://phenix/src/dom/BrowserDetector.ts","webpack://phenix/src/environment/FeatureEnablement.ts","webpack://phenix/src/logger/Logger.ts","webpack://phenix/src/logger/Appenders.ts","webpack://phenix/src/environment/BuildFeatures.ts","webpack://phenix/src/logger/LoggerDefaults.ts","webpack://phenix/src/logger/LoggingThreshold.ts","webpack://phenix/src/logger/ConsoleAppender.ts","webpack://phenix/src/lang/Numbers.ts","webpack://phenix/src/sdk/version/VersionManager.ts","webpack://phenix/src/telemetry/TelemetryService.ts","webpack://phenix/src/telemetry/TelemetryApender.ts","webpack://phenix/src/telemetry/TelemetryConfiguration.ts","webpack://phenix/src/metrics/MetricsConfiguration.ts","webpack://phenix/src/metrics/TelemetryDefault.ts","webpack://phenix/src/lang/assertUnreachable.ts","webpack://phenix/src/metrics/TelemetricLevelMapping.ts","webpack://phenix/src/logger/LoggingLevelMapping.ts","webpack://phenix/src/dom/ConfigurationParameterReader.ts","webpack://phenix/src/logger/LoggerFactory.ts","webpack://phenix/src/lang/Strings.ts","webpack://phenix/src/lang/Disposable.ts","webpack://phenix/src/rx/Subject.ts","webpack://phenix/src/rx/ReadOnlySubject.ts","webpack://phenix/src/edgeAuth/EdgeToken.ts","webpack://phenix/src/edgeAuth/EdgeAuthParser.ts","webpack://phenix/src/lang/DisposableList.ts","webpack://phenix/src/dom/ApplicationActivityMonitor.ts","webpack://phenix/src/rtc/VanillaPeerConnection.ts","webpack://phenix/src/rtc/VanillaPeerConnectionFactory.ts","webpack://phenix/src/rtc/PeerConnectionService.ts","webpack://phenix/src/sdk/TelemetryUrl.ts","webpack://phenix/src/sdk/Environment.ts","webpack://phenix/src/environment/Parameters.ts","webpack://phenix/src/sdk/discovery/DiscoveryUri.ts","webpack://phenix/src/sdk/defaults.ts","webpack://phenix/src/time/ExponentialBackoff.ts","webpack://phenix/src/metrics/MetricsType.ts","webpack://phenix/src/metrics/MetricType.ts","webpack://phenix/src/metrics/MetricsService.ts","webpack://phenix/src/metrics/MetricsFactory.ts","webpack://phenix/src/sdk/SDK.ts","webpack://phenix/src/video/Dimension.ts","webpack://phenix/src/dom/GarbageCollectorManager.ts","webpack://phenix/src/sdk/channels/ChannelState.ts","webpack://phenix/src/time/Duration.ts","webpack://phenix/src/video/VideoTelemetry.ts","webpack://phenix/src/dom/StreamSetupListener.ts","webpack://phenix/src/dom/NetworkMonitor.ts","webpack://phenix/src/video/SessionTelemetry.ts","webpack://phenix/src/sdk/api/SetTemporaryMaximalBitrate.ts","webpack://phenix/src/sdk/context/TokenContext.ts","webpack://phenix/src/sdk/context/ChannelContext.ts","webpack://phenix/src/sdk/transformation/EncodedStreamSink.ts","webpack://phenix/src/sdk/transformation/StreamTrackTransform.ts","webpack://phenix/src/sdk/context/StreamTransformContext.ts","webpack://phenix/src/sdk/context/PeerConnectionContext.ts","webpack://phenix/src/sdk/context/StateContext.ts","webpack://phenix/src/sdk/discovery/BitrateModeMapping.ts","webpack://phenix/src/sdk/discovery/BitrateStateMapping.ts","webpack://phenix/src/sdk/discovery/EndPoint.ts","webpack://phenix/src/sdk/discovery/DiscoveryService.ts","webpack://phenix/src/sdk/discovery/Discovery.ts","webpack://phenix/src/sdk/streaming/NetworkStates.ts","webpack://phenix/src/sdk/streaming/WebPlayer.ts","webpack://phenix/src/sdk/streaming/ShakaPlayer.ts","webpack://phenix/src/sdk/streaming/HlsPlayer.ts","webpack://phenix/src/sdk/streaming/ChunkedStreaming.ts","webpack://phenix/src/sdk/streaming/ChunkedStreamPlaybackMode.ts","webpack://phenix/src/sdk/streaming/ChunkedStream.ts","webpack://phenix/src/rtc/SdpParser.ts","webpack://phenix/src/rtc/RtcConnectionMonitor.ts","webpack://phenix/src/rtc/RtcConfigurationManager.ts","webpack://phenix/src/sdk/transformation/SurrogateFrameDataManager.ts","webpack://phenix/src/sdk/transformation/InsertableStreams.ts","webpack://phenix/src/sdk/streaming/RealTimeStream.ts","webpack://phenix/src/sdk/streaming/StreamFactory.ts","webpack://phenix/src/sdk/channels/Channel.ts","webpack://phenix/src/sdk/channels/Channels.ts","channel-viewer-with-encoded-video-stream.js"],"names":["ChannelState","root","factory","exports","module","define","amd","self","PromiseHandler","_createClass","onFulfilled","onRejected","promise","_classCallCheck","_defineProperty","this","Promise","callback","TypeError","_state","_handled","_value","_deferreds","doResolve","key","value","_this","done","promiseResolve","reason","promiseReject","error","newValue","_typeof","then","finale","apply","arguments","e","_this2","length","_immediate","_unhandledRejection","i","len","handle","deferred","result","push","arr","resolve","reject","Array","isArray","args","prototype","slice","call","remaining","manageResponse","constructor","_","setTimeout","console","warn","r","a","n","__esModule","arrayLikeToArray","ReferenceError","asyncGeneratorStep","t","o","c","u","_next","_throw","toPropertyKey","_defineProperties","enumerable","configurable","writable","Object","defineProperty","_getPrototypeOf","setPrototypeOf","getPrototypeOf","bind","__proto__","create","Symbol","iterator","from","l","f","next","assertThisInitialized","_regeneratorRuntime","hasOwnProperty","asyncIterator","toStringTag","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","name","mark","awrap","async","keys","reverse","pop","prev","charAt","stop","rval","complete","finish","delegateYield","_setPrototypeOf","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","toPrimitive","String","Number","toString","test","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","getter","definition","get","chunkId","obj","prop","b","document","baseURI","location","href","BrowserDetector","_browserNameAndVersion","_browserName","_browserMajorVersion","_isAndroid","_isChrome69","_isChrome70","_isChrome71","_isChrome72","_isChrome74","_isChrome75","_isChrome76","_isChrome77","_isMobile","navigator","userAgent","browserNameAndVersion","match","_browserNameAndVersionRegex","parseBrowserNameAndVersionForIE","browserNameList","split","browserVersionList","fullVersion","msie","indexOf","concat","parseInt","substring","version","_BrowserDetector","parseBrowserNameAndVersion","parseBrowserName","parseBrowserMajorVersion","_navigator","_navigator2","includes","FeatureEnablement","isChrome74","isChrome75","isChrome76","isChrome77","isChrome69","isChrome70","isChrome71","isChrome72","browserName","browserMajorVersion","_document","createElement","isMobile","MediaStreamTrackProcessor","MediaStreamTrackGenerator","RTCRtpReceiver","createEncodedStreams","RTCRtpScriptTransform","LoggingLevel","Logger","category","appenders","threshold","_category","_appenders","_threshold","Trace","_len","_key","log","Debug","_len2","_key2","Info","_len3","_key3","Warn","_len4","_key4","_len5","_key5","Fatal","_len6","_key6","level","date","Date","message","replacePlaceholders","appender","replacePlaceholdersString","index","replaceArgument","splice","stringify","reduce","accumulator","currentValue","array","errorStackAlsoHasErrorMessage","stack","cache","JSON","argument","data","toStringStr","Appenders","items","item","BuildFeatures","_sendLocalCandidates","_sendLogs","_sendMetrics","_logToConsole","features","__FEATURES__","sendLocalCandidates","sendLogs","sendMetrics","logToConsole","applyFeatures","LoggerDefaults","LoggingThreshold","defaultLoggingLevel","ConsoleAppender","logLevel","fullMessage","toISOString","Numbers","incrementForNegativeValue","number","countDigitsBeforeDecimal","Math","floor","countDigitsAfterDecimal","precision","power","pow","round","digitsBeforeDecimal","originalValue","modifiedValue","count","fixRounding","VersionManager","__BUILD_VERSION__","_defaultVersion","TelemetryService","telemetryConfiguration","hostname","_telemetryConfiguration","timestamp","valueOf","pageLoadTime","logRecord","tenancy","sessionId","sdkVersion","environment","fullQualifiedName","_domain","_logs","unshift","sendLogsIfAble","_asyncToGenerator","_callee","logMessages","formData","_context","FormData","append","records","fetch","url","body","_x","_sendLogsIfAble","_callee2","numberOfLogsToSend","sizeOfLogsToSend","getItemSize","getLogSize","_context2","_isSending","countNumberLength","sum","response","catch","TelemetryAppender","_tenancy","_sessionId","_telemetryService","TelemetryConfiguration","defaultTelemetryLoggingLevel","_url","set","telemetryUrl","URL","pathname","_environment","_pageLoadTime","TelemetryLevel","MetricsConfiguration","TelemetryDefault","defaultTelemetryLevel","metricsUrl","x","TelemetryLevelMapping","telemetryLevel","Off","Essential","All","assertUnreachable","telemetryLevelType","LoggingLevelMapping","loggingLevel","loggingLevelType","ConfigurationParameterReader","readConfigurationParameterValue","readConfigurationParameterURIValue","defaultStringValue","valueFromUri","defaultBooleanValue","convertTelemetryLevelToTelemetryLevelType","convertLoggingLevelToLoggingLevelType","defaultConsoleLoggingLevel","metaValue","querySelector","getAttribute","valueURIParameterName","URLSearchParams","search","LoggerFactory","_loggers","applyLoggingLevel","applyAppenderLoggingLevel","applyConsoleLogger","applyTelemetryLogger","parameterValue","_configurationParameterReader","getStringValue","setThreshold","applyAppender","add","applyLoggerConfigFromParameterConfiguration","Strings","loops","ceil","fill","random","string","func","Disposable","disposable","_disposed","_disposable","DisposableListener","_Disposable","listeners","listener","_callSuper","idx","_inherits","Subject","_listeners","changed","comparable","equals","ReadOnlySubject","subject","_subject","subscribe","EdgeToken","edgeToken","_edgeToken$token","_edgeToken$token2","_applicationId","applicationId","_token","uri","token","capabilities","EdgeAuthParser","isEncodedEdgeTokenValid","_logger","decodedToken","atob","substr","edgeAuthTokenPrefix","parse","startsWith","getLogger","DisposableList","_list","dispose","ApplicationActivityMonitor","now","_isForeground","_readOnlyIsForeground","detectTabFocusChange","_timeOfLastTabFocusChange","_disposables","hidden","visibilityChange","msHidden","webkitHidden","handleVisibilityChange","isForeground","setFocusState","addEventListener","removeEventListener","listenForDocumentFocus","_documentFocusInterval","window","setInterval","hasFocus","clearInterval","VanillaPeerConnection","configuration","webkitRTCPeerConnectionEnabled","_peerConnection","webkitRTCPeerConnection","RTCPeerConnection","currentLocalDescription","currentRemoteDescription","connectionState","iceConnectionState","getConfiguration","setConfiguration","addTranceiverDisabled","addTransceiver","_createOffer","options","promiseBasedPCMethodsDisabled","createOffer","_createAnswer","createAnswer","_x2","_setLocalDescription","_callee3","description","_context3","setLocalDescription","RTCSessionDescription","_x3","_setRemoteDescription","_callee4","_description$sdp","_context4","sdp","setRemoteDescription","_x4","getSenders","getReceivers","selector","getStats","_this3","mediaStream","_this4","getTracks","track","addTrack","ontrack","handler","onicecandidate","onconnectionstatechange","oniceconnectionstatechange","close","VanillaPeerConnectionFactory","_createPeerConnection","PeerConnectionService","_peerConnectionFactory","isPrecachingEnabled","precacheCreatePeerConnectionOffer","_precacheCreatePeerConnectionOffer","_cached","direction","peerConnection","createPeerConnectionOffer","_createPeerConnectionOffer","encodedInsertableStreams","_args3","isEncodedInsertableStreamsSupported","createPeerConnection","_ref","videoTransceiver","audioTransceiver","supportsAddTransceiver","t0","t1","t2","t3","localOffer","offerToReceiveAudio","offerToReceiveVideo","t4","t5","initiateInitialPrecaching","TelemetryUrl","baseURL","segments","protocol","endsWith","join","origin","Environment","Parameters","_discoveryParameters","parameters","__PARAMETERS__","discovery","intentions","applyParameters","DiscoveryUri","_discoveryUri","discoveryParameters","searchParams","ExponentialBackoff","backoffIntervalInMillisecond","minBackoffIntervalInMillisecond","maxBackoffIntervalInMillisecond","_backoffIntervalInMillisecond","_minBackoffIntervalInMillisecond","_maxBackoffIntervalInMillisecond","failureCount","backoffIntervalInSeconds","randomization","exponentialBackoff","exponentialBackoffWithRandomization","exponentialBackoffWithRandomizationInMillisecond","max","min","MetricsType","MetricType","metrics","_metrics","TimeToFirstFrame","ChannelCreationTimeToFirstFrame","Stalled","Buffering","SetupCompleted","SetupFailed","RoundTripTime","DownlinkThroughputCapacity","NetworkType","ResolutionChanged","ApplicationForeground","ApplicationBackground","MetricsService","metricsConfiguration","_metricsConfiguration","_exponentialBackoff","metric","streamId","previousValue","resource","kind","metricType","getTelemetryLevel","metricRecord","getName","sendMetricsIfAble","metricsMessages","_sendMetricsIfAble","isResponseStatusCodeRetryable","_failureCount","_toConsumableArray","getExponentialBackoffIntervalByFailureCount","status","MetricsFactory","metricsServices","_metricsServices","SDK","clientSessionId","getTelemetryUrl","getEnvironmentFromUrl","convertTelemetryLevelTypeToTelemetryLevel","metricsService","_clientSessionId","_loadedTimestamp","_readOnlyInitialized","_readOnlyDiscoveryUri","_readOnlyPeerConnectionFactory","_automaticallyRetryOnFailure","_automaticallyReconnectPeerConnection","_automaticallyPlayMediaStream","_automaticallyMuteVideoOnPlayFailure","_forceGarbageCollectionOnRestart","_skipGarbageCollectionOnMobileDevices","_webPlayerLoader","_shakaPlayerLoader","_hlsJsLoader","_metricsService","_applicationActivityMonitor","_telemetryUrl","_maximalNumberOfPeerConnectionReconnectAttempts","retriesAmount","_telemetryLevel","telemetryAppender","find","remove","info","getMetricsService","setTelemetryLevel","getBooleanValue","discoveryUri","channelToken","parseToken","uriValue","baseURIValue","_initialized","peerConnectionFactory","convertLoggingLevelTypeToLoggingLevel","consoleLoggingLevel","consoleAppender","automaticallyPlayMediaStream","automaticallyMuteVideoOnPlayFailure","webPlayerLoader","shakaPlayerLoader","hlsJsLoader","_SDK","applyDiscoveryUriDefaultFromParameterConfiguration","applyMetricsConfiguration","applyTelemetryConfiguration","applyAutomaticallyRetryOnFailureFromParameterConfiguration","applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration","applyForceGarbageCollectionOnRestartFromParameterConfiguration","applySkipGarbageCollectionOnMobileDevicesFromParameterConfiguration","init","Dimension","width","height","other","GarbageCollectorManager","isForceChromeGarbageCollectionSupported","forceChromeGarbageCollection","isQueueMicrotaskSupported","queueMicrotask","overloadMemoryToInvokeGarbageCollection","img","src","createObjectURL","Blob","ArrayBuffer","onerror","revokeObjectURL","Durations","duration","_duration","isNegative","abs","offset","milliseconds","seconds","minutes","hours","parts","padStart","targetLength","padString","repeat","VideoTelemetry","channelStartTime","_streamId","_channelStartTime","video","_startRecordingFirstFrame","_listenToFirstTime","callTimeToFirstFrame","_clearTimeToFirstFrameListener","_listenForStall","onStall","_listenForContinuation","event","onContinuation","_clearRebufferingListener","toIsoString","pushTimeToFirstFrame","pushChannelCreationTimeToFirstFrame","_timeToFirstFrame","uint64","durationSincePageLoad","_channelCreationTimeToFirstFrame","_videoStalled","buffered","bufferLength","hasNotProgressedSinceLastProgressEvent","end","_lastProgress","timeSinceStop","newResolution","_videoResolution","StreamSetupListener","_startTime","recordStreamMetric","_metricSubmitted","setupTime","metricName","NetworkMonitor","isSupported","setupNetworkChangeListeners","updateStatistics","_isSupported","_rtt","_effectiveType","_downlinkThroughputCapacity","downlink","downlinkMax","effectiveType","rtt","getRoundTripTime","getEffectiveType","getDownlinkThroughputCapacity","SessionTelemetry","applicationActivityMonitor","_networkMonitor","recordForegroundChange","recordNetworkRTTUpdate","recordNetworkTypeChangeUpdate","downlinkThroughputCapacity","recordNetworkDownlinkThroughputCapacityUpdate","timeSinceLastChange","getTimeSinceLastChange","newRTT","oldRtt","_lastNetworkStatistics","newNetworkType","oldNetworkType","newCapacity","oldCapacity","float","BitrateState","BitrateMode","TokenContext","tokenExpiring","ChannelContext","_options$targetLag","disposables","channelDisposables","rendererDisposables","channelInitialization","videoElement","state","Starting","autoMuted","autoPaused","authorized","online","loading","playing","standby","stopped","targetLag","lag","bitrateLimit","resolution","empty","endPoint","stream","rtcStatistics","dataset","StandBy","GeoRestricted","GeoBlocked","Unauthorized","Recovering","ConfigurationError","TransientConfigurationError","EncodedStreamSink","mode","valid","validationResult","StreamTrackTransform","StreamTransformContext","hasInsertableStreams","hasEncodedInsertableStreams","videoStreamTransformCallback","audioStreamTransformCallback","encodedVideoStreamSink","encodedAudioStreamSink","PeerConnectionContext","peerConnectionReconnectAttempts","StateContext","isStarting","isDisposed","BitrateModeMapping","bitrateMode","Normal","Force","Reset","BitrateStateMapping","bitrateState","Keep","EndPoint","timeout","_uri","_timeout","_roundTripTime","_ping","start","finished","buildPingUrl","race","ok","_subscribe","localSessionDescription","clientVersion","bodyWithOffer","bodyWithoutOffer","httpResponse","subscribeResponse","buildUrl","apiVersion","bearerToken","httpRoundTripTime","sessionDescription","createAnswerDescription","createOfferDescription","finally","clearTimeout","mapHttpStatusToSubscribeStatus","convertHttpResponseToSubscribeResponse","debug","_publish","mapHttpStatusToPublishStatus","convertHttpResponseToPublishResponse","_x5","_x6","_x7","setRemoteDescriptionResponse","sharedSecret","mapHttpStatusToSetRemoteDescriptionStatus","convertHttpResponseToSetRemoteDescriptionResponse","_x8","_x9","_limitBitrate","_callee5","elapsedInMilliseconds","bitrateInBitsPerSecond","_this5","_context5","convertBitrateStateToBitrateStateType","convertBitrateModeToBitrateModeType","mapHttpStatusToSetTemporaryMaximalBitrateStatus","_x10","_x11","_x12","_x13","_x14","_addIceCandidates","_callee6","candidates","discoveryCompleted","addIceCandidatesResponse","_this6","_args6","_context6","mapHttpStatusToAddIceCandidatesStatus","convertHttpResponseToAddIceCandidatesResponse","_x15","_x16","_x17","_destroyStream","_callee7","destroyStreamResponse","_this7","_context7","mapHttpStatusToSetDestroyStreamStatus","convertHttpResponseToDestroyStreamResponse","_x18","_x19","_destroyStreamOnUnmount","_callee8","_context8","sendBeacon","destroyStream","_x20","_x21","path","pathAsArray","_convertHttpResponseToSubscribeResponse","_callee9","_context9","json","rtcConfiguration","convertIRtcConfigurationToRTCConfiguration","createAnswerDescriptionResponse","createOfferDescriptionResponse","_x22","_x23","_convertHttpResponseToPublishResponse","_callee10","publishResponse","_context10","_x24","_x25","iceServers","bundlePolicy","iceCandidatePoolSize","urls","username","credential","iceTransportPolicy","rtcpMuxPolicy","_convertHttpResponseToSetRemoteDescriptionResponse","_callee11","_context11","_x26","_convertHttpResponseToAddIceCandidatesResponse","_callee12","_context12","_x27","_convertHttpResponseToDestroyStreamResponse","_callee13","_context13","_x28","DiscoveryService","_discoverNearbyEndPoints","asString","endPoints","text","map","_discoverClosestEndPoint","failedRequests","propagateFailureIfAllRequestsFailed","_args2","buildDiscoveryUrl","discoverNearbyEndPoints","ping","time","Discovery","_precacheClosestEndPointDiscovery","discoverClosestEndPointWithCaching","_discoverClosestEndPointWithCaching","discoveryService","cachedValue","_cache","discoverClosestEndPoint","precacheClosestEndPointDiscovery","NetworkStates","WebPlayer","manifestURI","_videoElement","_kind","_manifestURI","encodeURI","replace","_options","ChunkedStreaming","phenixWebPlayer","playerOptions","_objectSpread","bandwidthToStartAt","_player","errorObject","canReload","code","severity","errors","RECOVERABLE","reloadIfAble","_this$_videoElement$b","_this$_videoElement$b2","currentTime","networkState","NetworkNoSource","dataBuffered","statistics","trueCurrentTime","originStartTime","isNative","deliveryType","NetworkLoading","NetworkIdle","NetworkEmpty","hasElapsedMinTimeSinceLastReload","_lastReloadTime","minTimeBeforeNextReload","reload","ShakaPlayer","_monitoredStatistics","estimatedBandwidth","playTime","shaka","Player","loadPlayer","abr","defaultBandwidthEstimate","manifest","retryParameters","streaming","liveSyncPanicThreshold","bufferingGoal","bufferBehind","maxAttempts","backoffFactor","unload","destroy","playerConfig","configure","load","play","HlsPlayer","hlsPlayer","enableWorker","maxBufferLength","backBufferLength","liveSyncDuration","liveDurationInfinity","liveMaxLatencyDuration","Infinity","highBufferWatchdogPeriod","loadSource","attachMedia","canPlayType","media","offsetWidth","offsetHeight","streamController","_hlsPlayer","_phenixWebPlayer","_shaka","_start","offerSdp","loaded","_pending","player","_play","dashManifestUrlMatch","hlsManifestUrlMatch","manifestUrl","playlistUrl","shouldUseNativeHls","preferNative","ChunkedStreamPlaybackMode","ChunkedStream","channelContext","chunkedStreamPlaybackMode","handleStreamFailure","_channelContext","_chunkedStreamPlaybackMode","_handleStreamFailure","applySessionAndStreamPropertiesToVideoElement","mapSubscribeStatusToChannelStatus","applyStatus","roundTripTime","monitor","Stopped","_monitorDisposables","newStreamStatistics","Live","_streamStatistics","paused","_monitorFailureCount","ConnectionError","Playing","Paused","SdpParser","_sdp","sdpSplitByLines","sdpSplitByTracks","_audioCodec","applyCodec","_videoCodec","_isAudioTrackEnabled","isTrackByTypeEnabled","_isVideoTrackEnabled","sdpSectionForType","sdpTrack","sdpLine","RtcConnectionMonitor","estimatedRoundTripTime","_estimatedRoundTripTime","_tracksToMonitor","getCurrentOfferDisabled","parsedSDP","_estimatedAudioCodec","audioCodec","_estimatedVideoCodec","videoCodec","updateStatistic","_rtcStatistic","_isMonitorRunning","_updateTimeout","_updateStatistic","getKindForSafari11","getStatsPromiseBasedDisabled","updateStatisticLegacy","id","stats","lastPacketReceivedTimestamp","report","currentRoundTripTime","mediaType","codec","codecId","mimeType","_this$_rtcStatistic$v","_this$_rtcStatistic$v2","_this$_rtcStatistic$v3","_this$_rtcStatistic$v4","_this$_rtcStatistic$v5","bytesDelta","bytesReceived","timeDelta","bitrate","ssrc","packetsLost","packetsReceived","getCodecByType","framesDecoded","fps","_updateStatisticLegacy","getStatsLegacy","names","stat","RtcConfigurationManager","SkipFrame","SurrogateFrameDataManager","toUpperCase","_dummyAudioSilentPerCodec","OPUS","buffer","_singleZeroByte","_useUpdateSurrogate82x82PFrameFrameNumber","_surrogate82x82PFrameFrameNumber","_surrogate82x82PFrameFrameNumberReset","_dummy82x82H264","IFrame","_dummy2x2VideoIFramePerCodec","H264","VP8","VP9","_isAndroidChrome","getSurrogate82x82PFrameAndUpdateFrameNumber","_dummy2x2VideoPFramePerCodec","savedSurrogateFrameNumber","byte1","byte2","PFrame","bufferIndex","_dummy82x82H264PFrameFrameNumberIndex","_SurrogateFrameDataManager","isAndroid","Uint8Array","_isMobileChrome","_isSafari","InsertableStreams","receivers","receiver","filter","receive","isRTCRtpScriptTransformSupported","worker","Worker","onmessage","chunk","postMessage","forceInvalidFrame","transform","terminate","encodedStreamTransformCallback","_ref2","controller","surrogate","getInvalidSurrogateVideoIFrame","getInvalidSurrogateVideoPFrame","getSurrogateVideoIFramePerCodec","getSurrogateVideoPFramePerCodec","enqueue","transformer","TransformStream","receiverStreams","source","readable","sink","pipeThrough","pipeTo","_ref3","MediaStream","audioPumper","Audio","srcObject","appendChild","removeChild","_ref4","getInvalidSurrogateAudioData","getSurrogateAudioSilentPerCodec","transformedStream","videoTrack","processor","generator","removeTrack","audioTrack","RealTimeStream","peerConnectionContext","streamTransformContext","_peerConnectionContext","_streamTransformContext","listenOnStreamSetup","playMediaStreamInVideoElement","all","_slicedToArray","_ref3$","clientOfferDisabled","supportsSetConfiguration","supportsGetConfiguration","forceGarbageCollectionOnRestart","skipGarbageCollectionOnMobileDevices","forceGarbageCollection","applyRtcConfiguration","submitCandidatesTimeout","cancelDiscovery","candidate","addIceCandidates","_ref5","retryCallback","pause","onLine","reconnectPeerConnection","mediaStreamPromise","onTrackDisabled","trackListener","timeoutId","streams","answer","_ref6","mapSetRemoteDescriptionStatusToChannelStatus","success","parsedRemoteDescription","applyEncodedStreamTransformation","_InsertableStreams$ap2","applyInsertableStreamTransformation","rtcConnectionMonitor","rtcConnectionMonitorStatisticSubscription","rtcStatistic","rtcVideoStatistic","rtcAudioStatistic","audio","audioTrackFailed","videoTrackFailed","Reconnecting","_applyRtcConfiguration","optionalPeerConnection","newRtcConfiguration","isLimitedIceServersListLength","truncateIceServers","maximalNumberOfPeerConnectionReconnectAttempts","automaticallyReconnectPeerConnection","_peerConnection$curre","isClientOfferFlow","iceRestart","offer","StreamFactory","tokenCapabilities","hasStreaming","hasOnDemand","OndDemand","Channel","channelContextOptions","streamTransformContextOptions","_tokenContext","_stateContext","_readOnlyVideoElement","_readOnlyToken","_readOnlyPeerConnection","_readOnlyState","_readOnlyAutoMuted","_readOnlyAutoPaused","_readOnlyTokenExpiring","_readOnlyAuthorized","_readOnlyOnline","_readOnlyLoading","_readOnlyPlaying","_readOnlyStandby","_readOnlyStopped","_readOnlyTargetLag","_readOnlyLag","_readOnlyBitrateLimit","_readOnlyResolution","_readOnlyFailureCount","_readOnlyEndPoint","_readOnlyStream","_readOnlyRtcStatistics","_readOnlyMediaStream","_sessionTelemetry","_videoMetaDataChangedHandler","handleVideoMetaDataChanged","videoTelemetry","setupListenerForTimeToFirstTime","setupListenerForRebuffering","restartAfterStop","clearFailureCountTimeout","onVideoResolutionChanges","getTime","limitBitrate","destroyStreamOnUnmount","videoWidth","videoHeight","_stop","processStop","cleanUpResources","_resume","muted","_dispose","processStart","_processStart","_StreamTrackTransform","_StreamTrackTransform2","_valid","_validationResult","_EncodedStreamSink$va","_valid2","_validationResult2","_EncodedStreamSink$va2","_valid3","_validationResult3","hasTransformStreamCallback","hasEncodedStreamSink","handleStreamFailureCallback","streamPlayer","validateMediaStreamTrackTransform","validateEncodedStreamSink","isInsertableStreamsSupported","UnsupportedFeature","getUri","clearCachedClosestEndpoint","fail","ClientStartError","automaticRetryOnFailure","getRetryInterval","_restartAfterStop","Offline","_playMediaStreamInVideoElement","playPromise","hasAudioTrack","automaticallyMuteVideoOnPlayFailureOff","Channels","initialized","channelOptions","_channels","_interopRequireDefault","require","default","getElementById","keyFrames","triggerPli","innerHTML","timeStart","frameStatistics","totalBytes","largestBytes","smallestBytes","delta","processVideo","frame","byteLength","timeNow","totalSeconds","keyFramesPerSecond","toFixed","framesPerSecond","averageKeyFrameSize","trunc","averageDeltaFrameSize","averageAudioDataSize","smallestVideoBytes","largestVideoBytes","XXX_TS","processAudio","getElementsByTagName","createChannelOptions","phenix","createChannel"],"mappings":"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","file":"channel-viewer-with-encoded-video-stream.c45b3031.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport SDK from '../SDK';\nimport Channels from './Channels';\nimport ChannelState from './ChannelState';\n\nexport {\n  SDK,\n  Channels,\n  ChannelState\n};\n\nexport default {\n  SDK,\n  Channels,\n  ChannelState\n};","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"phenix\"] = factory();\n\telse\n\t\troot[\"phenix\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Promise from './Promise';\n\nexport default class PromiseHandler {\n  onFulfilled: Function;\n  onRejected: Function;\n  promise: Promise;\n\n  constructor(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport PromiseHandler from './PromiseHandler';\n\nclass Promise {\n  _state: number;\n  _handled: boolean;\n  _value: Promise;\n  _deferreds: Array<PromiseHandler>;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  then(onFulfilled: Function, onRejected: Function): Promise | void;\n\n  constructor(callback) {\n    if (!(this instanceof Promise)) {\n      throw new TypeError('Promises must be constructed via new');\n    }\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('not a function');\n    }\n\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    this.doResolve(callback);\n  }\n\n  doResolve(callback: Function): void {\n    let done = false;\n\n    try {\n      callback(\n        value => {\n          if (done) {\n            return;\n          }\n\n          done = true;\n          this.promiseResolve(value);\n        },\n        reason => {\n          if (done) {\n            return;\n          }\n\n          done = true;\n          this.promiseReject(reason);\n        }\n      );\n    } catch (error) {\n      if (done) {\n        return;\n      }\n\n      done = true;\n      this.promiseReject(error);\n    }\n  }\n\n  promiseResolve(newValue: Promise | undefined): void {\n    const promise = this as Promise;\n\n    try {\n      // Promise Resolution Procedure: https://github.com/Promises-aplus/Promises-spec#the-Promise-resolution-procedure\n      if (newValue === promise) {\n        throw new TypeError('A Promise cannot be resolved with it self.');\n      }\n\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        const then = newValue.then;\n\n        if (newValue instanceof Promise) {\n          promise._state = 3;\n          promise._value = newValue;\n          promise.finale();\n\n          return;\n        } else if (typeof then === 'function') {\n          promise.doResolve(function(): void {\n            // eslint-disable-next-line prefer-rest-params\n            then.apply(newValue, arguments);\n          });\n\n          return;\n        }\n      }\n\n      promise._state = 1;\n      promise._value = newValue;\n      promise.finale();\n    } catch (e) {\n      promise.promiseReject(e);\n    }\n  }\n\n  promiseReject(newValue: Promise | undefined): void {\n    this._state = 2;\n    this._value = newValue;\n    this.finale();\n  }\n\n  finale(): void {\n    if (this._state === 2 && this._deferreds.length === 0) {\n      Promise._immediate(() => {\n        if (!this._handled) {\n          Promise._unhandledRejection(this._value);\n        }\n      });\n    }\n\n    for (let i = 0, len = this._deferreds.length; i < len; i++) {\n      this.handle(this._deferreds[i]);\n    }\n\n    this._deferreds = null;\n  }\n\n  handle(deferred: PromiseHandler): void {\n    let promise = this as Promise;\n\n    while (promise._state === 3) {\n      promise = promise._value;\n    }\n\n    if (promise._state === 0) {\n      promise._deferreds.push(deferred);\n\n      return;\n    }\n\n    promise._handled = true;\n    Promise._immediate(() => {\n      const callback = promise._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\n      if (callback === null) {\n        if (promise._state === 1) {\n          deferred.promise.promiseResolve(promise._value);\n        } else {\n          deferred.promise.promiseReject(promise._value);\n        }\n\n        return;\n      }\n\n      let result;\n\n      try {\n        result = callback(promise._value);\n      } catch (e) {\n        deferred.promise.promiseReject(e);\n\n        return;\n      }\n\n      deferred.promise.promiseResolve(result);\n    });\n  }\n\n  static all(arr: Array<Promise>): Promise {\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(arr)) {\n        return reject(new TypeError('Promise.all accepts an array'));\n      }\n\n      const args = Array.prototype.slice.call(arr);\n\n      if (args.length === 0) {\n        return resolve([]);\n      }\n\n      let remaining = args.length;\n      const manageResponse = (i, value): void => {\n        try {\n          if (value && (typeof value === 'object' || typeof value === 'function')) {\n            const then = value.then;\n\n            if (typeof then === 'function') {\n              then.call(\n                value,\n                value => manageResponse(i, value),\n                reject\n              );\n\n              return;\n            }\n          }\n\n          args[i] = value;\n\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      for (let i = 0; i < args.length; i++) {\n        manageResponse(i, args[i]);\n      }\n    });\n  }\n\n  static resolve(value): Promise {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(resolve => resolve(value));\n  }\n\n  static reject(value): Promise {\n    return new Promise((_, reject) => reject(value));\n  }\n\n  static race(arr: Array<Promise>): Promise {\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(arr)) {\n        return reject(new TypeError('Promise.race accepts an array'));\n      }\n\n      for (let i = 0, len = arr.length; i < len; i++) {\n        Promise.resolve(arr[i]).then(resolve, reject);\n      }\n    });\n  }\n\n  static _immediate(callback: Function): void {\n    const ignored = setTimeout(callback, 0);\n  }\n\n  static _unhandledRejection(error): void {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', error); // eslint-disable-line no-console\n    }\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected: Function): Promise | void {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype['then'] = function(onFulfilled: Function, onRejected: Function): Promise | void {\n  const promise = new this.constructor(() => null);\n\n  this.handle(new PromiseHandler(onFulfilled, onRejected, promise));\n\n  return promise;\n};\n\nPromise.prototype['finally'] = function(callback: Function): Promise | void {\n  const constructor = this.constructor;\n\n  return this.then(\n    value => constructor.resolve(callback()).then(() => value),\n    reason => constructor.resolve(callback()).then(() => constructor.reject(reason))\n  );\n};\n\nexport default Promise;","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(t) {\n  return (module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _getPrototypeOf(t);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(t, e) {\n  return (module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _setPrototypeOf(t, e);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t223: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class BrowserDetector {\n  private static readonly _browserNameAndVersionRegex = /(MSIE|(?!Gecko.+)Firefox|(?!AppleWebKit.+Chrome.+)Safari|(?!AppleWebKit.+)Chrome|AppleWebKit(?!.+Chrome|.+Safari)|Gecko(?!.+Firefox))(?: |\\/)([\\d.apre]+)/g;\n  private static readonly _browserNameAndVersion = BrowserDetector.parseBrowserNameAndVersion();\n  private static readonly _browserName = BrowserDetector.parseBrowserName();\n  private static readonly _browserMajorVersion = BrowserDetector.parseBrowserMajorVersion();\n\n  private static readonly _isMobile = (/Android|iPhone|iPad|iPod|BlackBerry|Opera Mini/i).test(navigator?.userAgent);\n  private static readonly _isAndroid = (/Android/i).test(navigator?.userAgent);\n\n  private static readonly _isChrome69 = BrowserDetector._browserNameAndVersion.includes('Chrome/69.');\n  private static readonly _isChrome70 = BrowserDetector._browserNameAndVersion.includes('Chrome/70.');\n  private static readonly _isChrome71 = BrowserDetector._browserNameAndVersion.includes('Chrome/71.');\n  private static readonly _isChrome72 = BrowserDetector._browserNameAndVersion.includes('Chrome/72.');\n  private static readonly _isChrome74 = BrowserDetector._browserNameAndVersion.includes('Chrome/74.');\n  private static readonly _isChrome75 = BrowserDetector._browserNameAndVersion.includes('Chrome/75.');\n  private static readonly _isChrome76 = BrowserDetector._browserNameAndVersion.includes('Chrome/76.');\n  private static readonly _isChrome77 = BrowserDetector._browserNameAndVersion.includes('Chrome/77.');\n\n  static get browserNameAndVersion(): string {\n    return BrowserDetector._browserNameAndVersion;\n  }\n\n  static get browserName(): string {\n    return this._browserName;\n  }\n\n  static get browserMajorVersion(): number {\n    return this._browserMajorVersion;\n  }\n\n  static get isAndroid(): boolean {\n    return BrowserDetector._isAndroid;\n  }\n\n  static get isChrome69(): boolean {\n    return BrowserDetector._isChrome69;\n  }\n\n  static get isChrome70(): boolean {\n    return BrowserDetector._isChrome70;\n  }\n\n  static get isChrome71(): boolean {\n    return BrowserDetector._isChrome71;\n  }\n\n  static get isChrome72(): boolean {\n    return BrowserDetector._isChrome72;\n  }\n\n  static get isChrome74(): boolean {\n    return BrowserDetector._isChrome74;\n  }\n\n  static get isChrome75(): boolean {\n    return BrowserDetector._isChrome75;\n  }\n\n  static get isChrome76(): boolean {\n    return BrowserDetector._isChrome76;\n  }\n\n  static get isChrome77(): boolean {\n    return BrowserDetector._isChrome77;\n  }\n\n  static isMobile(): boolean {\n    return BrowserDetector._isMobile;\n  }\n\n  private static parseBrowserNameAndVersion(): string {\n    if (!navigator || !navigator.userAgent) {\n      return '';\n    }\n\n    const browserNameAndVersion = navigator.userAgent.match(BrowserDetector._browserNameAndVersionRegex);\n\n    if (browserNameAndVersion && browserNameAndVersion[0]) {\n      return browserNameAndVersion[0];\n    }\n\n    return BrowserDetector.parseBrowserNameAndVersionForIE();\n  }\n\n  private static parseBrowserName(): string {\n    if (!BrowserDetector._browserNameAndVersion) {\n      return '';\n    }\n\n    const browserNameList = BrowserDetector._browserNameAndVersion.split('/');\n\n    if (!browserNameList || !browserNameList[0]) {\n      return '';\n    }\n\n    return browserNameList[0];\n  }\n\n  private static parseBrowserMajorVersion(): number {\n    if (!BrowserDetector._browserNameAndVersion) {\n      return 0;\n    }\n\n    const browserVersionList = BrowserDetector._browserNameAndVersion.split('/');\n\n    if (!browserVersionList || !browserVersionList[1]) {\n      return 0;\n    }\n\n    const fullVersion = browserVersionList[1];\n\n    if (!fullVersion) {\n      return 0;\n    }\n\n    return Number(fullVersion.split('.')[0]) || 0;\n  }\n\n  private static parseBrowserNameAndVersionForIE(): string {\n    if (!navigator || !navigator.userAgent) {\n      return '';\n    }\n\n    const userAgent = navigator.userAgent;\n    const msie = userAgent.indexOf('MSIE ');\n\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return `IE/${parseInt(userAgent.substring(msie + 5, userAgent.indexOf('.', msie)), 10)}`;\n    }\n\n    const trident = userAgent.indexOf('Trident/');\n\n    if (trident > 0) {\n      // IE 11 => return version number\n      const version = userAgent.indexOf('rv:');\n\n      return `IE/${parseInt(userAgent.substring(version + 3, userAgent.indexOf('.', version)), 10)}`;\n    }\n\n    return '';\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport BrowserDetector from '../dom/BrowserDetector';\n\nexport default class FeatureEnablement {\n  static get clientOfferDisabled(): boolean {\n    // Client offer workflow does not work correctly in the following browsers\n    return BrowserDetector.isChrome74 ||\n      BrowserDetector.isChrome75 ||\n      BrowserDetector.isChrome76 ||\n      BrowserDetector.isChrome77;\n  }\n\n  static get addTranceiverDisabled(): boolean {\n    // Chrome 69, 70, 71, 72 exposes `addTranceiver` but it does not work correctly\n    return BrowserDetector.isChrome69 ||\n      BrowserDetector.isChrome70 ||\n      BrowserDetector.isChrome71 ||\n      BrowserDetector.isChrome72;\n  }\n\n  static get getStatsPromiseBasedDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 66;\n  }\n\n  static get getCurrentOfferDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 69 ||\n      BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 56;\n  }\n\n  static get onTrackDisabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 63 ||\n      BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 52;\n  }\n\n  static get webkitRTCPeerConnectionEnabled(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion <= 55;\n  }\n\n  static get promiseBasedPCMethodsDisabled(): boolean {\n    return BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion <= 52;\n  }\n\n  static get shouldUseNativeHls(): boolean {\n    return BrowserDetector.browserName === 'Safari' ||\n      BrowserDetector.browserName === 'SamsungBrowser';\n  }\n\n  static get isPrecachingEnabled(): boolean {\n    return BrowserDetector.browserName !== 'IE';\n  }\n\n  static get isForceChromeGarbageCollectionSupported(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && typeof document?.createElement === 'function';\n  }\n\n  static get isQueueMicrotaskSupported(): boolean {\n    return BrowserDetector.browserName === 'Chrome' && BrowserDetector.browserMajorVersion >= 71 ||\n      BrowserDetector.browserName === 'Firefox' && BrowserDetector.browserMajorVersion >= 69 ||\n      BrowserDetector.browserName === 'Safari';\n  }\n\n  static get isMobile(): boolean {\n    return BrowserDetector.isMobile();\n  }\n\n  static get isInsertableStreamsSupported(): boolean {\n    return !(typeof MediaStreamTrackProcessor === 'undefined' ||\n      typeof MediaStreamTrackGenerator === 'undefined');\n  }\n\n  static get isEncodedInsertableStreamsSupported(): boolean {\n    return typeof RTCRtpReceiver !== 'undefined' && typeof RTCRtpReceiver.prototype.createEncodedStreams !== 'undefined';\n  }\n\n  static get isRTCRtpScriptTransformSupported(): boolean {\n    return typeof RTCRtpScriptTransform !== 'undefined';\n  }\n\n  static get isLimitedIceServersListLength(): boolean {\n    return BrowserDetector.browserName === 'Firefox';\n  }\n  static get errorStackAlsoHasErrorMessage(): boolean {\n    return BrowserDetector.browserName !== 'Firefox' && BrowserDetector.browserName !== 'Safari';\n  }\n}\n","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {IAppender} from './IAppender';\nimport Appenders from './Appenders';\nimport LoggingThreshold from './LoggingThreshold';\nimport FeatureEnablement from '../environment/FeatureEnablement';\n\nexport enum LoggingLevel {\n  All = -1,\n  Trace = 10,\n  Debug = 20,\n  Info = 30,\n  Warn = 40,\n  Error = 50,\n  Fatal = 60,\n  Off = 100,\n}\n\nexport type LoggingLevelType = 'Off' | 'Trace' | 'Debug' | 'Info' | 'Warn' | 'Error' | 'Fatal' | 'All';\n\nexport default class Logger {\n  private readonly _category: string;\n  private readonly _appenders: Appenders;\n  private readonly _threshold: LoggingThreshold;\n\n  get category(): string {\n    return this._category;\n  }\n\n  get appenders(): Appenders {\n    return this._appenders;\n  }\n\n  get threshold(): LoggingThreshold {\n    return this._threshold;\n  }\n\n  trace(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Trace) {\n      return;\n    }\n\n    this.log(LoggingLevel.Trace, args);\n  }\n\n  debug(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Debug) {\n      return;\n    }\n\n    this.log(LoggingLevel.Debug, args);\n  }\n\n  info(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Info) {\n      return;\n    }\n\n    this.log(LoggingLevel.Info, args);\n  }\n\n  warn(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Warn) {\n      return;\n    }\n\n    this.log(LoggingLevel.Warn, args);\n  }\n\n  error(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Error) {\n      return;\n    }\n\n    this.log(LoggingLevel.Error, args);\n  }\n\n  fatal(...args: any): void {\n    if (!this._threshold.value || this._threshold.value > LoggingLevel.Fatal) {\n      return;\n    }\n\n    this.log(LoggingLevel.Fatal, args);\n  }\n\n  private log(level: number, args: any): void {\n    const date = new Date();\n    const message = this.replacePlaceholders(args);\n\n    this._appenders.value.forEach((appender: IAppender) => {\n      appender.log(level, message, this.category, date);\n    });\n  }\n\n  private replacePlaceholders(args: any): string {\n    let replacePlaceholdersString = args[0];\n    let index = 0;\n\n    while (replacePlaceholdersString.indexOf && args.length > 1 && index >= 0) {\n      index = replacePlaceholdersString.indexOf('%', index);\n\n      if (index > 0) {\n        const type = replacePlaceholdersString.substring(index + 1, index + 2);\n\n        switch (type) {\n          case '%':\n            // Escaped '%%' turns into '%'\n            replacePlaceholdersString = replacePlaceholdersString.substring(0, index) + replacePlaceholdersString.substring(index + 1);\n            index++;\n\n            break;\n          case 's':\n          case 'd':\n            // Replace '%d' or '%s' with the argument\n            args[0] = replacePlaceholdersString = this.replaceArgument(\n              this.toString(args[1]),\n              replacePlaceholdersString,\n              index\n            );\n            args.splice(1, 1);\n\n            break;\n          case 'j':\n            // Replace %j' with the argument\n            args[0] = replacePlaceholdersString = this.replaceArgument(\n              this.stringify(args[1]),\n              replacePlaceholdersString,\n              index\n            );\n\n            args.splice(1, 1);\n\n            break;\n          default:\n            return args.toString();\n        }\n      }\n    }\n\n    if (args.length > 1) {\n      args = args.reduce((accumulator, currentValue, index, array) => {\n        if (index + 1 === array.length && currentValue instanceof Error) {\n          if (FeatureEnablement.errorStackAlsoHasErrorMessage) {\n            return accumulator + '\\n' + this.toString(currentValue.stack);\n          }\n\n          return accumulator + '\\n' + this.toString(currentValue.message) + '\\n' + this.toString(currentValue.stack);\n        }\n\n        return accumulator + `[${this.toString(currentValue)}]`;\n      });\n    }\n\n    return args.toString();\n  }\n\n  private stringify(arg: any): string {\n    const cache = [];\n\n    try {\n      return JSON.stringify(\n        arg instanceof Error ? this.toString(arg) : arg,\n        (key, value) => {\n          if (!!value && value instanceof Object) {\n            if (cache.includes(value)) {\n              return '<recursive>';\n            }\n\n            cache.push(value);\n          }\n\n          return value;\n        },\n        2\n      );\n    } catch (e) {\n      return '[object invalid JSON.stringify]';\n    }\n  }\n\n  private replaceArgument(argument: any, replacePlaceholdersString: string, index: number): string {\n    return replacePlaceholdersString.substring(0, index) + this.toString(argument) + replacePlaceholdersString.substring(index + 2);\n  }\n\n  private toString(data: any): string {\n    if (typeof data === 'string') {\n      return data;\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'true' : 'false';\n    }\n\n    if (typeof data === 'number') {\n      return data.toString();\n    }\n\n    let toStringStr = '';\n\n    if (data) {\n      if (typeof data === 'function') {\n        toStringStr = data.toString();\n      } else if (data instanceof Object) {\n        try {\n          toStringStr = data.toString();\n        } catch (e) {\n          toStringStr = '[object invalid toString()]';\n        }\n      }\n    }\n\n    return toStringStr;\n  }\n\n  constructor(category: string, appenders: Appenders, threshold: LoggingThreshold) {\n    this._category = category;\n    this._appenders = appenders;\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IAppender} from './IAppender';\n\nexport default class Appenders {\n  private _appenders: Array<IAppender> = [];\n\n  get value(): Array<IAppender> {\n    return this._appenders;\n  }\n\n  add(appender: IAppender): void {\n    this._appenders.push(appender);\n  }\n\n  remove(appender): void {\n    this._appenders = this._appenders.reduce((items, item) => {\n      if (!(item === appender)) {\n        items.push(item);\n      }\n\n      return items;\n    }, [] as Array<IAppender>);\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {LoggingLevelType} from '../logger/Logger';\nimport {TelemetryLevelType} from '../metrics/MetricsConfiguration';\n\ndeclare const __FEATURES__: {\n  sendLocalCandidates: boolean;\n  sendLogs: LoggingLevelType;\n  sendMetrics: TelemetryLevelType;\n  logToConsole: LoggingLevelType;\n};\n\nexport default class BuildFeatures {\n  private static _sendLocalCandidates: boolean;\n  private static _sendLogs: LoggingLevelType;\n  private static _sendMetrics: TelemetryLevelType;\n  private static _logToConsole: LoggingLevelType;\n\n  static get sendLocalCandidates(): boolean {\n    return this._sendLocalCandidates;\n  }\n\n  static get sendLogs(): LoggingLevelType {\n    return this._sendLogs;\n  }\n\n  static get sendMetrics(): TelemetryLevelType {\n    return this._sendMetrics;\n  }\n\n  static get logToConsole(): LoggingLevelType {\n    return this._logToConsole;\n  }\n\n  static applyFeatures(): void {\n    try {\n      const features = __FEATURES__;\n\n      this._sendLocalCandidates = 'sendLocalCandidates' in features ? features.sendLocalCandidates : true;\n      this._sendLogs = 'sendLogs' in features ? features.sendLogs : 'All';\n      this._sendMetrics = 'sendMetrics' in features ? features.sendMetrics : 'All';\n      this._logToConsole = 'logToConsole' in features ? features.logToConsole : 'All';\n    } catch (e) {\n      this._sendLocalCandidates = true;\n      this._sendLogs = 'All';\n      this._sendMetrics = 'All';\n      this._logToConsole = 'All';\n    }\n  }\n}\n\nBuildFeatures.applyFeatures();","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport BuildFeatures from '../environment/BuildFeatures';\nimport {LoggingLevel} from '../logger/Logger';\n\nexport default class LoggerDefaults {\n  static get defaultLoggingLevel(): LoggingLevel {\n    return LoggingLevel[BuildFeatures.sendLogs];\n  }\n\n  static get defaultConsoleLoggingLevel(): LoggingLevel {\n    return LoggingLevel[BuildFeatures.logToConsole];\n  }\n\n  static get defaultTelemetryLoggingLevel(): LoggingLevel {\n    return LoggingLevel.Info;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerDefaults from './LoggerDefaults';\nimport {LoggingLevel} from './Logger';\n\nexport default class LoggingThreshold {\n  private _threshold: LoggingLevel = LoggerDefaults.defaultLoggingLevel;\n\n  get value(): LoggingLevel {\n    return this._threshold;\n  }\n\n  setThreshold(threshold: LoggingLevel): void {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IAppender} from './IAppender';\nimport {LoggingLevel} from './Logger';\n\nexport default class ConsoleAppender implements IAppender {\n  private readonly _threshold: LoggingLevel;\n\n  log(logLevel: LoggingLevel, message: string, category: string, date: Date): void {\n    if (logLevel < this._threshold) {\n      return;\n    }\n\n    const fullMessage = `${date.toISOString()} [${category}] [${LoggingLevel[logLevel]}] ${message}`;\n\n    if (logLevel < LoggingLevel.Warn) {\n      console.log(fullMessage);\n\n      return;\n    }\n\n    console.error(fullMessage);\n  }\n\n  constructor(threshold: LoggingLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n// As float in ECMAScript use 64-bit format it cannot have/handle more than 15 symbols after dot.\nconst maxDigitsInFloatAfterDot = 15;\n\nexport default class Numbers {\n  static countNumberLength(value: number): number {\n    let incrementForNegativeValue = 0;\n    let number = value;\n\n    if (number < 0) {\n      number *= -1;\n      incrementForNegativeValue++;\n    }\n\n    return Numbers.countDigitsBeforeDecimal(number) + incrementForNegativeValue + (number !== Math.floor(number) ? Numbers.countDigitsAfterDecimal(number) + 1 : 0);\n  }\n\n  private static fixRounding(value: number, precision: number): number {\n    const power = Math.pow(10, precision);\n\n    return Math.round(value * power) / power;\n  }\n\n  private static countDigitsBeforeDecimal(value: number): number {\n    let digitsBeforeDecimal = 1;\n    let number = value;\n\n    while (number >= 10) {\n      number = number / 10;\n      digitsBeforeDecimal++;\n    }\n\n    return digitsBeforeDecimal;\n  }\n\n  private static countDigitsAfterDecimal(value: number): number {\n    const originalValue = value;\n    let modifiedValue = Math.floor(value);\n    let count = 0;\n\n    while (modifiedValue !== originalValue && count < maxDigitsInFloatAfterDot) {\n      count++;\n      modifiedValue = Numbers.fixRounding(originalValue, count);\n    }\n\n    return count;\n  }\n\n  private constructor() {\n    throw new Error('Numbers is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\ndeclare const __BUILD_VERSION__: string;\n\nexport default class VersionManager {\n  private static _defaultVersion = new Date().toISOString();\n\n  static get sdkVersion(): string {\n    try {\n      return __BUILD_VERSION__;\n    } catch (e) {\n      return this._defaultVersion;\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {LoggingLevel} from '../logger/Logger';\nimport Numbers from '../lang/Numbers';\nimport VersionManager from '../sdk/version/VersionManager';\nimport TelemetryConfiguration from './TelemetryConfiguration';\n\nconst requestSizeLimit = 8192;\n\ninterface ILogItem {\n  timestamp: string;\n  tenancy: string;\n  level: string;\n  category: string;\n  message: string;\n  sessionId: string;\n  version: string;\n  environment: string;\n  fullQualifiedName: string;\n  runtime: number;\n}\n\nexport default class TelemetryService {\n  private readonly _telemetryConfiguration: TelemetryConfiguration;\n\n  private _logs: Array<ILogItem> = [];\n  private _isSending: boolean;\n  private _domain = location.hostname;\n\n  constructor(telemetryConfiguration: TelemetryConfiguration) {\n    this._telemetryConfiguration = telemetryConfiguration;\n  }\n\n  push(logLevel: LoggingLevel, message: string, category: string, timestamp: Date): void {\n    const runtime = (timestamp.valueOf() - this._telemetryConfiguration.pageLoadTime) / 1000;\n    const logRecord = {\n      timestamp: timestamp.toISOString(),\n      tenancy: this._telemetryConfiguration.tenancy,\n      level: LoggingLevel[logLevel],\n      category,\n      message,\n      sessionId: this._telemetryConfiguration.sessionId,\n      version: VersionManager.sdkVersion,\n      environment: this._telemetryConfiguration.environment,\n      fullQualifiedName: this._domain,\n      runtime\n    };\n\n    if (logLevel < LoggingLevel.Error) {\n      this._logs.push(logRecord);\n    } else {\n      this._logs.unshift(logRecord);\n    }\n\n    const ignored = this.sendLogsIfAble();\n  }\n\n  private async sendLogs(logMessages: Array<ILogItem>): Promise<Response | void> {\n    const formData = new FormData();\n\n    formData.append('jsonBody', JSON.stringify({records: logMessages}));\n\n    return await fetch(this._telemetryConfiguration.url, {\n      method: 'POST',\n      body: formData\n    });\n  }\n\n  private async sendLogsIfAble(): Promise<Response | void> {\n    if (this._logs.length <= 0 || this._isSending) {\n      return;\n    }\n\n    let numberOfLogsToSend = 0;\n    let sizeOfLogsToSend = 0;\n\n    this._isSending = true;\n\n    const getItemSize = item => typeof item === 'number' ? Numbers.countNumberLength(item) : item.length;\n    const getLogSize = (log: ILogItem): number => Object.values(log)\n      .reduce((sum, item) => sum + (item ? getItemSize(item) : 0), 0);\n\n    while (this._logs.length > numberOfLogsToSend && getLogSize(this._logs[numberOfLogsToSend]) + sizeOfLogsToSend < requestSizeLimit) {\n      sizeOfLogsToSend += getLogSize(this._logs[numberOfLogsToSend]);\n      numberOfLogsToSend++;\n    }\n\n    if (!numberOfLogsToSend) {\n      this._logs[numberOfLogsToSend].message = this._logs[numberOfLogsToSend].message.substring(0,\n        getLogSize(this._logs[numberOfLogsToSend]) + (requestSizeLimit - getLogSize(this._logs[numberOfLogsToSend])));\n      numberOfLogsToSend = 1;\n    }\n\n    const logMessages = this._logs.slice(0, numberOfLogsToSend);\n\n    this._logs = this._logs.slice(numberOfLogsToSend);\n\n    return this.sendLogs(logMessages).then(response => {\n      this._isSending = false;\n\n      const ignored = this.sendLogsIfAble();\n\n      return response;\n    }).catch(() => {\n      this._isSending = false;\n\n      const ignored = this.sendLogsIfAble();\n    });\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryService from './TelemetryService';\nimport TelemetryConfiguration from './TelemetryConfiguration';\nimport {IAppender} from '../logger/IAppender';\nimport {LoggingLevel} from '../logger/Logger';\n\nexport default class TelemetryAppender implements IAppender {\n  private readonly _telemetryService: TelemetryService;\n  private readonly _tenancy: string;\n  private readonly _sessionId: string;\n  private readonly _threshold: LoggingLevel;\n\n  constructor(telemetryConfiguration: TelemetryConfiguration) {\n    this._tenancy = telemetryConfiguration.tenancy;\n    this._sessionId = telemetryConfiguration.sessionId;\n    this._threshold = telemetryConfiguration.threshold;\n    this._telemetryService = new TelemetryService(telemetryConfiguration);\n  }\n\n  log(logLevel: LoggingLevel, message: string, category: string, date: Date): void {\n    if (logLevel < this._threshold) {\n      return;\n    }\n\n    this._telemetryService.push(logLevel, message, category, date);\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {LoggingLevel} from '../logger/Logger';\nimport LoggerDefaults from '../logger/LoggerDefaults';\n\nexport default class TelemetryConfiguration {\n  private _url = 'https://telemetry.phenixrts.com/telemetry/logs';\n  private _tenancy: string;\n  private _sessionId: string;\n  private _environment: string;\n  private _pageLoadTime: number;\n  private _threshold = LoggerDefaults.defaultTelemetryLoggingLevel;\n\n  get url(): string {\n    return this._url;\n  }\n\n  set url(url: string) {\n    const telemetryUrl = new URL(url);\n\n    telemetryUrl.pathname = telemetryUrl.pathname + '/logs';\n\n    this._url = telemetryUrl.toString();\n  }\n\n  get environment(): string {\n    return this._environment;\n  }\n\n  set environment(environment: string) {\n    this._environment = environment;\n  }\n\n  get tenancy(): string {\n    return this._tenancy;\n  }\n\n  set tenancy(tenancy: string) {\n    this._tenancy = tenancy;\n  }\n\n  get sessionId(): string {\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: string) {\n    this._sessionId = sessionId;\n  }\n\n  get pageLoadTime(): number {\n    return this._pageLoadTime;\n  }\n\n  set pageLoadTime(pageLoadTime: number) {\n    this._pageLoadTime = pageLoadTime;\n  }\n\n  get threshold(): LoggingLevel {\n    return this._threshold;\n  }\n\n  set threshold(threshold: LoggingLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryDefault from './TelemetryDefault';\n\nexport enum TelemetryLevel {\n  Off = 100,\n  Essential = 10,\n  All = -1\n}\n\nexport type TelemetryLevelType = 'Off' | 'Essential' | 'All';\n\nexport default class MetricsConfiguration {\n  private _url = 'https://telemetry.phenixrts.com/telemetry/metrics';\n  private _tenancy: string;\n  private _sessionId: string;\n  private _environment: string;\n  private _threshold: TelemetryLevel = TelemetryDefault.defaultTelemetryLevel;\n\n  get url(): string {\n    return this._url;\n  }\n\n  set url(url: string) {\n    const metricsUrl = new URL(url);\n\n    metricsUrl.pathname = metricsUrl.pathname + '/metrics';\n\n    this._url = metricsUrl.toString();\n  }\n\n  get environment(): string {\n    return this._environment;\n  }\n\n  set environment(environment: string) {\n    this._environment = environment;\n  }\n\n  get tenancy(): string {\n    return this._tenancy;\n  }\n\n  set tenancy(tenancy: string) {\n    this._tenancy = tenancy;\n  }\n\n  get sessionId(): string {\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: string) {\n    this._sessionId = sessionId;\n  }\n\n  get threshold(): TelemetryLevel {\n    return this._threshold;\n  }\n\n  set threshold(threshold: TelemetryLevel) {\n    this._threshold = threshold;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport BuildFeatures from '../environment/BuildFeatures';\nimport {TelemetryLevel} from '../metrics/MetricsConfiguration';\n\nexport default class TelemetryDefault {\n  static get defaultTelemetryLevel(): TelemetryLevel {\n    return TelemetryLevel[BuildFeatures.sendMetrics];\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport function assertUnreachable(x: never): never {\n  throw new Error(`Unexpected value [${x}]. This should never be reached`);\n}\n\nexport default assertUnreachable;","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {TelemetryLevel, TelemetryLevelType} from './MetricsConfiguration';\nimport assertUnreachable from '../lang/assertUnreachable';\n\nexport default class TelemetryLevelMapping {\n  static convertTelemetryLevelToTelemetryLevelType(telemetryLevel: TelemetryLevel): TelemetryLevelType {\n    switch (telemetryLevel) {\n      case TelemetryLevel.Off:\n        return 'Off';\n      case TelemetryLevel.Essential:\n        return 'Essential';\n      case TelemetryLevel.All:\n        return 'All';\n      default:\n        assertUnreachable(telemetryLevel);\n    }\n  }\n\n  static convertTelemetryLevelTypeToTelemetryLevel(telemetryLevelType: TelemetryLevelType): TelemetryLevel {\n    switch (telemetryLevelType) {\n      case 'Off':\n        return TelemetryLevel.Off;\n      case 'Essential':\n        return TelemetryLevel.Essential;\n      case 'All':\n        return TelemetryLevel.All;\n      default:\n        assertUnreachable(telemetryLevelType);\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport assertUnreachable from '../lang/assertUnreachable';\nimport {LoggingLevel, LoggingLevelType} from './Logger';\n\nexport default class LoggingLevelMapping {\n  static convertLoggingLevelToLoggingLevelType(loggingLevel: LoggingLevel): LoggingLevelType {\n    switch (loggingLevel) {\n      case LoggingLevel.Off:\n        return 'Off';\n      case LoggingLevel.Trace:\n        return 'Trace';\n      case LoggingLevel.Debug:\n        return 'Debug';\n      case LoggingLevel.Info:\n        return 'Trace';\n      case LoggingLevel.Warn:\n        return 'Warn';\n      case LoggingLevel.Error:\n        return 'Error';\n      case LoggingLevel.Fatal:\n        return 'Fatal';\n      case LoggingLevel.All:\n        return 'All';\n      default:\n        assertUnreachable(loggingLevel);\n    }\n  }\n\n  static convertLoggingLevelTypeToLoggingLevel(loggingLevelType: LoggingLevelType): LoggingLevel {\n    switch (loggingLevelType) {\n      case 'Off':\n        return LoggingLevel.Off;\n      case 'Trace':\n        return LoggingLevel.Trace;\n      case 'Debug':\n        return LoggingLevel.Debug;\n      case 'Info':\n        return LoggingLevel.Info;\n      case 'Warn':\n        return LoggingLevel.Warn;\n      case 'Error':\n        return LoggingLevel.Error;\n      case 'Fatal':\n        return LoggingLevel.Fatal;\n      case 'All':\n        return LoggingLevel.All;\n      default:\n        assertUnreachable(loggingLevelType);\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport TelemetryDefault from '../metrics/TelemetryDefault';\nimport TelemetryLevelMapping from '../metrics/TelemetricLevelMapping';\nimport LoggingLevelMapping from '../logger/LoggingLevelMapping';\nimport LoggerDefaults from '../logger/LoggerDefaults';\n\nexport default class ConfigurationParameterReader {\n  getStringValue(name: string): string {\n    return this.readConfigurationParameterValue(name) ||\n      this.readConfigurationParameterURIValue(`${name}-uri-parameter-name`) ||\n      this.defaultStringValue[name];\n  }\n\n  getBooleanValue(name: string): boolean {\n    const value = this.readConfigurationParameterValue(name);\n\n    if (value) {\n      return value === 'true' || value === '1' || value === 'On';\n    }\n\n    const valueFromUri = this.readConfigurationParameterURIValue(`${name}-uri-parameter-name`);\n\n    if (valueFromUri) {\n      return valueFromUri === 'true' || valueFromUri === '1' || valueFromUri === 'On';\n    }\n\n    return this.defaultBooleanValue[name] === true;\n  }\n\n  private get defaultStringValue(): { [name: string]: string} {\n    return {\n      'phenix-metrics-level': TelemetryLevelMapping.convertTelemetryLevelToTelemetryLevelType(TelemetryDefault.defaultTelemetryLevel),\n      'phenix-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultLoggingLevel),\n      'phenix-console-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultConsoleLoggingLevel),\n      'phenix-telemetry-logging-level': LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(LoggerDefaults.defaultTelemetryLoggingLevel),\n      'phenix-channel-token': '',\n      'phenix-uri': '',\n      'phenix-base-uri': ''\n    };\n  }\n\n  private get defaultBooleanValue(): { [name: string]: boolean } {\n    return {\n      'phenix-automatically-retry-on-failure': true,\n      'phenix-automatically-reconnect-peer-connection': true,\n      'phenix-force-garbage-collection-on-restart': true,\n      'phenix-skip-garbage-collection-on-mobile-devices': true\n    };\n  }\n\n  private readConfigurationParameterValue(name: string): string {\n    const metaValue = document.querySelector(`meta[name='${name}']`);\n\n    if (!metaValue) {\n      return;\n    }\n\n    const value = metaValue.getAttribute('value');\n\n    if (!value) {\n      return;\n    }\n\n    return value;\n  }\n\n  private readConfigurationParameterURIValue(name: string): string {\n    const valueURIParameterName = this.readConfigurationParameterValue(name);\n\n    if (!valueURIParameterName) {\n      return;\n    }\n\n    const value = new URLSearchParams(location.search).get(valueURIParameterName) || undefined;\n\n    if (!value) {\n      return;\n    }\n\n    return value;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {ILogger} from './LoggerInterface';\nimport Logger, {LoggingLevel} from './Logger';\nimport Appenders from './Appenders';\nimport LoggingThreshold from './LoggingThreshold';\nimport ConsoleAppender from './ConsoleAppender';\nimport TelemetryAppender from '../telemetry/TelemetryApender';\nimport TelemetryConfiguration from '../telemetry/TelemetryConfiguration';\nimport ConfigurationParameterReader from '../dom/ConfigurationParameterReader';\nimport {IConfigurationParameterReader} from '../dom/IConfigurationParamaterReader';\nimport LoggerDefaults from './LoggerDefaults';\n\nexport default class LoggerFactory {\n  private static _configurationParameterReader: IConfigurationParameterReader = new ConfigurationParameterReader();\n  private static _loggers: {[category: string]: ILogger} = {};\n  private static _appenders: Appenders = new Appenders();\n  private static _threshold: LoggingThreshold = new LoggingThreshold();\n  private static _telemetryConfiguration: TelemetryConfiguration = new TelemetryConfiguration();\n\n  static get telemetryConfiguration(): TelemetryConfiguration {\n    return LoggerFactory._telemetryConfiguration;\n  }\n\n  static getLogger(category: string): ILogger {\n    if (typeof category !== 'string') {\n      category = 'SDK';\n    }\n\n    const logger = LoggerFactory._loggers[category];\n\n    if (logger) {\n      return logger;\n    }\n\n    return LoggerFactory._loggers[category] = new Logger(category, this._appenders, this._threshold);\n  }\n\n  static applyLoggerConfigFromParameterConfiguration(): void {\n    LoggerFactory.applyLoggingLevel();\n    LoggerFactory.applyAppenderLoggingLevel('console', LoggerFactory.applyConsoleLogger.bind(this));\n    LoggerFactory.applyAppenderLoggingLevel('telemetry', LoggerFactory.applyTelemetryLogger.bind(this));\n  }\n\n  private static applyLoggingLevel(): void {\n    const parameterValue = this._configurationParameterReader.getStringValue('phenix-logging-level');\n\n    if (LoggingLevel[parameterValue]) {\n      this._threshold.setThreshold(LoggingLevel[parameterValue]);\n    }\n\n    return;\n  }\n\n  private static applyAppenderLoggingLevel(name: string, applyAppender: (level: LoggingLevel) => void): void {\n    const parameterValue = this._configurationParameterReader.getStringValue(`phenix-${name}-logging-level`);\n\n    if (parameterValue === 'Off') {\n      return;\n    }\n\n    applyAppender(LoggingLevel[parameterValue]);\n  }\n\n  private static applyConsoleLogger(level: LoggingLevel): void {\n    this._appenders.add(new ConsoleAppender(level || LoggerDefaults.defaultConsoleLoggingLevel));\n  }\n\n  private static applyTelemetryLogger(level: LoggingLevel): void {\n    this._telemetryConfiguration.threshold = level || LoggerDefaults.defaultTelemetryLoggingLevel;\n\n    this._appenders.add(new TelemetryAppender(this._telemetryConfiguration));\n  }\n\n  private constructor() {\n    throw new Error('LoggerFactory is a static class that may not be instantiated');\n  }\n}\n\nLoggerFactory.applyLoggerConfigFromParameterConfiguration();","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class Strings {\n  static random(length: number): string {\n    const random13Characters = (): string => {\n      return Math.random().toString(16).substring(2, 15);\n    };\n\n    const loops: number = Math.ceil(length / 13);\n\n    return new Array(loops).fill(random13Characters).reduce((string, func) => {\n      return string + func();\n    }, '').substring(0, length);\n  }\n\n  private constructor() {\n    throw new Error('Strings is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IDisposable from './IDisposable';\n\nexport default class Disposable implements IDisposable {\n  private _disposed: boolean;\n  private _disposable: () => void;\n\n  constructor(disposable: () => void) {\n    this._disposed = false;\n    this._disposable = disposable;\n  }\n\n  dispose(): void {\n    if (this._disposed) {\n      return;\n    }\n\n    this._disposed = true;\n\n    return this._disposable.call(this);\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IDisposable from '../lang/IDisposable';\nimport Disposable from '../lang/Disposable';\nimport IComparable from '../lang/IComparable';\n\nclass DisposableListener<T> extends Disposable {\n  constructor(listeners: Array<T>, listener: T) {\n    super(() => {\n      const idx = listeners.indexOf(listener);\n\n      if (idx >= 0) {\n        listeners.splice(idx, 1);\n      }\n    });\n  }\n}\n\nexport default class Subject<T> {\n  private readonly _listeners: Array<(T) => void>;\n  private _value: T;\n\n  constructor(value: T) {\n    this._listeners = [];\n    this._value = value;\n  }\n\n  set value(value: T) {\n    let changed = this._value !== value;\n\n    if (changed && value) {\n      const comparable = value as unknown as IComparable<T>;\n\n      if (typeof comparable.equals === 'function') {\n        changed = !comparable.equals(this._value);\n      }\n    }\n\n    if (!changed) {\n      return;\n    }\n\n    this._value = value;\n\n    this._listeners.forEach(listener => {\n      listener(value);\n    });\n  }\n\n  get value(): T {\n    return this._value;\n  }\n\n  subscribe(listener: (T) => void): IDisposable {\n    this._listeners.push(listener);\n\n    listener(this._value);\n\n    return new DisposableListener<(T) => void>(this._listeners, listener);\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport Subject from './Subject';\nimport IDisposable from '../lang/IDisposable';\n\nexport default class ReadOnlySubject<T> {\n  private readonly _subject: Subject<T>;\n\n  constructor(subject: Subject<T>) {\n    this._subject = subject;\n  }\n\n  get value(): T {\n    return this._subject.value;\n  }\n\n  subscribe(listener: (T) => void): IDisposable {\n    return this._subject.subscribe(listener);\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\ninterface IToken {\n  uri: URL | null;\n  capabilities: string[];\n}\n\ninterface IEdgeToken {\n  applicationId: string;\n  token: IToken;\n}\n\nexport default class EdgeToken {\n  private readonly _applicationId: string;\n  private readonly _token: IToken;\n\n  constructor(edgeToken: IEdgeToken) {\n    this._applicationId = edgeToken?.applicationId || '';\n    this._token = {\n      uri: edgeToken?.token?.uri ? new URL(edgeToken.token.uri) : null,\n      capabilities: edgeToken?.token?.capabilities || []\n    };\n  }\n\n  get uri(): URL | null {\n    return this._token.uri;\n  }\n\n  get capabilities(): string[] {\n    return this._token.capabilities;\n  }\n\n  get tenancy(): string {\n    return this._applicationId;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport {ILogger} from '../logger/LoggerInterface';\nimport EdgeToken from './EdgeToken';\nimport {EncodedEdgeToken} from './EncodedEdgeToken';\n\nconst edgeAuthTokenPrefix = 'DIGEST:';\n\nexport default class EdgeAuthParser {\n  private static _logger: ILogger = LoggerFactory.getLogger('EdgeAuthParser');\n\n  static parseToken(token: EncodedEdgeToken): EdgeToken {\n    if (!this.isEncodedEdgeTokenValid(token)) {\n      EdgeAuthParser._logger.error('Token is not valid [%s]', token);\n\n      return new EdgeToken(null);\n    }\n\n    try {\n      const decodedToken = atob(token.substr(edgeAuthTokenPrefix.length));\n      const edgeToken = JSON.parse(decodedToken);\n\n      edgeToken.token = JSON.parse(edgeToken.token);\n\n      return new EdgeToken(edgeToken);\n    } catch (e) {\n      EdgeAuthParser._logger.error('Cannot parse token value', e);\n\n      return new EdgeToken(null);\n    }\n  }\n\n  static isEncodedEdgeTokenValid(token: EncodedEdgeToken): boolean {\n    return !!token && token.startsWith(edgeAuthTokenPrefix);\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IDisposable from './IDisposable';\n\nexport default class DisposableList {\n  private readonly _list: IDisposable[] = [];\n\n  add(disposable: IDisposable): void {\n    this._list.push(disposable);\n  }\n\n  dispose(): void {\n    this._list.forEach(disposable => disposable.dispose());\n    this._list.length = 0;\n  }\n\n  toString(): string {\n    return `DisposableList[disposables=${this._list.length}]`;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Disposable from '../lang/Disposable';\nimport Subject from '../rx/Subject';\nimport ReadOnlySubject from '../rx/ReadOnlySubject';\nimport DisposableList from '../lang/DisposableList';\n\nconst defaultDocumentFocusIntervalTimeout = 3000;\n\nexport default class ApplicationActivityMonitor {\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _readOnlyIsForeground: ReadOnlySubject<boolean>;\n  private readonly _isForeground: Subject<boolean>;\n  private _timeOfLastTabFocusChange: number = Date.now();\n  private _documentFocusInterval: number;\n\n  constructor() {\n    this._isForeground = new Subject<boolean>(true);\n    this._readOnlyIsForeground = new ReadOnlySubject(this._isForeground);\n    this.detectTabFocusChange();\n  }\n\n  get isForeground(): ReadOnlySubject<boolean> {\n    return this._readOnlyIsForeground;\n  }\n\n  getTimeSinceLastChange(): number {\n    return Date.now() - this._timeOfLastTabFocusChange;\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private detectTabFocusChange(): void {\n    let hidden;\n    let visibilityChange;\n\n    if (typeof document !== 'object') {\n      return;\n    }\n\n    // Due to typescript not having a definition for 'msHidden' or 'webkitHidden' types\n    // Required to @ts-ignore to prevent typescript errors\n    /* eslint-disable @typescript-eslint/ban-ts-comment */\n    // @ts-ignore\n    if (typeof document.msHidden !== 'undefined') {\n      hidden = 'msHidden';\n      visibilityChange = 'msvisibilitychange';\n      // @ts-ignore\n    } else if (typeof document.webkitHidden !== 'undefined') {\n      hidden = 'webkitHidden';\n      visibilityChange = 'webkitvisibilitychange';\n    } else if (typeof document.hidden !== 'undefined') { // Opera 12.10 and Firefox 18 and later support\n      hidden = 'hidden';\n      visibilityChange = 'visibilitychange';\n    }\n    /* eslint-enable @typescript-eslint/ban-ts-comment */\n\n    const handleVisibilityChange = (): void => {\n      const isForeground = !document[hidden];\n\n      this.setFocusState(isForeground);\n    };\n\n    if (typeof document.addEventListener !== 'undefined' && typeof document[hidden] !== 'undefined') {\n      document.addEventListener(visibilityChange, handleVisibilityChange, false);\n\n      this._disposables.add(new Disposable(() => {\n        document.removeEventListener(visibilityChange, handleVisibilityChange, false);\n      }));\n    } else {\n      this.listenForDocumentFocus.call(this);\n    }\n  }\n\n  private listenForDocumentFocus(): void {\n    this._documentFocusInterval = window.setInterval(() => {\n      const isForeground = document.hasFocus();\n\n      this.setFocusState(isForeground);\n    }, defaultDocumentFocusIntervalTimeout);\n\n    this._disposables.add(new Disposable(() => {\n      if (this._documentFocusInterval) {\n        clearInterval(this._documentFocusInterval);\n      }\n\n      this._documentFocusInterval = null;\n    }));\n  }\n\n  private setFocusState(isForeground): void {\n    if (this._isForeground === isForeground) {\n      return;\n    }\n\n    this._isForeground.value = isForeground;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport IPeerConnection, {PeerConnectionEvents} from './IPeerConnection';\nimport {ILogger} from '../logger/LoggerInterface';\nimport FeatureEnablement from '../environment/FeatureEnablement';\nimport {ILegacyRTCStatsReport} from './RtcConnectionMonitor';\n\nclass VanillaPeerConnection implements IPeerConnection {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('VanillaPeerConnection');\n  private _peerConnection: RTCPeerConnection;\n\n  constructor(configuration?: RTCConfiguration) {\n    if (FeatureEnablement.webkitRTCPeerConnectionEnabled) {\n      // Ignored as legacy webkitRTCPeerConnection class is deprecated\n      // This was a Chrome specific implementation\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this._peerConnection = new webkitRTCPeerConnection(configuration);\n\n      return;\n    }\n\n    this._peerConnection = new RTCPeerConnection(configuration);\n  }\n\n  get native(): RTCPeerConnection | null {\n    return this._peerConnection;\n  }\n\n  get currentLocalDescription(): RTCSessionDescription | null {\n    return this._peerConnection.currentLocalDescription;\n  }\n\n  get currentRemoteDescription(): RTCSessionDescription | null {\n    return this._peerConnection.currentRemoteDescription;\n  }\n\n  get connectionState(): RTCPeerConnectionState {\n    return this._peerConnection.connectionState;\n  }\n\n  get iceConnectionState(): RTCIceConnectionState {\n    return this._peerConnection.iceConnectionState;\n  }\n\n  get supportsGetConfiguration(): boolean {\n    return typeof this._peerConnection.getConfiguration === 'function';\n  }\n\n  get supportsSetConfiguration(): boolean {\n    return typeof this._peerConnection.setConfiguration === 'function';\n  }\n\n  get supportsAddTransceiver(): boolean {\n    return !FeatureEnablement.addTranceiverDisabled && typeof this._peerConnection.addTransceiver === 'function';\n  }\n\n  async createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit> {\n    if (FeatureEnablement.promiseBasedPCMethodsDisabled) {\n      // Ignored as legacy createOffer method with callbacks is deprecated\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return new Promise((resolve, reject) => this._peerConnection.createOffer(resolve, reject, options));\n    }\n\n    return this._peerConnection.createOffer(options);\n  }\n\n  async createAnswer(options?: RTCAnswerOptions): Promise<RTCSessionDescriptionInit> {\n    if (FeatureEnablement.promiseBasedPCMethodsDisabled) {\n      // Ignored as legacy createAnswer method with callbacks is deprecated\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return new Promise((resolve, reject) => this._peerConnection.createAnswer(resolve, reject, options));\n    }\n\n    return this._peerConnection.createAnswer(options);\n  }\n\n  async setLocalDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    return this._peerConnection.setLocalDescription(FeatureEnablement.promiseBasedPCMethodsDisabled ?\n      new RTCSessionDescription(description) : description);\n  }\n\n  async setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    const hasCrypto = description.sdp?.match(/a=crypto:/i);\n\n    if (hasCrypto) {\n      this._logger.warn('SDP a=crypto is not supported');\n    }\n\n    return this._peerConnection.setRemoteDescription(FeatureEnablement.promiseBasedPCMethodsDisabled ?\n      new RTCSessionDescription(description) : description);\n  }\n\n  getSenders(): RTCRtpSender[] {\n    return this._peerConnection.getSenders();\n  }\n\n  getReceivers(): RTCRtpReceiver[] {\n    return this._peerConnection.getReceivers();\n  }\n\n  getStats(selector?: MediaStreamTrack | null): Promise<RTCStatsReport> {\n    return this._peerConnection.getStats(selector);\n  }\n\n  getStatsLegacy(): Promise<ILegacyRTCStatsReport> {\n    return new Promise(resolve => {\n      // Ignored due to typescript not having legacy 'getStats' method type definition\n      // This was a Chrome specific implementation of the 'getStats' method for\n      // Chrome@<= 66 detailed here: https://bugs.chromium.org/p/chromium/issues/detail?id=627816\n      // Requires a ts-ignore directive to prevent typescript errors\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const ignored = this._peerConnection.getStats(resolve);\n    });\n  }\n\n  addEventListener(type: PeerConnectionEvents, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\n    this._peerConnection.addEventListener(type, listener, options);\n  }\n\n  removeEventListener(type: PeerConnectionEvents, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void {\n    this._peerConnection.removeEventListener(type, listener, options);\n  }\n\n  addTransceiver(name: string, options: RTCRtpTransceiverInit): RTCRtpTransceiver {\n    return this._peerConnection.addTransceiver(name, options);\n  }\n\n  addStream(mediaStream: MediaStream): void {\n    mediaStream.getTracks().forEach(track => {\n      this._peerConnection.addTrack(track);\n    });\n  }\n\n  getConfiguration(): RTCConfiguration {\n    return this._peerConnection.getConfiguration();\n  }\n\n  setConfiguration(configuration: RTCConfiguration): void {\n    this._peerConnection.setConfiguration(configuration);\n  }\n\n  set ontrack(handler: ((this: RTCPeerConnection, ev: RTCTrackEvent) => unknown) | null) {\n    this._peerConnection.ontrack = handler;\n  }\n\n  get ontrack(): ((this: RTCPeerConnection, ev: RTCTrackEvent) => unknown) | null {\n    return this._peerConnection.ontrack;\n  }\n\n  set onicecandidate(handler: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown) | null) {\n    this._peerConnection.onicecandidate = handler;\n  }\n\n  get onicecandidate(): ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown) | null {\n    return this._peerConnection.onicecandidate;\n  }\n\n  set onconnectionstatechange(handler: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown) | null) {\n    this._peerConnection.onconnectionstatechange = handler;\n  }\n\n  get onconnectionstatechange(): ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown) | null {\n    return this._peerConnection.onconnectionstatechange;\n  }\n\n  set oniceconnectionstatechange(handler: ((this: RTCPeerConnection, ev: Event) => unknown) | null) {\n    this._peerConnection.oniceconnectionstatechange = handler;\n  }\n\n  get oniceconnectionstatechange(): ((this: RTCPeerConnection, ev: Event) => unknown) | null {\n    return this._peerConnection.oniceconnectionstatechange;\n  }\n\n  close(): void {\n    this._peerConnection.close();\n  }\n\n  dispose(): void {\n    this._peerConnection = null;\n  }\n}\n\nexport default VanillaPeerConnection;","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IPeerConnectionFactory from './IPeerConnectionFactory';\nimport IPeerConnection from './IPeerConnection';\nimport VanillaPeerConnection from './VanillaPeerConnection';\n\nclass VanillaPeerConnectionFactory implements IPeerConnectionFactory {\n  async createPeerConnection(configuration?: RTCConfiguration): Promise<IPeerConnection> {\n    return new VanillaPeerConnection(configuration);\n  }\n}\n\nexport default VanillaPeerConnectionFactory;","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport {ILogger} from '../logger/LoggerInterface';\nimport Subject from '../rx/Subject';\nimport FeatureEnablement from '../environment/FeatureEnablement';\nimport IPeerConnection from './IPeerConnection';\nimport IPeerConnectionFactory from './IPeerConnectionFactory';\nimport VanillaPeerConnectionFactory from './VanillaPeerConnectionFactory';\n\nexport interface IPeerConnectionOfferInit {\n  audioTransceiver?: RTCRtpTransceiver;\n  videoTransceiver?: RTCRtpTransceiver;\n  peerConnection: IPeerConnection;\n  localOffer: RTCSessionDescriptionInit;\n}\n\nexport default class PeerConnectionService {\n  private static _logger: ILogger = LoggerFactory.getLogger('PeerConnectionService');\n  private static readonly _peerConnectionFactory: Subject<IPeerConnectionFactory> = new Subject<IPeerConnectionFactory>(new VanillaPeerConnectionFactory());\n  private static _cached: {\n    direction?: RTCRtpTransceiverDirection;\n    peerConnection: Promise<IPeerConnectionOfferInit>;\n  };\n\n  static get peerConnectionFactory(): Subject<IPeerConnectionFactory> {\n    return PeerConnectionService._peerConnectionFactory;\n  }\n\n  static initiateInitialPrecaching(): void {\n    if (FeatureEnablement.isPrecachingEnabled) {\n      const ignored = PeerConnectionService.precacheCreatePeerConnectionOffer()\n        .catch(e => PeerConnectionService._logger.error('Failed to pre-cache peer connection offer', e));\n    }\n  }\n\n  static async precacheCreatePeerConnectionOffer(): Promise<{ peerConnection: Promise<IPeerConnectionOfferInit | void>; direction: RTCRtpTransceiverDirection }> {\n    return PeerConnectionService._cached = {\n      direction: 'recvonly',\n      peerConnection: PeerConnectionService.createPeerConnectionOffer()\n        .catch(e => {\n          PeerConnectionService._cached = null;\n\n          throw e;\n        })\n    };\n  }\n\n  static async createPeerConnectionOffer(direction: RTCRtpTransceiverDirection = 'recvonly', encodedInsertableStreams = false): Promise<IPeerConnectionOfferInit> {\n    if (PeerConnectionService._cached && PeerConnectionService._cached.direction === direction && !encodedInsertableStreams) {\n      const value = PeerConnectionService._cached.peerConnection;\n\n      PeerConnectionService._cached = null;\n\n      return value;\n    }\n\n    const configuration: RTCConfiguration = FeatureEnablement.isEncodedInsertableStreamsSupported ? {encodedInsertableStreams} : undefined;\n\n    return PeerConnectionService._peerConnectionFactory.value.createPeerConnection(configuration)\n      .then(async peerConnection => {\n        const supportsAddTransceiver = peerConnection.supportsAddTransceiver;\n        let videoTransceiver, audioTransceiver;\n\n        if (supportsAddTransceiver) {\n          audioTransceiver = peerConnection.addTransceiver('audio', {direction});\n          videoTransceiver = peerConnection.addTransceiver('video', {direction});\n\n          return {\n            audioTransceiver,\n            videoTransceiver,\n            peerConnection: peerConnection,\n            localOffer: await peerConnection.createOffer(undefined)\n          };\n        }\n\n        const options = direction === 'recvonly' ? {\n          offerToReceiveAudio: true,\n          offerToReceiveVideo: true\n        } : {};\n\n        return {\n          peerConnection: peerConnection,\n          localOffer: await peerConnection.createOffer(options)\n        };\n      });\n  }\n\n  private constructor() {\n    throw new Error('PeerConnectionService is a static class that may not be instantiated');\n  }\n}\n\nPeerConnectionService.initiateInitialPrecaching();","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class TelemetryUrl {\n  static getTelemetryUrl(url: string): string {\n    try {\n      const baseURL = new URL(url);\n      const segments = baseURL.hostname.split('.');\n\n      switch (baseURL.protocol) {\n        case 'ws:':\n          baseURL.protocol = 'http:';\n\n          break;\n        case 'wss:':\n          baseURL.protocol = 'https:';\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (segments.length === 2 ||\n          (segments.length === 3 && segments[segments.length - 2].length <= 2 && segments[segments.length - 1].length <= 3)\n      ) {\n        segments.unshift('telemetry');\n      } else if (segments[0].startsWith('stg-') || segments[0].endsWith('-stg') || segments[0].includes('-stg-') || segments[0] === 'stg') {\n        segments[0] = 'telemetry-stg';\n      } else if (segments[0].startsWith('local') || segments[0].endsWith('-local')) {\n        // Leave URL unchanged\n      } else {\n        segments[0] = 'telemetry';\n      }\n\n      baseURL.hostname = segments.join('.');\n\n      return `${baseURL.origin}/telemetry`;\n    } catch (e) {\n      return url;\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class Environment {\n  static getEnvironmentFromUrl(url: string): string {\n    try {\n      const baseURL = new URL(url);\n\n      return baseURL.origin;\n    } catch (e) {\n      return '';\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\ndeclare const __PARAMETERS__: {\n  discovery: IDiscoveryParameter;\n};\n\ninterface IDiscoveryParameter{\n  intentions: string;\n}\n\nexport default class Parameters {\n  private static _discoveryParameters: IDiscoveryParameter ;\n\n  static get discoveryParameters(): IDiscoveryParameter {\n    return this._discoveryParameters;\n  }\n\n  static applyParameters(): void {\n    try {\n      const parameters = __PARAMETERS__;\n\n      this._discoveryParameters = 'discovery' in parameters ? parameters.discovery : {intentions: ''};\n    } catch (e) {\n      this._discoveryParameters = {intentions: ''};\n    }\n  }\n}\n\nParameters.applyParameters();","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport {defaultDiscoveryUri} from '../defaults';\nimport Subject from '../../rx/Subject';\nimport VersionManager from '../version/VersionManager';\nimport Parameters from '../../environment/Parameters';\n\nexport default class DiscoveryUri {\n  private static readonly _discoveryUri: Subject<string> = new Subject<string>(defaultDiscoveryUri);\n\n  static get uri(): Subject<string> {\n    return DiscoveryUri._discoveryUri;\n  }\n\n  static buildDiscoveryUrl(uri: URL): string {\n    const url = new URL(uri.toString());\n    const sdkVersion = VersionManager.sdkVersion;\n    const intentions = Parameters.discoveryParameters.intentions;\n\n    url.searchParams.set('version', sdkVersion);\n    url.searchParams.set('intentions', intentions);\n    url.searchParams.set('_', `${Date.now()}`);\n\n    if (url.pathname === '/') {\n      url.pathname = '/pcast/endPoints';\n    }\n\n    return url.toString();\n  }\n\n  private constructor() {\n    throw new Error('DiscoveryUri is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nconst defaultDiscoveryUri = 'https://pcast.phenixrts.com/pcast/endPoints';\n\nexport {defaultDiscoveryUri};","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nconst defaultBackoffIntervalInMillisecond = 2000;\nconst defaultMinBackoffIntervalInMillisecond = 1;\nconst defaultMaxBackoffIntervalInMillisecond = 300000;\n\nexport default class ExponentialBackoff {\n  private readonly _backoffIntervalInMillisecond: number;\n  private readonly _minBackoffIntervalInMillisecond: number;\n  private readonly _maxBackoffIntervalInMillisecond: number;\n\n  constructor(\n    backoffIntervalInMillisecond: number = defaultBackoffIntervalInMillisecond,\n    minBackoffIntervalInMillisecond: number = defaultMinBackoffIntervalInMillisecond,\n    maxBackoffIntervalInMillisecond: number = defaultMaxBackoffIntervalInMillisecond\n  ) {\n    this._backoffIntervalInMillisecond = backoffIntervalInMillisecond;\n    this._minBackoffIntervalInMillisecond = minBackoffIntervalInMillisecond;\n    this._maxBackoffIntervalInMillisecond = maxBackoffIntervalInMillisecond;\n  }\n\n  getExponentialBackoffIntervalByFailureCount(failureCount: number): number {\n    const backoffIntervalInSeconds = this._backoffIntervalInMillisecond / 1000;\n    const randomization = 0.5 + (0.5 * Math.random()); // [0.5, 1)\n    const exponentialBackoff = Math.pow(backoffIntervalInSeconds, failureCount - 2); //  [1/4 1/2 1 2 4 8 ....]\n    const exponentialBackoffWithRandomization = Math.floor(exponentialBackoff) * randomization;\n    const exponentialBackoffWithRandomizationInMillisecond = Math.ceil(Math.max(exponentialBackoffWithRandomization * 1000, this._minBackoffIntervalInMillisecond));\n\n    return Math.min(exponentialBackoffWithRandomizationInMillisecond, this._maxBackoffIntervalInMillisecond);\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nenum MetricsType {\n  TimeToFirstFrame,\n  ChannelCreationTimeToFirstFrame,\n  Stalled,\n  Buffering,\n  SetupCompleted,\n  SetupFailed,\n  RoundTripTime,\n  DownlinkThroughputCapacity,\n  NetworkType,\n  ResolutionChanged,\n  ApplicationForeground,\n  ApplicationBackground\n}\n\nexport default MetricsType;","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {TelemetryLevel} from './MetricsConfiguration';\nimport assertUnreachable from '../lang/assertUnreachable';\nimport MetricsType from './MetricsType';\n\nexport default class MetricType {\n  private readonly _metrics: MetricsType;\n\n  constructor(metrics: MetricsType) {\n    this._metrics = metrics;\n  }\n\n  getName(): string {\n    return MetricsType[this._metrics];\n  }\n\n  getTelemetryLevel(): TelemetryLevel {\n    switch (this._metrics) {\n      case MetricsType.TimeToFirstFrame:\n        return TelemetryLevel.Essential;\n      case MetricsType.ChannelCreationTimeToFirstFrame:\n        return TelemetryLevel.Essential;\n      case MetricsType.Stalled:\n        return TelemetryLevel.All;\n      case MetricsType.Buffering:\n        return TelemetryLevel.All;\n      case MetricsType.SetupCompleted:\n        return TelemetryLevel.All;\n      case MetricsType.SetupFailed:\n        return TelemetryLevel.All;\n      case MetricsType.RoundTripTime:\n        return TelemetryLevel.All;\n      case MetricsType.DownlinkThroughputCapacity:\n        return TelemetryLevel.All;\n      case MetricsType.NetworkType:\n        return TelemetryLevel.All;\n      case MetricsType.ResolutionChanged:\n        return TelemetryLevel.All;\n      case MetricsType.ApplicationForeground:\n        return TelemetryLevel.All;\n      case MetricsType.ApplicationBackground:\n        return TelemetryLevel.All;\n      default:\n        assertUnreachable(this._metrics);\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {ILogger} from '../logger/LoggerInterface';\nimport LoggerFactory from '../logger/LoggerFactory';\nimport ExponentialBackoff from '../time/ExponentialBackoff';\nimport VersionManager from '../sdk/version/VersionManager';\nimport MetricsConfiguration from './MetricsConfiguration';\nimport MetricType from './MetricType';\nimport MetricsType from './MetricsType';\n\nconst requestSizeLimit = 1024;\nconst maxBufferedRecords = 2048;\n\ninterface IValue {\n  string?: string;\n  uint64?: number;\n  float?: number;\n}\n\ninterface IMetricRecord {\n  timestamp: string;\n  tenancy: string;\n  sessionId: string;\n  streamId: string;\n  metric: string;\n  value: IValue;\n  previousValue: IValue;\n  fullQualifiedName: string;\n  environment: string;\n  version: string;\n  runtime: number;\n  resource?: string;\n  kind?: string;\n}\n\ninterface IMetric {\n  streamId?: string;\n  metricType: MetricsType;\n  value?: IValue;\n  previousValue?: IValue;\n  runtime: number;\n  resource?: string;\n  kind?: string;\n}\n\nexport default class MetricsService {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('MetricsService');\n  private readonly _metricsConfiguration: MetricsConfiguration;\n  private readonly _exponentialBackoff: ExponentialBackoff;\n  private _metrics: Array<IMetricRecord> = [];\n  private _isSending: boolean;\n  private _failureCount = 0;\n  private _domain = location.hostname;\n\n  constructor(metricsConfiguration: MetricsConfiguration) {\n    this._metricsConfiguration = metricsConfiguration;\n    this._exponentialBackoff = new ExponentialBackoff();\n  }\n\n  get metricsConfiguration(): MetricsConfiguration {\n    return this._metricsConfiguration;\n  }\n\n  push(metric: IMetric): void {\n    const {streamId, value, previousValue, runtime, resource, kind} = metric;\n    const metricType = new MetricType(metric.metricType);\n\n    if (this._metricsConfiguration.threshold > metricType.getTelemetryLevel()) {\n      return;\n    }\n\n    const metricRecord = {\n      timestamp: new Date().toISOString(),\n      tenancy: this._metricsConfiguration.tenancy,\n      sessionId: this._metricsConfiguration.sessionId,\n      streamId,\n      metric: metricType.getName(),\n      value,\n      previousValue,\n      fullQualifiedName: this._domain,\n      environment: this._metricsConfiguration.environment,\n      version: VersionManager.sdkVersion,\n      runtime,\n      resource,\n      kind\n    };\n\n    this._metrics.push(metricRecord);\n\n    const ignored = this.sendMetricsIfAble();\n  }\n\n  private async sendMetrics(metricsMessages: Array<IMetricRecord>): Promise<Response> {\n    const formData = new FormData();\n\n    formData.append('jsonBody', JSON.stringify({records: metricsMessages}));\n\n    return await fetch(this._metricsConfiguration.url, {\n      method: 'POST',\n      body: formData\n    });\n  }\n\n  private async sendMetricsIfAble(): Promise<Response | void> {\n    if (this._metrics.length <= 0 || this._isSending) {\n      return;\n    }\n\n    this._isSending = true;\n\n    const metricsMessages = this._metrics.slice(0, requestSizeLimit);\n\n    this._metrics = this._metrics.slice(requestSizeLimit);\n\n    return this.sendMetrics(metricsMessages).then(response => {\n      if (this.isResponseStatusCodeRetryable(response)) {\n        if (this._metrics.length <= maxBufferedRecords) {\n          this._failureCount++;\n\n          setTimeout(() => {\n            this._metrics = [...metricsMessages, ...this._metrics];\n\n            this._isSending = false;\n\n            const ignored = this.sendMetricsIfAble();\n          }, this._exponentialBackoff.getExponentialBackoffIntervalByFailureCount(this._failureCount));\n\n          return;\n        }\n\n        this._logger.error('Too many cached metric records [%s], dropping [%s] records', this._metrics.length, metricsMessages.length);\n      }\n\n      this._isSending = false;\n      this._failureCount = 0;\n\n      const ignored = this.sendMetricsIfAble();\n\n      return response;\n    }).catch(() => {\n      this._isSending = false;\n\n      const ignored = this.sendMetricsIfAble();\n    });\n  }\n\n  private isResponseStatusCodeRetryable({status}: Response): boolean {\n    return /^5\\d{2}$/.test(status.toString());\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport MetricsService from './MetricsService';\nimport MetricsConfiguration, {TelemetryLevel} from './MetricsConfiguration';\nimport SDK from '../sdk/SDK';\nimport TelemetryUrl from '../sdk/TelemetryUrl';\nimport Environment from '../sdk/Environment';\nimport TelemetryLevelMapping from './TelemetricLevelMapping';\n\nexport default class MetricsFactory {\n  private static _metricsServices: {[category: string]: MetricsService} = {};\n\n  static getMetricsService(url: string): MetricsService {\n    if (typeof url !== 'string') {\n      throw new Error('ur');\n    }\n\n    const metricsServices = MetricsFactory._metricsServices[url];\n\n    if (metricsServices) {\n      return metricsServices;\n    }\n\n    const metricsConfiguration = new MetricsConfiguration();\n\n    metricsConfiguration.sessionId = SDK.clientSessionId;\n    metricsConfiguration.tenancy = SDK.tenancy.value;\n    metricsConfiguration.url = TelemetryUrl.getTelemetryUrl(url);\n    metricsConfiguration.environment = Environment.getEnvironmentFromUrl(url);\n\n    metricsConfiguration.threshold = TelemetryLevelMapping.convertTelemetryLevelTypeToTelemetryLevel(SDK.telemetryLevel);\n\n    return MetricsFactory._metricsServices[url] = new MetricsService(metricsConfiguration);\n  }\n\n  static setTelemetryLevel(telemetryLevel: TelemetryLevel): void {\n    const metricsServices = Object.values(MetricsFactory._metricsServices);\n\n    if (metricsServices && metricsServices.length) {\n      metricsServices.forEach(metricsService => {\n        const metricsConfiguration = metricsService.metricsConfiguration;\n\n        metricsConfiguration.threshold = telemetryLevel;\n      });\n    }\n  }\n\n  private constructor() {\n    throw new Error('LoggerFactory is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport Strings from '../lang/Strings';\nimport Subject from '../rx/Subject';\nimport ReadOnlySubject from '../rx/ReadOnlySubject';\nimport EdgeAuthParser from '../edgeAuth/EdgeAuthParser';\nimport {ILogger} from '../logger/LoggerInterface';\nimport {LoggingLevel, LoggingLevelType} from '../logger/Logger';\nimport ConsoleAppender from '../logger/ConsoleAppender';\nimport TelemetryAppender from '../telemetry/TelemetryApender';\nimport ConfigurationParameterReader from '../dom/ConfigurationParameterReader';\nimport MetricsConfiguration, {TelemetryLevel, TelemetryLevelType} from '../metrics/MetricsConfiguration';\nimport MetricsService from '../metrics/MetricsService';\nimport TelemetryLevelMapping from '../metrics/TelemetricLevelMapping';\nimport LoggingLevelMapping from '../logger/LoggingLevelMapping';\nimport BuildFeatures from '../environment/BuildFeatures';\nimport BrowserDetector from '../dom/BrowserDetector';\nimport {IConfigurationParameterReader} from '../dom/IConfigurationParamaterReader';\nimport ApplicationActivityMonitor from '../dom/ApplicationActivityMonitor';\nimport IPeerConnectionFactory from '../rtc/IPeerConnectionFactory';\nimport PeerConnectionService from '../rtc/PeerConnectionService';\nimport TelemetryUrl from './TelemetryUrl';\nimport Environment from './Environment';\nimport {HlsPlayerType, ShakaType, WebPlayerType} from './streaming/StreamTypes';\nimport DiscoveryUri from './discovery/DiscoveryUri';\nimport MetricsFactory from '../metrics/MetricsFactory';\nimport TelemetryDefault from '../metrics/TelemetryDefault';\n\nconst pageLoadTime = window['__phenixPageLoadTime'] || window['__pageLoadTime'] || Date.now();\n\ninterface IInitOptions {\n  discoveryUri?: string;\n  peerConnectionFactory?: IPeerConnectionFactory;\n  telemetryLevel?: TelemetryLevelType;\n  loggingLevel?: LoggingLevelType;\n  consoleLoggingLevel?: LoggingLevelType;\n  automaticallyPlayMediaStream?: boolean;\n  automaticallyMuteVideoOnPlayFailure?: boolean;\n  webPlayerLoader?: (player: WebPlayerType) => void;\n  shakaPlayerLoader?: (player: ShakaType) => void;\n  hlsJsLoader?: (player: HlsPlayerType) => void;\n}\n\nexport default class SDK {\n  private static _automaticallyRetryOnFailure = true;\n  private static _automaticallyReconnectPeerConnection = true;\n  private static _automaticallyPlayMediaStream = true;\n  private static _automaticallyMuteVideoOnPlayFailure = true;\n  private static _forceGarbageCollectionOnRestart = true;\n  private static _skipGarbageCollectionOnMobileDevices = true;\n  private static _webPlayerLoader = null;\n  private static _shakaPlayerLoader = null;\n  private static _hlsJsLoader = null;\n  private static _configurationParameterReader: IConfigurationParameterReader = new ConfigurationParameterReader();\n  private static _applicationActivityMonitor: ApplicationActivityMonitor;\n  private static _environment: Subject<string> = new Subject<string>('');\n  private static _telemetryUrl: Subject<string> = new Subject<string>('https://telemetry.phenixrts.com/telemetry');\n  private static _maximalNumberOfPeerConnectionReconnectAttempts = 8;\n  private static _telemetryLevel: Subject<TelemetryLevel> = new Subject<TelemetryLevel>(TelemetryDefault.defaultTelemetryLevel);\n  private static _metricsService: MetricsService;\n  private static _metricsConfiguration: MetricsConfiguration;\n  private static readonly _sendLocalCandidates: Subject<boolean> = new Subject(BuildFeatures.sendLocalCandidates);\n  private static readonly _tenancy: Subject<string> = new Subject<string>('');\n  private static readonly _clientSessionId: string = Strings.random(32);\n  private static readonly _loadedTimestamp: Date = new Date();\n  private static readonly _logger: ILogger = LoggerFactory.getLogger('SDK');\n  private static readonly _initialized: Subject<boolean> = new Subject<boolean>(false);\n  private static readonly _readOnlyInitialized: ReadOnlySubject<boolean> = new ReadOnlySubject<boolean>(SDK._initialized);\n  private static readonly _readOnlyDiscoveryUri: ReadOnlySubject<string> = new ReadOnlySubject<string>(DiscoveryUri.uri);\n  private static readonly _readOnlyPeerConnectionFactory: ReadOnlySubject<IPeerConnectionFactory> = new ReadOnlySubject<IPeerConnectionFactory>(PeerConnectionService.peerConnectionFactory);\n\n  static get pageLoadTime(): number {\n    return pageLoadTime;\n  }\n\n  static get sendLocalCandidates(): Subject<boolean> {\n    return this._sendLocalCandidates;\n  }\n\n  static get tenancy(): Subject<string> {\n    return this._tenancy;\n  }\n\n  static get clientSessionId(): string {\n    return SDK._clientSessionId;\n  }\n\n  static get loadedTimestamp(): Date {\n    return SDK._loadedTimestamp;\n  }\n\n  static get initialized(): ReadOnlySubject<boolean> {\n    return SDK._readOnlyInitialized;\n  }\n\n  static get discoveryUri(): ReadOnlySubject<string> {\n    return SDK._readOnlyDiscoveryUri;\n  }\n\n  static get peerConnectionFactory(): ReadOnlySubject<IPeerConnectionFactory> {\n    return SDK._readOnlyPeerConnectionFactory;\n  }\n\n  static get automaticRetryOnFailure(): boolean {\n    return SDK._automaticallyRetryOnFailure;\n  }\n\n  static get automaticallyReconnectPeerConnection(): boolean {\n    return SDK._automaticallyReconnectPeerConnection;\n  }\n\n  static get automaticallyPlayMediaStream(): boolean {\n    return SDK._automaticallyPlayMediaStream;\n  }\n\n  static get automaticallyMuteVideoOnPlayFailure(): boolean {\n    return SDK._automaticallyMuteVideoOnPlayFailure;\n  }\n\n  static get forceGarbageCollectionOnRestart(): boolean {\n    return this._forceGarbageCollectionOnRestart;\n  }\n\n  static get skipGarbageCollectionOnMobileDevices(): boolean {\n    return this._skipGarbageCollectionOnMobileDevices;\n  }\n\n  static get webPlayerLoader(): (WebPlayerType) => void {\n    return this._webPlayerLoader;\n  }\n\n  static get shakaPlayerLoader(): (ShakaType) => void {\n    return this._shakaPlayerLoader;\n  }\n\n  static get hlsJsLoader(): (HlsPlayerType) => void {\n    return this._hlsJsLoader;\n  }\n\n  static get metricsService(): MetricsService {\n    return SDK._metricsService;\n  }\n\n  static get applicationActivityMonitor(): ApplicationActivityMonitor {\n    return this._applicationActivityMonitor;\n  }\n\n  static get telemetryUrl(): Subject<string> {\n    return this._telemetryUrl;\n  }\n\n  static get maximalNumberOfPeerConnectionReconnectAttempts(): number {\n    return this._maximalNumberOfPeerConnectionReconnectAttempts;\n  }\n\n  static set maximalNumberOfPeerConnectionReconnectAttempts(retriesAmount: number) {\n    this._maximalNumberOfPeerConnectionReconnectAttempts = retriesAmount;\n  }\n\n  static get loggingLevel(): LoggingLevelType {\n    return LoggingLevelMapping.convertLoggingLevelToLoggingLevelType(this._logger.threshold.value);\n  }\n\n  static get telemetryLevel(): TelemetryLevelType {\n    return TelemetryLevelMapping.convertTelemetryLevelToTelemetryLevelType(SDK._telemetryLevel.value);\n  }\n\n  static get browserDetector(): BrowserDetector {\n    return BrowserDetector;\n  }\n\n  static applyTelemetryConfiguration(): void {\n    const telemetryConfiguration = LoggerFactory.telemetryConfiguration;\n\n    telemetryConfiguration.sessionId = SDK.clientSessionId;\n    telemetryConfiguration.pageLoadTime = SDK.pageLoadTime;\n\n    const ignoredEnvironment = SDK._environment.subscribe(environment => {\n      telemetryConfiguration.environment = environment;\n    });\n    const ignoredDiscoveryUri = SDK.telemetryUrl.subscribe(value => {\n      const telemetryAppender = this._logger.appenders.value.find(appender => appender instanceof TelemetryAppender);\n\n      if (telemetryAppender) {\n        telemetryConfiguration.url = value;\n\n        this._logger.appenders.remove(telemetryAppender);\n        this._logger.appenders.add(new TelemetryAppender(telemetryConfiguration));\n        this._logger.info('Telemetry URL was set to [%s]', telemetryConfiguration.url);\n      }\n    });\n    const ignoredTenancy = SDK._tenancy.subscribe(tenancy => {\n      const telemetryAppender = this._logger.appenders.value.find(appender => appender instanceof TelemetryAppender);\n\n      if (telemetryAppender && tenancy) {\n        telemetryConfiguration.tenancy = tenancy;\n\n        this._logger.appenders.remove(telemetryAppender);\n        this._logger.appenders.add(new TelemetryAppender(telemetryConfiguration));\n        this._logger.info('Telemetry tenancy was set to [%s]', telemetryConfiguration.tenancy);\n      }\n    });\n  }\n\n  static applyMetricsConfiguration(): void {\n    SDK._metricsService = MetricsFactory.getMetricsService(DiscoveryUri.uri.value);\n    SDK._metricsConfiguration = SDK._metricsService.metricsConfiguration;\n\n    SDK._metricsConfiguration.sessionId = SDK.clientSessionId;\n\n    const ignoredEnvironment = SDK._environment.subscribe(environment => {\n      SDK._metricsConfiguration.environment = environment;\n    });\n    const ignoredDiscoveryUri = SDK.telemetryUrl.subscribe(value => {\n      SDK._metricsConfiguration.url = value;\n    });\n    const ignoredTenancy = SDK._tenancy.subscribe(tenancy => {\n      SDK._metricsConfiguration.tenancy = tenancy;\n    });\n    const value = this._configurationParameterReader.getStringValue('phenix-metrics-level');\n\n    if (value) {\n      MetricsFactory.setTelemetryLevel(TelemetryLevel[value]);\n    }\n\n    const ignoredTelemetryLevel = SDK._telemetryLevel.subscribe(telemetryLevel => {\n      MetricsFactory.setTelemetryLevel(telemetryLevel);\n    });\n  }\n\n  static applyAutomaticallyRetryOnFailureFromParameterConfiguration(): void {\n    this._automaticallyRetryOnFailure = this._configurationParameterReader.getBooleanValue('phenix-automatically-retry-on-failure');\n    this._logger.info('Automatically retry on failure is set to: [%s]', this._automaticallyRetryOnFailure);\n\n    return;\n  }\n\n  static applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration(): void {\n    this._automaticallyReconnectPeerConnection = this._configurationParameterReader.getBooleanValue('phenix-automatically-reconnect-peer-connection');\n    this._logger.info('Automatically reconnect peer connection is set to: [%s]', this._automaticallyReconnectPeerConnection);\n\n    return;\n  }\n\n  static applyForceGarbageCollectionOnRestartFromParameterConfiguration(): void {\n    this._forceGarbageCollectionOnRestart = this._configurationParameterReader.getBooleanValue('phenix-force-garbage-collection-on-restart');\n    this._logger.info('Force garbage collection on restart is set to: [%s]', this._forceGarbageCollectionOnRestart);\n\n    return;\n  }\n\n  static applySkipGarbageCollectionOnMobileDevicesFromParameterConfiguration(): void {\n    this._skipGarbageCollectionOnMobileDevices = this._configurationParameterReader.getBooleanValue('phenix-skip-garbage-collection-on-mobile-devices');\n    this._logger.info('Skip garbage collection on mobile devices on restart is set to: [%s]', this._skipGarbageCollectionOnMobileDevices);\n\n    return;\n  }\n\n  static applyDiscoveryUriDefaultFromParameterConfiguration(): void {\n    SDK.discoveryUri.subscribe(value => {\n      SDK.telemetryUrl.value = SDK.getTelemetryUrl(value);\n      SDK._environment.value = Environment.getEnvironmentFromUrl(value);\n    });\n\n    const channelToken = this._configurationParameterReader.getStringValue('phenix-channel-token');\n\n    if (channelToken) {\n      const edgeToken = EdgeAuthParser.parseToken(channelToken);\n\n      SDK._tenancy.value = edgeToken.tenancy;\n      DiscoveryUri.uri.value = (edgeToken.uri || SDK.discoveryUri.value).toString();\n\n      this._logger.info('Discovery URI set from configuration parameter to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n\n    const uriValue = this._configurationParameterReader.getStringValue('phenix-uri');\n\n    if (uriValue) {\n      DiscoveryUri.uri.value = uriValue;\n      this._logger.info('Discovery URI set from \"phenix-uri\" configuration parameter tag to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n\n    const baseURIValue = this._configurationParameterReader.getStringValue('phenix-base-uri');\n\n    if (baseURIValue) {\n      const uri = new URL(baseURIValue);\n\n      uri.pathname = '/pcast/endPoints';\n      DiscoveryUri.uri.value = uri.toString();\n      this._logger.info('Discovery URI set from \"phenix-base-uri\" configuration parameter tag to [%s]', SDK.discoveryUri.value);\n\n      return;\n    }\n  }\n\n  static init(options?: IInitOptions): void {\n    if (!this._initialized.value) {\n      this._applicationActivityMonitor = new ApplicationActivityMonitor();\n    }\n\n    if (options) {\n      if (options.discoveryUri) {\n        DiscoveryUri.uri.value = options.discoveryUri;\n      }\n\n      if (options.peerConnectionFactory) {\n        PeerConnectionService.peerConnectionFactory.value = options.peerConnectionFactory;\n      }\n\n      if (options.telemetryLevel && TelemetryLevel[options.telemetryLevel]) {\n        SDK._telemetryLevel.value = TelemetryLevelMapping.convertTelemetryLevelTypeToTelemetryLevel(options.telemetryLevel);\n      }\n\n      if (options.loggingLevel && LoggingLevel[options.loggingLevel]) {\n        this._logger.threshold.setThreshold(LoggingLevelMapping.convertLoggingLevelTypeToLoggingLevel(options.loggingLevel));\n      }\n\n      if (options.consoleLoggingLevel &&\n        LoggingLevel[options.consoleLoggingLevel]) {\n        const consoleAppender = this._logger.appenders.value.find(appender => appender instanceof ConsoleAppender);\n\n        if (consoleAppender) {\n          this._logger.appenders.remove(consoleAppender);\n        }\n\n        if (options.consoleLoggingLevel !== 'Off') {\n          this._logger.appenders.add(new ConsoleAppender(LoggingLevelMapping.convertLoggingLevelTypeToLoggingLevel(options.consoleLoggingLevel)));\n        }\n      }\n\n      if (typeof options.automaticallyPlayMediaStream === 'boolean') {\n        this._automaticallyPlayMediaStream = options.automaticallyPlayMediaStream;\n      }\n\n      if (typeof options.automaticallyMuteVideoOnPlayFailure === 'boolean') {\n        this._automaticallyMuteVideoOnPlayFailure = options.automaticallyMuteVideoOnPlayFailure;\n      }\n\n      if (options.webPlayerLoader) {\n        this._webPlayerLoader = options.webPlayerLoader;\n      }\n\n      if (options.shakaPlayerLoader) {\n        this._shakaPlayerLoader = options.shakaPlayerLoader;\n      }\n\n      if (options.hlsJsLoader) {\n        this._hlsJsLoader = options.hlsJsLoader;\n      }\n    }\n\n    SDK._initialized.value = true;\n  }\n\n  static dispose(): void {\n    SDK._initialized.value = false;\n    this._applicationActivityMonitor.dispose();\n    this._applicationActivityMonitor = null;\n  }\n\n  static getTelemetryUrl(url: string): string {\n    return TelemetryUrl.getTelemetryUrl(url);\n  }\n\n  private constructor() {\n    throw new Error('SDK is a static class that may not be instantiated');\n  }\n}\n\nwindow.addEventListener('unload', () => {\n  SDK.dispose();\n});\n\nSDK.applyDiscoveryUriDefaultFromParameterConfiguration();\nSDK.applyMetricsConfiguration();\nSDK.applyTelemetryConfiguration();\nSDK.applyAutomaticallyRetryOnFailureFromParameterConfiguration();\nSDK.applyAutomaticallyReconnectPeerConnectionFromParameterConfiguration();\nSDK.applyForceGarbageCollectionOnRestartFromParameterConfiguration();\nSDK.applySkipGarbageCollectionOnMobileDevicesFromParameterConfiguration();\nSDK.init();","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IComparable from '../lang/IComparable';\n\nexport default class Dimension implements IComparable<Dimension> {\n  readonly width: number;\n  readonly height: number;\n\n  static get empty(): Dimension {\n    return new Dimension(0, 0);\n  }\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  equals(other: Dimension): boolean {\n    return other && this.width === other.width && this.height === other.height;\n  }\n\n  toString(): string {\n    return `${this.width}x${this.height}`;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport FeatureEnablement from '../environment/FeatureEnablement';\n\nexport default class GarbageCollectorManager {\n  static forceGarbageCollection(): void {\n    if (FeatureEnablement.isForceChromeGarbageCollectionSupported) {\n      this.forceChromeGarbageCollection();\n    }\n  }\n\n  private static forceChromeGarbageCollection(): void {\n    if (FeatureEnablement.isQueueMicrotaskSupported) {\n      queueMicrotask(() => {\n        this.overloadMemoryToInvokeGarbageCollection();\n      });\n    } else {\n      setTimeout(() => {\n        this.overloadMemoryToInvokeGarbageCollection();\n      });\n    }\n  }\n\n  private static overloadMemoryToInvokeGarbageCollection(): void {\n    let img = document.createElement('img');\n\n    img.src = window.URL.createObjectURL(new Blob([new ArrayBuffer(10e+7)])); // 100Mb or less or more depending on as you wish to force/invoke GC cycle run\n    img.onerror = function() {\n      window.URL.revokeObjectURL(this.src);\n\n      img = null;\n    };\n  }\n\n  private constructor() {\n    throw new Error('GarbageCollectorManager is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nenum ChannelState {\n  Offline = 1,\n  Starting,\n  Paused,\n  Playing,\n  Recovering,\n  Reconnecting,\n  StandBy,\n  Stopped,\n  Unauthorized,\n  GeoRestricted,\n  GeoBlocked,\n  UnsupportedFeature,\n  ConfigurationError,\n  TransientConfigurationError,\n  ConnectionError,\n  ClientStartError,\n  Error\n}\n\nexport default ChannelState;","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class Durations {\n  private readonly _duration: number;\n\n  constructor(duration = 0) {\n    this._duration = duration;\n  }\n\n  toIsoString(): string {\n    if (this._duration === 0) {\n      return 'P0S';\n    }\n\n    const isNegative = this._duration < 0;\n    const duration = isNegative ? Math.abs(this._duration) : this._duration;\n    let offset = Math.floor(duration);\n    const milliseconds = offset % 1000;\n\n    offset = Math.floor(offset / 1000);\n\n    const seconds = offset % 60;\n\n    offset = Math.floor(offset / 60);\n\n    const minutes = offset % 60;\n\n    offset = Math.floor(offset / 60);\n\n    const hours = offset % 24;\n    const parts = ['PT'];\n\n    if (isNegative) {\n      parts.unshift('-');\n    }\n\n    if (hours) {\n      parts.push(hours + 'H');\n    }\n\n    if (minutes) {\n      parts.push(minutes + 'M');\n    }\n\n    if (seconds || milliseconds) {\n      parts.push(String(seconds));\n\n      if (milliseconds) {\n        parts.push('.' + this.padStart(milliseconds.toString(), 3, '0'));\n      }\n\n      parts.push('S');\n    }\n\n    return parts.join('');\n  }\n\n  padStart(item: string, targetLength: number, padString: string): string {\n    targetLength = targetLength >> 0;\n    padString = String((typeof padString !== 'undefined' ? padString : ' '));\n\n    if (item.length > targetLength) {\n      return item;\n    }\n\n    targetLength = targetLength - item.length;\n\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n\n    return padString.slice(0, targetLength) + item;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../logger/LoggerFactory';\nimport {ILogger} from '../logger/LoggerInterface';\nimport Durations from '../time/Duration';\nimport Disposable from '../lang/Disposable';\nimport IDisposable from '../lang/IDisposable';\nimport MetricsType from '../metrics/MetricsType';\nimport DisposableList from '../lang/DisposableList';\nimport MetricsService from '../metrics/MetricsService';\n\nexport default class VideoTelemetry implements IDisposable {\n  private readonly _pageLoadTime: number;\n  private readonly _channelStartTime: number;\n  private readonly _logger: ILogger = LoggerFactory.getLogger('StreamTelemetry');\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _streamId: string;\n  private readonly _metricsService: MetricsService;\n  private _listenToFirstTime: () => void;\n  private _listenForStall: () => void;\n  private _listenForContinuation: (event) => void;\n  private _timeToFirstFrame: number;\n  private _channelCreationTimeToFirstFrame: number;\n  private _startRecordingFirstFrame: number;\n  private _videoStalled: number;\n  private _lastProgress: number;\n  private _videoResolution: string;\n  private _clearTimeToFirstFrameListener: Disposable;\n  private _clearRebufferingListener: Disposable;\n\n  constructor(streamId: string, pageLoadTime: number, channelStartTime: number, metricsService: MetricsService) {\n    this._streamId = streamId;\n    this._pageLoadTime = pageLoadTime;\n    this._channelStartTime = channelStartTime;\n\n    this._metricsService = metricsService;\n  }\n\n  setupListenerForTimeToFirstTime(video: HTMLVideoElement): void {\n    this._startRecordingFirstFrame = Date.now();\n\n    this._listenToFirstTime = (): void => this.callTimeToFirstFrame();\n\n    video.addEventListener('loadeddata', this._listenToFirstTime);\n    video.addEventListener('loadedmetadata', this._listenToFirstTime);\n\n    this._clearTimeToFirstFrameListener = new Disposable(() => {\n      video.removeEventListener('loadeddata', this._listenToFirstTime);\n      video.removeEventListener('loadedmetadata', this._listenToFirstTime);\n    });\n    this._disposables.add(this._clearTimeToFirstFrameListener);\n  }\n\n  setupListenerForRebuffering(video: HTMLVideoElement): void {\n    this._listenForStall = (): void => this.onStall();\n\n    this._listenForContinuation = (event): void => this.onContinuation(event, video);\n\n    video.addEventListener('stalled', this._listenForStall);\n    video.addEventListener('pause', this._listenForStall);\n    video.addEventListener('suspend', this._listenForStall);\n    video.addEventListener('play', this._listenForContinuation);\n    video.addEventListener('playing', this._listenForContinuation);\n    video.addEventListener('progress', this._listenForContinuation);\n    video.addEventListener('timeupdate', this._listenForContinuation);\n\n    this._clearRebufferingListener = new Disposable(() => {\n      video.removeEventListener('stalled', this._listenForStall);\n      video.removeEventListener('pause', this._listenForStall);\n      video.removeEventListener('suspend', this._listenForStall);\n      video.removeEventListener('play', this._listenForContinuation);\n      video.removeEventListener('playing', this._listenForContinuation);\n      video.removeEventListener('progress', this._listenForContinuation);\n      video.removeEventListener('timeupdate', this._listenForContinuation);\n    });\n\n    this._disposables.add(this._clearRebufferingListener);\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private get durationSincePageLoad(): string {\n    const now = Date.now();\n\n    return new Durations(now - this._pageLoadTime).toIsoString();\n  }\n\n  private callTimeToFirstFrame(): void {\n    const now = Date.now();\n\n    this.pushTimeToFirstFrame(now);\n    this.pushChannelCreationTimeToFirstFrame(now);\n\n    this._clearTimeToFirstFrameListener.dispose();\n  }\n\n  private pushTimeToFirstFrame(now): void {\n    this._timeToFirstFrame = now - this._startRecordingFirstFrame;\n\n    this._metricsService.push({\n      metricType: MetricsType.TimeToFirstFrame,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: this._timeToFirstFrame},\n      streamId: this._streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] First frame [%s]',\n      this.durationSincePageLoad,\n      this._streamId,\n      new Durations(this._timeToFirstFrame).toIsoString()\n    );\n  }\n\n  private pushChannelCreationTimeToFirstFrame(now): void {\n    this._channelCreationTimeToFirstFrame = now - this._channelStartTime;\n\n    this._metricsService.push({\n      metricType: MetricsType.ChannelCreationTimeToFirstFrame,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: this._channelCreationTimeToFirstFrame},\n      streamId: this._streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] Channel creation to first frame [%s]',\n      this.durationSincePageLoad,\n      this._streamId,\n      new Durations(this._channelCreationTimeToFirstFrame).toIsoString()\n    );\n  }\n\n  private onStall(): void {\n    if (this._videoStalled) {\n      return;\n    }\n\n    this._metricsService.push({\n      metricType: MetricsType.Stalled,\n      runtime: (Date.now() - this._pageLoadTime) / 1000,\n      streamId: this._streamId\n    });\n\n    this._videoStalled = Date.now();\n\n    this._logger.info(\n      '[%s] [%s] [buffering] Stream has stalled',\n      this.durationSincePageLoad,\n      this._streamId\n    );\n  }\n\n  private onContinuation(event, video): void {\n    if (!video.buffered) {\n      return;\n    }\n\n    const bufferLength = video.buffered.length;\n    const hasNotProgressedSinceLastProgressEvent = event.type === 'playing'\n    || bufferLength > 0 ? (event.type === 'progress'\n      || event.type === 'timeupdate')\n      && video.buffered.end(bufferLength - 1) === this._lastProgress : true;\n\n    if (!this._videoStalled || hasNotProgressedSinceLastProgressEvent) {\n      return;\n    }\n\n    if (event.type === 'progress') {\n      this._lastProgress = video.buffered.end(bufferLength - 1);\n    }\n\n    const timeSinceStop = Date.now() - this._videoStalled;\n\n    this._metricsService.push({\n      metricType: MetricsType.Buffering,\n      runtime: (Date.now() - this._pageLoadTime) / 1000,\n      value: {uint64: timeSinceStop},\n      streamId: this._streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] [buffering] Stream has recovered from stall after [%s]',\n      this.durationSincePageLoad,\n      this._streamId,\n      new Durations(timeSinceStop).toIsoString()\n    );\n    this._videoStalled = null;\n  }\n\n  onVideoResolutionChanges(newResolution: string): void {\n    this._metricsService.push({\n      metricType: MetricsType.ResolutionChanged,\n      runtime: (Date.now() - this._pageLoadTime) / 1000,\n      value: {string: newResolution},\n      previousValue: this._videoResolution ? {string: this._videoResolution} : undefined,\n      streamId: this._streamId\n    });\n\n    this._videoResolution = newResolution;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport MetricsType from '../metrics/MetricsType';\nimport MetricType from '../metrics/MetricType';\nimport Durations from '../time/Duration';\nimport {ILogger} from '../logger/LoggerInterface';\nimport SDK from '../sdk/SDK';\nimport LoggerFactory from '../logger/LoggerFactory';\n\nexport class StreamSetupListener {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('StreamSetupListener');\n  private readonly metricsService = SDK.metricsService;\n  private readonly _pageLoadTime: number;\n  private readonly _startTime: number;\n  private _metricSubmitted = false;\n\n  constructor(pageLoadTime: number) {\n    this._startTime = Date.now();\n    this._pageLoadTime = pageLoadTime;\n  }\n\n  success(streamId): void {\n    this.recordStreamMetric(MetricsType.SetupCompleted, streamId);\n  }\n\n  fail(): void {\n    this.recordStreamMetric(MetricsType.SetupFailed);\n  }\n\n  private recordStreamMetric(metricType: MetricsType, streamId?: string): void {\n    if (this._metricSubmitted) {\n      return ;\n    }\n\n    this._metricSubmitted = true;\n\n    const now = Date.now();\n    const setupTime = now - this._startTime;\n    const metricName = new MetricType(metricType).getName();\n\n    this.metricsService.push({\n      metricType,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: setupTime},\n      streamId\n    });\n\n    this._logger.info(\n      '[%s] [%s] Stream metric [%s] in [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      streamId,\n      metricName,\n      new Durations(setupTime).toIsoString()\n    );\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport IDisposable from '../lang/IDisposable';\nimport Disposable from '../lang/Disposable';\nimport Subject from '../rx/Subject';\nimport DisposableList from '../lang/DisposableList';\n\nexport default class NetworkMonitor implements IDisposable {\n  private readonly _disposables: DisposableList = new DisposableList();\n  private readonly _isSupported = navigator && navigator['connection'];\n  private readonly _rtt: Subject<number> = new Subject(undefined);\n  private readonly _effectiveType: Subject<string> = new Subject(undefined);\n  private readonly _downlinkThroughputCapacity: Subject<number> = new Subject(undefined);\n\n  constructor() {\n    if (!this.isSupported) {\n      return;\n    }\n\n    this.setupNetworkChangeListeners();\n    this.updateStatistics();\n  }\n\n  get isSupported(): boolean {\n    return this._isSupported;\n  }\n\n  get rtt(): Subject<number> {\n    return this._rtt;\n  }\n\n  get effectiveType(): Subject<string> {\n    return this._effectiveType;\n  }\n\n  get downlinkThroughputCapacity(): Subject<number> {\n    return this._downlinkThroughputCapacity;\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private getDownlinkThroughputCapacity(): number {\n    if (!this.isSupported) {\n      return -1;\n    }\n\n    return navigator['connection'].downlink || navigator['connection'].downlinkMax;\n  }\n\n  private getEffectiveType(): string {\n    if (!this.isSupported) {\n      return 'Unknown';\n    }\n\n    return navigator['connection'].effectiveType || navigator['connection'].type;\n  }\n\n  private getRoundTripTime(): number {\n    return navigator['connection'].rtt;\n  }\n\n  private setupNetworkChangeListeners(): void {\n    const listener = (): void => {\n      this.updateStatistics();\n    };\n\n    navigator['connection'].addEventListener('change', listener);\n\n    this._disposables.add(new Disposable(() => {\n      navigator['connection'].removeEventListener('change', listener);\n    }));\n  }\n\n  private updateStatistics(): void {\n    this._rtt.value = this.getRoundTripTime();\n    this._effectiveType.value = this.getEffectiveType();\n    this._downlinkThroughputCapacity.value = this.getDownlinkThroughputCapacity();\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {StreamSetupListener} from '../dom/StreamSetupListener';\nimport {ILogger} from '../logger/LoggerInterface';\nimport LoggerFactory from '../logger/LoggerFactory';\nimport NetworkMonitor from '../dom/NetworkMonitor';\nimport SDK from '../sdk/SDK';\nimport MetricsType from '../metrics/MetricsType';\nimport Durations from '../time/Duration';\nimport IDisposable from '../lang/IDisposable';\nimport DisposableList from '../lang/DisposableList';\nimport MetricsService from '../metrics/MetricsService';\n\ninterface INetworkStatistics {\n  rtt?: number;\n  effectiveType?: string;\n  downlinkThroughputCapacity?: number;\n}\n\nexport default class SessionTelemetry implements IDisposable {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('SessionTelemetry');\n  private readonly _metricsService: MetricsService;\n  private readonly _applicationActivityMonitor = SDK.applicationActivityMonitor;\n  private readonly _networkMonitor: NetworkMonitor = new NetworkMonitor();\n  private readonly _pageLoadTime: number;\n  private readonly _disposables: DisposableList = new DisposableList();\n  private _lastNetworkStatistics: INetworkStatistics = {};\n\n  constructor(pageLoadTime: number, metricsService: MetricsService) {\n    this._pageLoadTime = pageLoadTime;\n    this._disposables.add(this._networkMonitor);\n    this._metricsService = metricsService;\n\n    if (!this._networkMonitor.isSupported) {\n      return;\n    }\n\n    this._disposables.add(this._applicationActivityMonitor.isForeground.subscribe(isForeground => {\n      this.recordForegroundChange(isForeground);\n    }));\n    this._disposables.add(this._networkMonitor.rtt.subscribe(value => {\n      this.recordNetworkRTTUpdate(value);\n    }));\n    this._disposables.add(this._networkMonitor.effectiveType.subscribe(value => {\n      this.recordNetworkTypeChangeUpdate(value);\n    }));\n    this._disposables.add(this._networkMonitor.downlinkThroughputCapacity.subscribe(value => {\n      this.recordNetworkDownlinkThroughputCapacityUpdate(value);\n    }));\n  }\n\n  listenOnStreamSetup(): StreamSetupListener {\n    return new StreamSetupListener(this._pageLoadTime);\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private recordForegroundChange(isForeground: boolean): void {\n    const now = Date.now();\n    const timeSinceLastChange = this._applicationActivityMonitor.getTimeSinceLastChange();\n\n    this._metricsService.push({\n      metricType: isForeground ? MetricsType.ApplicationForeground : MetricsType.ApplicationBackground,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: timeSinceLastChange}\n    });\n\n    this._logger.info(\n      'Application has gone into the [%s] after [%s] ms',\n      isForeground ? 'foreground' : 'background',\n      new Durations(timeSinceLastChange).toIsoString(),\n    );\n  }\n\n  private recordNetworkRTTUpdate(newRTT: number): void {\n    const now = Date.now();\n    const oldRtt = this._lastNetworkStatistics.rtt;\n\n    this._lastNetworkStatistics.rtt = newRTT;\n\n    this._metricsService.push({\n      metricType: MetricsType.RoundTripTime,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {uint64: newRTT},\n      previousValue: oldRtt ? {uint64: oldRtt} : undefined,\n      resource: 'navigator'\n    });\n\n    this._logger.info(\n      '[%s] Network RTT changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newRTT,\n      oldRtt\n    );\n  }\n\n  private recordNetworkTypeChangeUpdate(newNetworkType: string): void {\n    const now = Date.now();\n    const oldNetworkType = this._lastNetworkStatistics.effectiveType;\n\n    this._lastNetworkStatistics.effectiveType = newNetworkType;\n\n    this._metricsService.push({\n      metricType: MetricsType.NetworkType,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {string: newNetworkType},\n      previousValue: oldNetworkType ? {string: oldNetworkType} : undefined\n    });\n\n    this._logger.info(\n      '[%s] Network effective type has changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newNetworkType,\n      oldNetworkType\n    );\n  }\n\n  private recordNetworkDownlinkThroughputCapacityUpdate(newCapacity: number): void {\n    const now = Date.now();\n    const oldCapacity = this._lastNetworkStatistics.downlinkThroughputCapacity;\n\n    this._lastNetworkStatistics.downlinkThroughputCapacity = newCapacity;\n\n    this._metricsService.push({\n      metricType: MetricsType.DownlinkThroughputCapacity,\n      runtime: (now - this._pageLoadTime) / 1000,\n      value: {float: newCapacity},\n      previousValue: oldCapacity ? {float: oldCapacity} : undefined\n    });\n\n    this._logger.info(\n      '[%s] Network downlink throughput capacity changed to [%s] from [%s]',\n      new Durations(now - this._pageLoadTime).toIsoString(),\n      newCapacity,\n      oldCapacity\n    );\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport type BitrateStateType = 'Keep' | 'Reset';\nexport type BitrateModeType = 'Normal' | 'Force' | 'Reset';\n\nexport enum BitrateState {\n  Keep,\n  Reset\n}\n\nexport enum BitrateMode {\n  Normal,\n  Force,\n  Reset\n}\n\nexport interface ISetTemporaryMaximalBitrate {\n  apiVersion: number;\n  sharedSecret: string;\n  elapsedInMilliseconds: number;\n  bitrateInBitsPerSecond: number;\n  bitrateState: BitrateStateType;\n  bitrateMode: BitrateModeType;\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../../rx/Subject';\nimport {EncodedEdgeToken} from '../../edgeAuth/EncodedEdgeToken';\n\nexport default class TokenContext {\n  token: Subject<EncodedEdgeToken>;\n  tokenExpiring: Subject<boolean>;\n\n  constructor(token: EncodedEdgeToken) {\n    this.token = new Subject<EncodedEdgeToken>(token);\n    this.tokenExpiring = new Subject<boolean>(false);\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../../rx/Subject';\nimport ChannelState from '../channels/ChannelState';\nimport Dimension from '../../video/Dimension';\nimport EndPoint, {IStream, SubscribeStatus} from '../discovery/EndPoint';\nimport VideoTelemetry from '../../video/VideoTelemetry';\nimport {IRtcMonitorStatistic, IRtcStatistic} from '../../rtc/RtcConnectionMonitor';\nimport SDK from '../SDK';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport DisposableList from '../../lang/DisposableList';\nimport {BitsPerSecond, Millisecond} from '../../units/Units';\n\nconst defaultTargetLag = 0;\n\nexport type ChannelContextOptions = {\n  targetLag?: number;\n};\n\nexport default class ChannelContext {\n  channelInitialization: Date;\n  disposables: DisposableList;\n  channelDisposables: DisposableList;\n  rendererDisposables: DisposableList;\n  videoElement: Subject<HTMLVideoElement>;\n  state: Subject<ChannelState>;\n  autoMuted: Subject<boolean>;\n  autoPaused: Subject<boolean>;\n  authorized: Subject<boolean>;\n  online: Subject<boolean>;\n  loading: Subject<boolean>;\n  playing: Subject<boolean>;\n  standby: Subject<boolean>;\n  stopped: Subject<boolean>;\n  targetLag: Subject<Millisecond>;\n  lag: Subject<Millisecond>;\n  bitrateLimit: Subject<BitsPerSecond>;\n  resolution: Subject<Dimension>;\n  failureCount: Subject<number>;\n  endPoint: Subject<EndPoint>;\n  stream: Subject<IStream>;\n  rtcStatistics: Subject<IRtcMonitorStatistic>;\n  videoTelemetry: VideoTelemetry;\n  rtcAudioStatistic: IRtcStatistic;\n  rtcVideoStatistic: IRtcStatistic;\n  clearFailureCountTimeout: number;\n\n  constructor(options?: ChannelContextOptions) {\n    this.disposables = new DisposableList();\n    this.channelDisposables = new DisposableList();\n    this.rendererDisposables = new DisposableList();\n    this.channelInitialization = new Date();\n    this.videoElement = new Subject<HTMLVideoElement>(null);\n    this.state = new Subject<ChannelState>(ChannelState.Starting);\n    this.autoMuted = new Subject<boolean>(false);\n    this.autoPaused = new Subject<boolean>(false);\n    this.authorized = new Subject<boolean>(true);\n    this.online = new Subject<boolean>(true);\n    this.loading = new Subject<boolean>(false);\n    this.playing = new Subject<boolean>(false);\n    this.standby = new Subject<boolean>(false);\n    this.stopped = new Subject<boolean>(false);\n    this.targetLag = new Subject<Millisecond>(options?.targetLag ?? defaultTargetLag);\n    this.lag = new Subject<Millisecond>(0);\n    this.bitrateLimit = new Subject<BitsPerSecond>(0);\n    this.resolution = new Subject<Dimension>(Dimension.empty);\n    this.failureCount = new Subject<number>(0);\n    this.endPoint = new Subject<EndPoint>(null);\n    this.stream = new Subject<IStream>(null);\n    this.rtcStatistics = new Subject<IRtcMonitorStatistic>(null);\n  }\n\n  get streamId(): string {\n    const stream = this.stream.value;\n\n    if (!stream) {\n      return '-';\n    }\n\n    return stream.streamId;\n  }\n\n  applyStatus(status: SubscribeStatus): void {\n    switch (status) {\n      case 'ok':\n        break;\n      case 'unauthorized':\n      case 'geo-restricted':\n      case 'geo-blocked':\n        this.authorized.value = false;\n\n      // eslint-disable-next-line no-fallthrough\n      case 'no-stream':\n      case 'not-found':\n        this.failureCount.value = 0;\n        this.playing.value = false;\n        this.standby.value = true;\n        this.stopped.value = false;\n        this.stream.value = null;\n\n        return;\n      default:\n        this.failureCount.value++;\n        this.playing.value = false;\n        this.standby.value = true;\n        this.stopped.value = false;\n        this.stream.value = null;\n\n        return;\n    }\n  }\n\n  applySessionAndStreamPropertiesToVideoElement(): void {\n    if (this.videoElement.value && this.videoElement.value.dataset) {\n      this.videoElement.value.dataset.sessionId = SDK.clientSessionId;\n      this.videoElement.value.dataset.streamId = this.streamId;\n    }\n  }\n\n  mapSubscribeStatusToChannelStatus(status: SubscribeStatus): ChannelState {\n    switch (status) {\n      case 'ok':\n        return ChannelState.Starting;\n      case 'no-stream':\n      case 'not-found':\n        return ChannelState.StandBy;\n      case 'geo-restricted':\n        return ChannelState.GeoRestricted;\n      case 'geo-blocked':\n        return ChannelState.GeoBlocked;\n      case 'unauthorized':\n        return ChannelState.Unauthorized;\n      case 'capacity':\n      case 'rate-limited':\n      case 'timeout':\n        return ChannelState.Recovering;\n      case 'forbidden-tag':\n        return ChannelState.ConfigurationError;\n      case 'port-in-range-not-found':\n        return ChannelState.TransientConfigurationError;\n      case 'failed':\n        return ChannelState.Error;\n      default:\n        assertUnreachable(status);\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport interface IEncodedStreamSink<T = RTCEncodedAudioFrame | RTCEncodedVideoFrame> {\n    (track: MediaStreamTrack, chunk: T): boolean | PromiseLike<boolean>;\n}\n\nexport default class EncodedStreamSink {\n  static validateEncodedStreamSink(mode: 'audio' | 'video', item: IEncodedStreamSink) {\n    if (typeof item !== 'function') {\n      return {\n        valid: false,\n        validationResult: `Unexpected ${mode} Encoded Stream Sink function type. Found [${typeof item}]`\n      };\n    }\n\n    if (item.length !== 2) {\n      return {\n        valid: false,\n        validationResult: `Unexpected ${mode} Encoded Stream Sink function parameter length. Expected 2. Found [${item.length}]`\n      };\n    }\n\n    return {\n      valid: true,\n      validationResult: 'ok'\n    };\n  }\n\n  constructor() {\n    throw new Error('EncodedStreamSink is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport interface IStreamTrackTransform<T = AudioData | VideoFrame> {\n    (track: MediaStreamTrack, chunk: T, controller: TransformStreamDefaultController<T>): void | PromiseLike<void>;\n}\n\nexport default class StreamTrackTransform {\n  static validateMediaStreamTrackTransform(mode: 'audio' | 'video', item: IStreamTrackTransform) {\n    if (typeof item !== 'function') {\n      return {\n        valid: false,\n        validationResult: `Unexpected ${mode} Media Stream Track transform function type. Found [${typeof item}]`\n      };\n    }\n\n    if (item.length !== 3) {\n      return {\n        valid: false,\n        validationResult: `Unexpected ${mode} Media Stream Track transform function parameter length. Expected 3. Found [${item.length}]`\n      };\n    }\n\n    return {\n      valid: true,\n      validationResult: 'ok'\n    };\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../../rx/Subject';\nimport {IStreamTrackTransform} from '../transformation/StreamTrackTransform';\nimport {IEncodedStreamSink} from '../transformation/EncodedStreamSink';\n\nexport type StreamTransformContextOptions = {\n  hasInsertableStreams: boolean;\n  hasEncodedInsertableStreams: boolean;\n  videoStreamTransformCallback: IStreamTrackTransform<VideoFrame> | undefined;\n  audioStreamTransformCallback: IStreamTrackTransform<AudioData> | undefined;\n  encodedVideoStreamSink: IEncodedStreamSink<RTCEncodedVideoFrame> | undefined;\n  encodedAudioStreamSink: IEncodedStreamSink<RTCEncodedAudioFrame> | undefined;\n};\n\nexport default class StreamTransformContext {\n  readonly hasInsertableStreams: Subject<boolean>;\n  readonly hasEncodedInsertableStreams: Subject<boolean>;\n  readonly videoStreamTransformCallback: IStreamTrackTransform<VideoFrame> | undefined;\n  readonly audioStreamTransformCallback: IStreamTrackTransform<AudioData> | undefined;\n  readonly encodedVideoStreamSink: IEncodedStreamSink<RTCEncodedVideoFrame> | undefined;\n  readonly encodedAudioStreamSink: IEncodedStreamSink<RTCEncodedAudioFrame> | undefined;\n\n  constructor(options: StreamTransformContextOptions) {\n    this.hasInsertableStreams = new Subject<boolean>(options.hasInsertableStreams);\n    this.hasEncodedInsertableStreams = new Subject<boolean>(options.hasEncodedInsertableStreams);\n    this.videoStreamTransformCallback = options.videoStreamTransformCallback;\n    this.audioStreamTransformCallback = options.audioStreamTransformCallback;\n    this.encodedVideoStreamSink = options.encodedVideoStreamSink;\n    this.encodedAudioStreamSink = options.encodedAudioStreamSink;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../../rx/Subject';\nimport IPeerConnection from '../../rtc/IPeerConnection';\n\nexport default class PeerConnectionContext {\n  mediaStream: Subject<MediaStream>;\n  peerConnection: Subject<IPeerConnection>;\n  peerConnectionReconnectAttempts: number;\n\n  constructor() {\n    this.mediaStream = new Subject<MediaStream>(null);\n    this.peerConnection = new Subject<IPeerConnection>(null);\n    this.peerConnectionReconnectAttempts = 0;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Subject from '../../rx/Subject';\n\nexport default class StateContext {\n  isStarting: Subject<boolean>;\n  isDisposed: boolean;\n\n  constructor() {\n    this.isStarting = new Subject<boolean>(false);\n    this.isDisposed = false;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {BitrateMode, BitrateModeType} from '../api/SetTemporaryMaximalBitrate';\nimport assertUnreachable from '../../lang/assertUnreachable';\n\nexport default class BitrateModeMapping {\n  static convertBitrateModeToBitrateModeType(bitrateMode: BitrateMode): BitrateModeType {\n    switch (bitrateMode) {\n      case BitrateMode.Normal:\n        return 'Normal';\n      case BitrateMode.Force:\n        return 'Force';\n      case BitrateMode.Reset:\n        return 'Reset';\n      default:\n        assertUnreachable(bitrateMode);\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {BitrateState, BitrateStateType} from '../api/SetTemporaryMaximalBitrate';\nimport assertUnreachable from '../../lang/assertUnreachable';\n\nexport default class BitrateStateMapping {\n  static convertBitrateStateToBitrateStateType(bitrateState: BitrateState): BitrateStateType {\n    switch (bitrateState) {\n      case BitrateState.Keep:\n        return 'Keep';\n      case BitrateState.Reset:\n        return 'Reset';\n      default:\n        assertUnreachable(bitrateState);\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport EdgeAuthParser from '../../edgeAuth/EdgeAuthParser';\nimport {EncodedEdgeToken} from '../../edgeAuth/EncodedEdgeToken';\n\nimport {\n  ISubscribeResponse,\n  ISubscribeWithOfferRequest,\n  ISubscribeWithoutOfferRequest\n} from '../api/Subscribe';\nimport {ISetRemoteDescriptionRequest, ISetRemoteDescriptionResponse} from '../api/SetRemoteDescription';\nimport {IDestroyStreamRequest, IDestroyStreamResponse} from '../api/DestroyStream';\nimport {IAddIceCandidatesRequest, IAddIceCandidatesResponse} from '../api/AddIceCandidates';\nimport VersionManager from '../version/VersionManager';\nimport Parameters from '../../environment/Parameters';\nimport {BitrateMode, BitrateState, ISetTemporaryMaximalBitrate} from '../api/SetTemporaryMaximalBitrate';\nimport BitrateModeMapping from './BitrateModeMapping';\nimport BitrateStateMapping from './BitrateStateMapping';\nimport {BitsPerSecond, Millisecond} from '../../units/Units';\nimport {\n  IPublishResponse,\n  IPublishWithOfferRequest,\n  IPublishWithoutOfferRequest,\n  PublishStatus\n} from '../api/Publish';\n\nconst apiVersion = 7;\n\nexport type SubscribeStatus = 'ok' | 'no-stream' | 'not-found' | 'unauthorized' | 'geo-restricted' | 'geo-blocked' | 'rate-limited' | 'capacity' | 'timeout' | 'forbidden-tag' | 'port-in-range-not-found' | 'failed';\nexport type SetRemoteDescriptionStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type SetTemporaryMaximalBitrateStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type RemoveTemporaryMaximalBitrateStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type AddIceCandidatesStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport type DestroyStreamStatus = 'ok' | 'not-found' | 'unauthorized' | 'rate-limited' | 'capacity' | 'timeout' | 'failed';\nexport interface IStream {\n  streamId: string;\n  sharedSecret: string;\n  tenancy: string;\n}\n\nexport interface ISubscribeResponseInit {\n  status: SubscribeStatus;\n  stream?: IStream;\n  lag?: Millisecond;\n  rtcConfiguration?: RTCConfiguration;\n  setRemoteDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n  createOfferDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n  createAnswerDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n}\n\nexport type IPublishResponseInit = {\n  status: PublishStatus;\n  stream?: IStream;\n  lag?: Millisecond;\n  rtcConfiguration?: RTCConfiguration;\n  setRemoteDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n  createOfferDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n  createAnswerDescriptionResponse?: {\n    sessionDescription: RTCSessionDescriptionInit;\n  };\n};\n\ninterface ISetRemoteDescriptionResponseInit {\n  status: SetRemoteDescriptionStatus;\n  sessionDescription?: RTCSessionDescriptionInit;\n}\n\ninterface IAddIceCandidatesResponseInit {\n  status: AddIceCandidatesStatus;\n  options?: string[];\n}\n\ninterface ISetTemporaryMaximalBitrateResponseInit {\n  status: SetTemporaryMaximalBitrateStatus;\n}\n\ninterface IDestroyStreamResponseInit {\n  status: DestroyStreamStatus;\n}\n\nexport default class EndPoint {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('EndPoint');\n  private readonly _uri: string;\n  private readonly _timeout: number;\n  private _roundTripTime: number;\n\n  constructor(uri: string, timeout: number) {\n    this._uri = uri;\n    this._timeout = timeout;\n\n    if (!timeout) {\n      throw new Error(`End point requires a timeout`);\n    }\n  }\n\n  get roundTripTime(): number {\n    return this._roundTripTime;\n  }\n\n  toString(): string {\n    return `EndPoint[uri=${this._uri}]`;\n  }\n\n  async ping(): Promise<number> {\n    const url = this.buildPingUrl();\n    const start = Date.now();\n    const response = await Promise.race([\n      fetch(url, {\n        method: 'GET',\n        cache: 'no-cache'\n      }),\n      new Promise<Response>((_, reject) =>\n        setTimeout(() => reject(new Error(`Ping timed out [${url}]`)), this._timeout)\n      )\n    ]);\n    const finished = Date.now();\n\n    if (!response.ok) { /* Handle */\n      throw new Error(`Ping failed [${url}] [${response.status}]`);\n    }\n\n    this._roundTripTime = finished - start;\n\n    return this._roundTripTime;\n  }\n\n  async subscribe(token: EncodedEdgeToken, localSessionDescription: RTCSessionDescriptionInit, failureCount: number): Promise<ISubscribeResponseInit> {\n    const tenancy = EdgeAuthParser.parseToken(token).tenancy;\n\n    if (!tenancy) {\n      this._logger.error('Failed to parse token [%s]', token);\n\n      return {status: 'unauthorized'};\n    }\n\n    const url = this.buildUrl([tenancy, 'stream', 'subscribe']).toString();\n    const formData = new FormData();\n    const clientVersion = VersionManager.sdkVersion;\n\n    if (failureCount === 0 && localSessionDescription) {\n      const bodyWithOffer: ISubscribeWithOfferRequest = {\n        apiVersion,\n        clientVersion,\n        bearerToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        setRemoteDescription: {\n          apiVersion,\n          sessionDescription: {\n            type: localSessionDescription.type,\n            sdp: localSessionDescription.sdp\n          }\n        },\n        createAnswerDescription: {apiVersion}\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithOffer));\n    } else {\n      const bodyWithoutOffer: ISubscribeWithoutOfferRequest = {\n        apiVersion,\n        clientVersion,\n        bearerToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        createOfferDescription: {apiVersion}\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithoutOffer));\n    }\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to subscribe', new Error(`Subscribe timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to subscribe', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SubscribeStatus = this.mapHttpStatusToSubscribeStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const subscribeResponse = await this.convertHttpResponseToSubscribeResponse(tenancy, httpResponse);\n\n    this._logger.debug('Got subscribe response [%j] in [%s] ms', subscribeResponse, finished - start);\n\n    return subscribeResponse;\n  }\n\n  async publish(name: string, token: EncodedEdgeToken, localSessionDescription: RTCSessionDescriptionInit, failureCount: number): Promise<IPublishResponseInit> {\n    const tenancy = EdgeAuthParser.parseToken(token).tenancy;\n\n    if (!tenancy) {\n      this._logger.error('Failed to parse token [%s]', token);\n\n      return {status: 'unauthorized'};\n    }\n\n    const url = this.buildUrl([tenancy, 'stream', 'publish']).toString();\n    const formData = new FormData();\n    const clientVersion = VersionManager.sdkVersion;\n\n    if (failureCount === 0 && localSessionDescription) {\n      const bodyWithOffer: IPublishWithOfferRequest = {\n        apiVersion,\n        clientVersion,\n        bearerToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        name,\n        setRemoteDescription: {\n          apiVersion,\n          sessionDescription: {\n            type: localSessionDescription.type,\n            sdp: localSessionDescription.sdp\n          }\n        },\n        createAnswerDescription: {\n          streamId: '',\n          apiVersion\n        }\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithOffer));\n    } else {\n      const bodyWithoutOffer: IPublishWithoutOfferRequest = {\n        apiVersion,\n        clientVersion,\n        bearerToken: token,\n        failureCount,\n        httpRoundTripTime: this._roundTripTime,\n        name,\n        createOfferDescription: {\n          streamId: '',\n          apiVersion\n        }\n      };\n\n      formData.append('jsonBody', JSON.stringify(bodyWithoutOffer));\n    }\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to publish', new Error(`Publish timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to publish', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: PublishStatus = this.mapHttpStatusToPublishStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const subscribeResponse = await this.convertHttpResponseToPublishResponse(tenancy, httpResponse);\n\n    this._logger.debug('Got publish response [%j] in [%s] ms', subscribeResponse, finished - start);\n\n    return subscribeResponse;\n  }\n\n  async setRemoteDescription(stream: IStream, sessionDescription: RTCSessionDescriptionInit): Promise<ISetRemoteDescriptionResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'description', 'remote']).toString();\n    const formData = new FormData();\n    const body: ISetRemoteDescriptionRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      sessionDescription: {\n        type: sessionDescription.type,\n        sdp: sessionDescription.sdp\n      }\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to set remote description', new Error(`Set remote description timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to set remote description', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SetRemoteDescriptionStatus = this.mapHttpStatusToSetRemoteDescriptionStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const setRemoteDescriptionResponse = await this.convertHttpResponseToSetRemoteDescriptionResponse(httpResponse);\n\n    this._logger.debug('Got set remote description response [%j] in [%s] ms', setRemoteDescriptionResponse, finished - start);\n\n    return setRemoteDescriptionResponse;\n  }\n\n  async limitBitrate(\n    stream: IStream,\n    elapsedInMilliseconds: number,\n    bitrateInBitsPerSecond: BitsPerSecond,\n    bitrateState: BitrateState,\n    bitrateMode: BitrateMode,\n  ): Promise<ISetTemporaryMaximalBitrateResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'bitrate']).toString();\n    const formData = new FormData();\n    const body: ISetTemporaryMaximalBitrate = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      elapsedInMilliseconds,\n      bitrateInBitsPerSecond,\n      bitrateState: BitrateStateMapping.convertBitrateStateToBitrateStateType(bitrateState),\n      bitrateMode: BitrateModeMapping.convertBitrateModeToBitrateModeType(bitrateMode)\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to set limit bitrate timed', new Error(`Set limit bitrate timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to set limit bitrate timed', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: SetTemporaryMaximalBitrateStatus = this.mapHttpStatusToSetTemporaryMaximalBitrateStatus(httpResponse);\n    const finished = Date.now();\n\n    this._logger.info('Got set limit bitrate response [%s] in [%s] ms', status, finished - start);\n\n    return {status};\n  }\n\n  async addIceCandidates(stream: IStream, candidates: RTCIceCandidate[], discoveryCompleted: boolean, options: string[] = []): Promise<IAddIceCandidatesResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'ice', 'candidates']).toString();\n    const formData = new FormData();\n    const body: IAddIceCandidatesRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      candidates,\n      discoveryCompleted,\n      options\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to add ice candidates', new Error(`Add ice candidates timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to add ice candidates', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: AddIceCandidatesStatus = this.mapHttpStatusToAddIceCandidatesStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const addIceCandidatesResponse = await this.convertHttpResponseToAddIceCandidatesResponse(httpResponse);\n\n    this._logger.info('Got add ICE candidates response [%j] in [%s] ms', addIceCandidatesResponse, finished - start);\n\n    return addIceCandidatesResponse;\n  }\n\n  async destroyStream(stream: IStream, reason: string): Promise<IDestroyStreamResponseInit> {\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'destroy']).toString();\n    const formData = new FormData();\n    const body: IDestroyStreamRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      reason,\n      options: []\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    const start = Date.now();\n    let httpResponse: Response;\n\n    try {\n      let timeout = null;\n\n      httpResponse = await Promise.race([\n        fetch(url, {\n          method: 'POST',\n          body: formData,\n          cache: 'no-cache'\n        }),\n        new Promise<Response>(resolve =>\n          timeout = window.setTimeout(() => {\n            this._logger.error('Failed to subscribe', new Error(`Delete stream timed out [${url}]`));\n            resolve({status: 408} as Response);\n          }, this._timeout)\n        )\n      ])\n        .finally(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        });\n    } catch (e) {\n      this._logger.error('Failed to delete stream', e);\n\n      return {status: 'failed'};\n    }\n\n    const status: DestroyStreamStatus = this.mapHttpStatusToSetDestroyStreamStatus(httpResponse);\n\n    if (status !== 'ok') {\n      return {status};\n    }\n\n    const finished = Date.now();\n    const destroyStreamResponse = await this.convertHttpResponseToDestroyStreamResponse(httpResponse);\n\n    this._logger.info('Got destroy stream response [%j] in [%s] ms', destroyStreamResponse, finished - start);\n\n    return destroyStreamResponse;\n  }\n\n  async destroyStreamOnUnmount(stream: IStream, reason: string): Promise<void> {\n    if (!navigator?.sendBeacon) {\n      const ignored = this.destroyStream(stream, reason);\n    }\n\n    const url = this.buildUrl([stream.tenancy, 'stream', stream.streamId, 'destroy']).toString();\n    const formData = new FormData();\n    const body: IDestroyStreamRequest = {\n      apiVersion,\n      sharedSecret: stream.sharedSecret,\n      reason,\n      options: []\n    };\n\n    formData.append('jsonBody', JSON.stringify(body));\n\n    navigator.sendBeacon(url, formData);\n  }\n\n  private buildUrl(path: string[]): URL {\n    const uri = new URL(this._uri);\n    const pathAsArray = uri.pathname.split('/');\n\n    pathAsArray.length = pathAsArray.length - 1;\n\n    uri.pathname = pathAsArray.concat(...path).join('/');\n\n    return uri;\n  }\n\n  private buildPingUrl(): string {\n    const uri = new URL(this._uri);\n    const sdkVersion = VersionManager.sdkVersion;\n    const intentions = Parameters.discoveryParameters.intentions;\n\n    uri.searchParams.set('type', 'http');\n    uri.searchParams.set('version', sdkVersion);\n    uri.searchParams.set('intentions', intentions);\n    uri.searchParams.set('_', `${Date.now()}`);\n\n    return uri.toString();\n  }\n\n  private mapHttpStatusToPublishStatus(response: Response): PublishStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 402:\n        return 'geo-restricted';\n      case 403:\n        return 'geo-blocked';\n      case 406:\n        return 'missing-channel-or-room-id';\n      case 408:\n        return 'timeout';\n      case 409:\n        return 'port-in-range-not-found';\n      case 415:\n        return 'forbidden-tag';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSubscribeStatus(response: Response): SubscribeStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 402:\n        return 'geo-restricted';\n      case 403:\n        return 'geo-blocked';\n      case 408:\n        return 'timeout';\n      case 409:\n        return 'port-in-range-not-found';\n      case 415:\n        return 'forbidden-tag';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetRemoteDescriptionStatus(response: Response): SetRemoteDescriptionStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetTemporaryMaximalBitrateStatus(response: Response): SetTemporaryMaximalBitrateStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToAddIceCandidatesStatus(response: Response): AddIceCandidatesStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private mapHttpStatusToSetDestroyStreamStatus(response: Response): DestroyStreamStatus {\n    if (!response) {\n      return 'failed';\n    }\n\n    switch (response.status) {\n      case 200:\n        return 'ok';\n      case 401:\n        return 'unauthorized';\n      case 408:\n        return 'timeout';\n      case 503:\n        return 'capacity';\n      case 504:\n        return 'rate-limited';\n      default:\n        return 'failed';\n    }\n  }\n\n  private async convertHttpResponseToSubscribeResponse(tenancy: string, response: Response): Promise<ISubscribeResponseInit> {\n    const data = await response.json() as ISubscribeResponse;\n    const subscribeResponse: ISubscribeResponseInit = {status: data.status};\n\n    subscribeResponse.stream = {\n      tenancy,\n      streamId: data.streamId,\n      sharedSecret: data.sharedSecret\n    };\n\n    subscribeResponse.lag = data.lag;\n\n    if (data) {\n      if (data.rtcConfiguration) {\n        subscribeResponse.rtcConfiguration = this.convertIRtcConfigurationToRTCConfiguration(data.rtcConfiguration);\n      }\n\n      if (data.setRemoteDescriptionResponse && data.setRemoteDescriptionResponse.sessionDescription) {\n        subscribeResponse.setRemoteDescriptionResponse = {sessionDescription: data.setRemoteDescriptionResponse.sessionDescription};\n      }\n\n      if (data.createAnswerDescriptionResponse && data.createAnswerDescriptionResponse.sessionDescription) {\n        subscribeResponse.createAnswerDescriptionResponse = {sessionDescription: data.createAnswerDescriptionResponse.sessionDescription};\n      }\n\n      if (data.createOfferDescriptionResponse && data.createOfferDescriptionResponse.sessionDescription) {\n        subscribeResponse.createOfferDescriptionResponse = {sessionDescription: data.createOfferDescriptionResponse.sessionDescription};\n      }\n    }\n\n    return subscribeResponse;\n  }\n\n  private async convertHttpResponseToPublishResponse(tenancy: string, response: Response): Promise<IPublishResponseInit> {\n    const data = await response.json() as IPublishResponse;\n    const publishResponse: IPublishResponseInit = {status: data.status};\n\n    publishResponse.stream = {\n      tenancy,\n      streamId: data.streamId,\n      sharedSecret: data.sharedSecret\n    };\n\n    if (data) {\n      if (data.rtcConfiguration) {\n        publishResponse.rtcConfiguration = this.convertIRtcConfigurationToRTCConfiguration(data.rtcConfiguration);\n      }\n\n      if (data.setRemoteDescriptionResponse && data.setRemoteDescriptionResponse.sessionDescription) {\n        publishResponse.setRemoteDescriptionResponse = {sessionDescription: data.setRemoteDescriptionResponse.sessionDescription};\n      }\n\n      if (data.createAnswerDescriptionResponse && data.createAnswerDescriptionResponse.sessionDescription) {\n        publishResponse.createAnswerDescriptionResponse = {sessionDescription: data.createAnswerDescriptionResponse.sessionDescription};\n      }\n\n      if (data.createOfferDescriptionResponse && data.createOfferDescriptionResponse.sessionDescription) {\n        publishResponse.createOfferDescriptionResponse = {sessionDescription: data.createOfferDescriptionResponse.sessionDescription};\n      }\n    }\n\n    return publishResponse;\n  }\n\n  private convertIRtcConfigurationToRTCConfiguration(configuration: RTCConfiguration): RTCConfiguration {\n    const rtcConfiguration: RTCConfiguration = {iceServers: []};\n\n    if (configuration.bundlePolicy) {\n      rtcConfiguration.bundlePolicy = configuration.bundlePolicy;\n    }\n\n    if (typeof configuration.iceCandidatePoolSize === 'number') {\n      rtcConfiguration.iceCandidatePoolSize = configuration.iceCandidatePoolSize;\n    }\n\n    if (configuration.iceServers) {\n      const iceServers: RTCIceServer[] = [];\n\n      for (let i = 0; i < configuration.iceServers.length; i++) {\n        iceServers.push({\n          urls: configuration.iceServers[i].urls,\n          username: configuration.iceServers[i].username,\n          credential: configuration.iceServers[i].credential\n        });\n      }\n\n      rtcConfiguration.iceServers = iceServers;\n    }\n\n    if (configuration.iceTransportPolicy) {\n      rtcConfiguration.iceTransportPolicy = configuration.iceTransportPolicy;\n    }\n\n    if (configuration.rtcpMuxPolicy) {\n      rtcConfiguration.rtcpMuxPolicy = configuration.rtcpMuxPolicy;\n    }\n\n    return rtcConfiguration;\n  }\n  private async convertHttpResponseToSetRemoteDescriptionResponse(response: Response): Promise<ISetRemoteDescriptionResponseInit> {\n    const data = await response.json() as ISetRemoteDescriptionResponse;\n    const setRemoteDescriptionResponse: ISetRemoteDescriptionResponseInit = {status: data.status};\n\n    if (data && data.sessionDescription) {\n      setRemoteDescriptionResponse.sessionDescription = data.sessionDescription;\n    }\n\n    return setRemoteDescriptionResponse;\n  }\n\n  private async convertHttpResponseToAddIceCandidatesResponse(response: Response): Promise<IAddIceCandidatesResponseInit> {\n    const data = await response.json() as IAddIceCandidatesResponse;\n    const addIceCandidatesResponse: IAddIceCandidatesResponseInit = {\n      status: data.status,\n      options: []\n    };\n\n    if (data) {\n      if (data.options) {\n        addIceCandidatesResponse.options = data.options;\n      }\n    }\n\n    return addIceCandidatesResponse;\n  }\n\n  private async convertHttpResponseToDestroyStreamResponse(response: Response): Promise<IDestroyStreamResponseInit> {\n    const data = await response.json() as IDestroyStreamResponse;\n    const destroyStream: IDestroyStreamResponseInit = {status: data.status};\n\n    return destroyStream;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport EndPoint from './EndPoint';\nimport SDK from '../SDK';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport MetricsType from '../../metrics/MetricsType';\nimport DiscoveryUri from './DiscoveryUri';\nimport MetricsService from '../../metrics/MetricsService';\nimport MetricsFactory from '../../metrics/MetricsFactory';\n\nconst defaultTimeout = 20000;\n\nexport default class DiscoveryService {\n  private _logger: ILogger = LoggerFactory.getLogger('Discovery');\n  private _metricsService: MetricsService;\n  private _uri: URL;\n\n  constructor(uri: URL) {\n    if (!uri) {\n      throw new Error('Discovery requires uri');\n    }\n\n    this._metricsService = MetricsFactory.getMetricsService(uri.toString());\n    this._uri = uri;\n  }\n\n  async discoverNearbyEndPoints(uri: URL, timeout: number): Promise<EndPoint[]> {\n    if (!timeout) {\n      throw new Error('Discovery requires timeout');\n    }\n\n    const url = uri.toString();\n    const response = await Promise.race([\n      fetch(url, {\n        method: 'GET',\n        cache: 'no-cache'\n      }),\n      new Promise<Response>((_, reject) =>\n        setTimeout(() => reject(new Error(`Discovery timed out [${url}]`)), timeout)\n      )\n    ]);\n\n    if (!response.ok) {\n      throw new Error(`Discovery failed [${url}] [${response.status}]`);\n    }\n\n    if (response.body === null) {\n      throw new Error(`Discovery failed with no data [${url}]`);\n    }\n\n    const asString = await response.text();\n    const endPoints = asString.split(',');\n\n    return endPoints.map(endPoint => new EndPoint(endPoint, timeout));\n  }\n\n  async discoverClosestEndPoint(timeout: number = defaultTimeout): Promise<EndPoint> {\n    const url = DiscoveryUri.buildDiscoveryUrl(this._uri);\n    const endPoints = await this.discoverNearbyEndPoints(new URL(url), timeout);\n    let failedRequests = 0;\n    const propagateFailureIfAllRequestsFailed = (): Promise<void> => new Promise((_, reject) => {\n      if (failedRequests >= endPoints.length) {\n        reject(`Discovery of [${endPoints.length}] endpoints from [${url}] failed, preventing it from completing`);\n      }\n    });\n    const endPoint = await Promise.race(endPoints.map(endPoint => endPoint\n      .ping()\n      .catch(e => {\n        this._logger.warn('Failed to ping end point [%s]', endPoint, e);\n\n        failedRequests++;\n\n        return propagateFailureIfAllRequestsFailed();\n      })\n      .then(time => {\n        const now = Date.now();\n\n        this._logger.info('Discovered end point [%s] with time [%s]', endPoint.toString(), time);\n        this._metricsService.push({\n          metricType: MetricsType.RoundTripTime,\n          runtime: (now - SDK.pageLoadTime) / 1000,\n          value: {uint64: time || 0},\n          resource: endPoint.toString(),\n          kind: 'ping'\n        });\n\n        return endPoint;\n      })));\n\n    return endPoint;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport EndPoint from './EndPoint';\nimport SDK from '../SDK';\nimport DiscoveryService from './DiscoveryService';\n\nconst discoveryCacheInterval = 60000;\n\ninterface IPerURIEndpoint { [x: string]: Promise<EndPoint> }\n\nexport default class Discovery {\n  private static _cache: IPerURIEndpoint = {};\n\n  static async precacheClosestEndPointDiscovery(): Promise<EndPoint> {\n    const uri = new URL(SDK.discoveryUri.value);\n\n    return Discovery.discoverClosestEndPointWithCaching(uri);\n  }\n\n  static async discoverClosestEndPointWithCaching(uri: URL): Promise<EndPoint> {\n    const url = uri.toString();\n\n    if (Discovery._cache[url]) {\n      return Discovery._cache[url];\n    }\n\n    const discoveryService = new DiscoveryService(uri);\n    const cachedValue = Discovery._cache[url] = discoveryService.discoverClosestEndPoint();\n    const ignored = Discovery._cache[url].then(() => {\n      const ignored = setTimeout(() => {\n        if (Discovery._cache[url] === cachedValue) {\n          delete Discovery._cache[url];\n        }\n      }, discoveryCacheInterval);\n    }).catch(() => {\n      delete Discovery._cache[url];\n    });\n\n    return cachedValue;\n  }\n\n  static clearCachedClosestEndpoint(uri: URL): void {\n    const url = uri.toString();\n\n    if (Discovery._cache[url]) {\n      delete Discovery._cache[url];\n    }\n  }\n\n  private constructor() {\n    throw new Error('Discovery is a static class that may not be instantiated');\n  }\n}\n\nconst ignored = Discovery.precacheClosestEndPointDiscovery();","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport enum NetworkStates {\n  NetworkEmpty,\n  NetworkIdle,\n  NetworkLoading,\n  NetworkNoSource\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {ChunkedStreaming} from './ChunkedStreaming';\nimport {ChunkedStreamingOptions, ChunkedStreamingStatistics} from './StreamTypes';\nimport {NetworkStates} from './NetworkStates';\n\nconst bandwidthToStartAt = 3000000; // Corresponds to 720p in most setups\nconst minTimeBeforeNextReload = 15000;\n\ntype EventListenerForWebPlayer = (evt: WebPlayerEvent) => void;\ntype WebPlayerEvent = {\n  code: number;\n  severity: number;\n  error: string;\n};\n\nexport interface IWebPlayer {\n  start: (url: string) => void;\n  addEventListener(name: string, listener: EventListenerForWebPlayer): void;\n  dispose(): void;\n  errors: {\n    severity: {\n      RECOVERABLE: number;\n    };\n  };\n  getStats(): ChunkedStreamingStatistics;\n}\n\nexport default class WebPlayer {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('WebPlayer');\n  private readonly _videoElement: HTMLVideoElement;\n  private readonly _kind: string;\n  private readonly _streamId: string;\n  private readonly _manifestURI: string;\n  private readonly _options: ChunkedStreamingOptions;\n  private _player: IWebPlayer;\n  private _lastReloadTime: number;\n\n  constructor(videoElement: HTMLVideoElement, kind: string, streamId: string, manifestURI: string, options: ChunkedStreamingOptions) {\n    this._videoElement = videoElement;\n    this._kind = kind;\n    this._streamId = streamId;\n    this._manifestURI = encodeURI(manifestURI).replace(/[#]/g, '%23');\n    this._options = options;\n  }\n\n  start(): void {\n    if (ChunkedStreaming.phenixWebPlayer) {\n      const playerOptions = {\n        ...this._options,\n        bandwidthToStartAt\n      };\n\n      this._player = new ChunkedStreaming.phenixWebPlayer.WebPlayer(this._logger, this._videoElement, playerOptions);\n      this._player.start(this._manifestURI);\n\n      this._player.addEventListener('error', errorObject => {\n        if (this.canReload() && errorObject && (errorObject.code === 3 || errorObject.severity === ChunkedStreaming.phenixWebPlayer.errors.severity.RECOVERABLE)) {\n          this._logger.warn('Reloading unhealthy stream after error event [%j]', errorObject);\n          this.reloadIfAble();\n        }\n\n        this._logger.error('Cannot reload with error [%j]', errorObject);\n      });\n\n      return;\n    }\n  }\n\n  isSupported(): boolean {\n    return ChunkedStreaming.phenixWebPlayer && ChunkedStreaming.phenixWebPlayer.isSupported;\n  }\n\n  getStats(): ChunkedStreamingStatistics {\n    if (!this._player) {\n      return {\n        width: 0,\n        height: 0,\n        currentTime: 0.0,\n        lag: 0.0,\n        networkState: NetworkStates.NetworkNoSource,\n        dataBuffered: 0.0\n      };\n    }\n\n    const statistics = this._player.getStats();\n    const currentTime = statistics.currentTime || this._videoElement['currentTime'];\n    const trueCurrentTime = (Date.now() - this._options.originStartTime) / 1000;\n\n    if (this._videoElement.buffered?.length) {\n      statistics.dataBuffered = this._videoElement.buffered.end(0);\n    }\n\n    if (statistics.isNative && statistics.deliveryType === 'Hls') {\n      statistics.currentTime = currentTime - statistics.lag;\n    }\n\n    if (!statistics.currentTime) {\n      statistics.currentTime = currentTime;\n    }\n\n    if (!statistics.isNative) {\n      statistics.lag = Math.max(0.0, trueCurrentTime - currentTime);\n    }\n\n    if (this._videoElement.buffered?.length) {\n      statistics.networkState = NetworkStates.NetworkLoading;\n    } else if (statistics.currentTime > 0) {\n      statistics.networkState = NetworkStates.NetworkIdle;\n    } else if (statistics.video) {\n      statistics.networkState = NetworkStates.NetworkEmpty;\n    } else {\n      statistics.networkState = NetworkStates.NetworkNoSource;\n    }\n\n    return statistics;\n  }\n\n  dispose(): void {\n    if (this._player) {\n      this._player.dispose();\n    }\n\n    this._player = null;\n  }\n\n  private canReload(): boolean {\n    const hasElapsedMinTimeSinceLastReload = !this._lastReloadTime || Date.now() - this._lastReloadTime > minTimeBeforeNextReload;\n\n    return this._videoElement && this._player && this._videoElement.buffered.length !== 0 && hasElapsedMinTimeSinceLastReload;\n  }\n\n  private reloadIfAble(): void {\n    if (!this.canReload()) {\n      return;\n    }\n\n    this._logger.warn('[%s] Reloading unhealthy stream that was active for at least [%s] seconds', this._streamId, minTimeBeforeNextReload / 1000);\n\n    this._lastReloadTime = Date.now();\n\n    this.reload();\n  }\n\n  private reload(): void {\n    this._player.dispose();\n\n    this._player = null;\n\n    this.start();\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport {ChunkedStreaming} from './ChunkedStreaming';\nimport {ChunkedStreamingOptions, ChunkedStreamingStatistics} from './StreamTypes';\nimport {NetworkStates} from './NetworkStates';\n\ntype ShakaOptions = {\n  abr: {\n    defaultBandwidthEstimate: number;\n  };\n  manifest: {\n    retryParameters: {\n      timeout: number;\n    };\n  };\n  streaming: {\n    liveSyncPanicThreshold: number;\n    bufferingGoal: number;\n    bufferBehind: number;\n    retryParameters: {\n      timeout: number;\n      maxAttempts: number;\n      backoffFactor: number;\n    };\n  };\n};\n\nexport interface IShaka {\n  configure: (o: ShakaOptions) => void;\n  load: (uri: string) => Promise<void>;\n  getStats: () => ChunkedStreamingStatistics;\n  destroy: () => void;\n  unload: () => void;\n}\n\nexport default class ShakaPlayer {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('ShakaPlayer');\n  private readonly _videoElement: HTMLVideoElement;\n  private readonly _kind: string;\n  private readonly _streamId: string;\n  private readonly _manifestURI: string;\n  private readonly _options: ChunkedStreamingOptions;\n  private readonly _monitoredStatistics: {\n    estimatedBandwidth: number;\n    playTime: number;\n  };\n  private _player: IShaka;\n\n  constructor(videoElement: HTMLVideoElement, kind: string, streamId: string, manifestURI: string, options: ChunkedStreamingOptions) {\n    this._videoElement = videoElement;\n    this._kind = kind;\n    this._streamId = streamId;\n    this._manifestURI = encodeURI(manifestURI).replace(/[#]/g, '%23');\n    this._options = options;\n    this._monitoredStatistics = {\n      estimatedBandwidth: 0,\n      playTime: 0\n    };\n  }\n\n  start(): void {\n    if (ChunkedStreaming.shaka) {\n      const playerOptions: ShakaOptions = {\n        abr: {defaultBandwidthEstimate: 2000000},\n        manifest: {retryParameters: {timeout: 10000}},\n        streaming: {\n          liveSyncPanicThreshold: 1,\n          bufferingGoal: 60,\n          bufferBehind: 30,\n          retryParameters: {\n            timeout: 10000,\n            maxAttempts: 10,\n            backoffFactor: 1.1\n          }\n        }\n      };\n\n      this._player = new ChunkedStreaming.shaka.Player(this._videoElement);\n      this.loadPlayer(playerOptions);\n\n      return;\n    }\n  }\n\n  getStats(): ChunkedStreamingStatistics {\n    if (!this._player) {\n      return {\n        width: 0,\n        height: 0,\n        currentTime: 0,\n        lag: 0,\n        networkState: NetworkStates.NetworkNoSource\n      };\n    }\n\n    const statistics = {\n      ...this._player.getStats(),\n      currentTime: 0,\n      lag: 0\n    };\n    const currentTime = this._videoElement['currentTime'] || 0;\n    const trueCurrentTime = (Date.now() - this._options.originStartTime) / 1000;\n    const lag = Math.max(0.0, trueCurrentTime - currentTime);\n\n    if (this._videoElement) {\n      statistics.currentTime = currentTime;\n      statistics.lag = lag;\n\n      if (this._videoElement.buffered && this._videoElement.buffered.length) {\n        statistics.dataBuffered = this._videoElement.buffered.end(0);\n      }\n    }\n\n    if (statistics.estimatedBandwidth > 0 && this._monitoredStatistics.estimatedBandwidth < statistics.estimatedBandwidth) {\n      statistics.networkState = NetworkStates.NetworkLoading;\n    } else if (statistics.playTime > 0 && this._monitoredStatistics.playTime < statistics.playTime) {\n      statistics.networkState = NetworkStates.NetworkIdle;\n    } else if (statistics.video) {\n      statistics.networkState = NetworkStates.NetworkEmpty;\n    } else {\n      statistics.networkState = NetworkStates.NetworkNoSource;\n    }\n\n    this._monitoredStatistics.estimatedBandwidth = statistics.estimatedBandwidth;\n    this._monitoredStatistics.playTime = statistics.playTime;\n\n    return statistics;\n  }\n\n  dispose(): void {\n    if (this._player) {\n      this._player.unload();\n      this._player.destroy();\n    }\n\n    this._player = null;\n  }\n\n  private loadPlayer(playerConfig: ShakaOptions): void {\n    this._player.configure(playerConfig);\n\n    const ignored = this._player.load(this._manifestURI).then(() => {\n      this._logger.info('[%s] DASH live stream has been loaded', this._streamId);\n\n      if (this._videoElement.play) {\n        this._videoElement.play();\n      }\n    }).catch(e => {\n      this._logger.error('[%s] Error while loading DASH live stream [%s]', this._streamId, e.code, e);\n    });\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {ChunkedStreaming} from './ChunkedStreaming';\nimport {ChunkedStreamingOptions, ChunkedStreamingStatistics} from './StreamTypes';\nimport {IHlsPlayerType} from './IHlsPlayer';\nimport {NetworkStates} from './NetworkStates';\n\nexport default class HlsPlayer {\n  private readonly _videoElement: HTMLVideoElement;\n  private readonly _kind: string;\n  private readonly _streamId: string;\n  private readonly _manifestURI: string;\n  private readonly _options: ChunkedStreamingOptions;\n  private _player: IHlsPlayerType;\n\n  constructor(videoElement: HTMLVideoElement, kind: string, streamId: string, manifestURI: string, options: ChunkedStreamingOptions) {\n    this._videoElement = videoElement;\n    this._kind = kind;\n    this._streamId = streamId;\n    this._manifestURI = encodeURI(manifestURI).replace(/[#]/g, '%23');\n    this._options = options;\n  }\n\n  start(): void {\n    if (ChunkedStreaming.hlsPlayer) {\n      if (ChunkedStreaming.hlsPlayer.isSupported()) {\n        this._player = new ChunkedStreaming.hlsPlayer({\n          enableWorker: true,\n          maxBufferLength: 1,\n          backBufferLength: 0,\n          liveSyncDuration: 7,\n          liveDurationInfinity: true,\n          liveMaxLatencyDuration: Infinity,\n          highBufferWatchdogPeriod: 1\n        });\n        this._player.loadSource(this._manifestURI);\n        this._player.attachMedia(this._videoElement);\n      } else if (this._videoElement.canPlayType('application/vnd.apple.mpegurl')) {\n        this._videoElement.src = this._manifestURI;\n      }\n    }\n  }\n\n  isSupported(): boolean {\n    return ChunkedStreaming.hlsPlayer && ChunkedStreaming.hlsPlayer.isSupported();\n  }\n\n  getStats(): ChunkedStreamingStatistics {\n    if (!this._player) {\n      return {\n        width: 0,\n        height: 0,\n        currentTime: 0.0,\n        lag: 0.0,\n        networkState: NetworkStates.NetworkNoSource\n      };\n    }\n\n    const statistics = {\n      width: this._player.media.offsetWidth,\n      height: this._player.media.offsetHeight,\n      currentTime: this._player.media.currentTime,\n      lag: 0.0,\n      networkState: NetworkStates.NetworkIdle,\n      dataBuffered: 0.0\n    };\n\n    if (this._videoElement.buffered && this._videoElement.buffered.length) {\n      statistics.dataBuffered = this._videoElement.buffered.end(0);\n    }\n\n    if (this._player.streamController.state === 'IDLE') {\n      statistics.networkState = NetworkStates.NetworkIdle;\n    } else if (this._player.streamController.state === 'ERROR' || this._player.streamController.state === 'ENDED') {\n      statistics.networkState = NetworkStates.NetworkNoSource;\n    } else if (this._player.streamController.state.includes('LOADING') || this._player.streamController.state.includes('WAITING')) {\n      statistics.networkState = NetworkStates.NetworkLoading;\n    } else {\n      statistics.networkState = NetworkStates.NetworkEmpty;\n    }\n\n    const currentTime = this._videoElement['currentTime'] || 0;\n    const trueCurrentTime = (Date.now() - this._options.originStartTime) / 1000;\n\n    statistics.lag = Math.max(0.0, (currentTime + (this._options.lag / 1000)) - trueCurrentTime);\n\n    return statistics;\n  }\n\n  dispose(): void {\n    if (this._player && this._player.destroy) {\n      this._player.destroy();\n\n      this._player = null;\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport FeatureEnablement from '../../environment/FeatureEnablement';\nimport WebPlayer from './WebPlayer';\nimport SDK from '../SDK';\nimport ShakaPlayer from './ShakaPlayer';\nimport HlsPlayer from './HlsPlayer';\nimport IDisposable from '../../lang/IDisposable';\nimport {HlsPlayerType, ChunkedStreamingOptions, ChunkedStreamingStatistics, ShakaType, WebPlayerType} from './StreamTypes';\n\nexport class ChunkedStreaming {\n  private static _pending = false;\n  private static _hlsPlayer: HlsPlayerType;\n  private static _phenixWebPlayer: WebPlayerType;\n  private static _shaka: ShakaType;\n  private static _options: ChunkedStreamingOptions;\n  private static _player: ShakaPlayer | WebPlayer | HlsPlayer;\n\n  static get hlsPlayer(): HlsPlayerType {\n    return this._hlsPlayer;\n  }\n\n  static get phenixWebPlayer(): WebPlayerType {\n    return this._phenixWebPlayer;\n  }\n\n  static get shaka(): ShakaType {\n    return this._shaka;\n  }\n\n  static async start(videoElement: HTMLVideoElement, streamId: string, offerSdp: string, options: ChunkedStreamingOptions): Promise<IDisposable> {\n    this._options = options;\n\n    if (this._hlsPlayer || this._shaka || this._phenixWebPlayer) {\n      return this.loaded(videoElement, streamId, offerSdp);\n    }\n\n    if (!SDK.webPlayerLoader && !SDK.shakaPlayerLoader && !SDK.hlsJsLoader) {\n      throw new Error('Unsupported-feature, add stream player');\n    }\n\n    return new Promise(resolve => {\n      if (SDK.hlsJsLoader) {\n        this._pending = true;\n        SDK.hlsJsLoader(player => {\n          this._hlsPlayer = player;\n\n          if (this._pending) {\n            this._pending = false;\n\n            resolve(this.loaded(videoElement, streamId, offerSdp));\n          }\n        });\n      }\n\n      if (SDK.webPlayerLoader) {\n        this._pending = true;\n        SDK.webPlayerLoader(player => {\n          this._phenixWebPlayer = player;\n\n          if (this._pending) {\n            this._pending = false;\n\n            resolve(this.loaded(videoElement, streamId, offerSdp));\n          }\n        });\n      }\n\n      if (SDK.shakaPlayerLoader) {\n        this._pending = true;\n        SDK.shakaPlayerLoader(player => {\n          this._shaka = player;\n\n          if (this._pending) {\n            this._pending = false;\n\n            resolve(this.loaded(videoElement, streamId, offerSdp));\n          }\n        });\n      }\n    });\n  }\n\n  static getStats(): ChunkedStreamingStatistics {\n    if (this._player) {\n      return this._player.getStats();\n    }\n\n    return null;\n  }\n\n  private static async play(Player: typeof WebPlayer | typeof ShakaPlayer | typeof HlsPlayer, videoElement: HTMLVideoElement, streamId: string, offerSdp: string, options: ChunkedStreamingOptions): Promise<IDisposable> {\n    const dashManifestUrlMatch = offerSdp.match(/a=x-playlist:([^\\n]*[.]mpd\\??[^\\s]*)/m);\n    const hlsManifestUrlMatch = offerSdp.match(/a=x-playlist:([^\\n]*[.]m3u8\\??[^\\s]*)/m);\n    const manifestUrl = dashManifestUrlMatch && dashManifestUrlMatch[1] ? dashManifestUrlMatch[1] : '';\n    const playlistUrl = hlsManifestUrlMatch && hlsManifestUrlMatch[1] ? hlsManifestUrlMatch[1] : '';\n\n    if (playlistUrl) {\n      if (!this._phenixWebPlayer || FeatureEnablement.shouldUseNativeHls) {\n        this._player = new Player(videoElement, 'hls', streamId, playlistUrl, options);\n\n        this._player.start();\n\n        return this._player;\n      }\n    }\n\n    if (manifestUrl) {\n      if (!this._hlsPlayer && !(this._phenixWebPlayer && FeatureEnablement.shouldUseNativeHls)) {\n        this._player = new Player(videoElement, 'dash', streamId, manifestUrl, options);\n\n        this._player.start();\n\n        return this._player;\n      }\n    }\n\n    if (manifestUrl || playlistUrl) {\n      throw new Error(`[${streamId}] Cannot play [${playlistUrl ? 'HLS' : 'DASH'}] stream with included player`);\n    }\n\n    throw new Error('No stream playlist found');\n  }\n\n  private static loaded(videoElement: HTMLVideoElement, streamId: string, offerSdp: string): Promise<IDisposable> {\n    if (!this._shaka && !this._phenixWebPlayer && !this._hlsPlayer) {\n      return;\n    }\n\n    if (this._hlsPlayer) {\n      return this.play(HlsPlayer, videoElement, streamId, offerSdp, {\n        ...this._options,\n        preferNative: FeatureEnablement.shouldUseNativeHls\n      });\n    }\n\n    if (this._phenixWebPlayer) {\n      return this.play(WebPlayer, videoElement, streamId, offerSdp, {\n        ...this._options,\n        preferNative: FeatureEnablement.shouldUseNativeHls\n      });\n    }\n\n    if (this._shaka) {\n      return this.play(ShakaPlayer, videoElement, streamId, offerSdp, {\n        ...this._options,\n        preferNative: FeatureEnablement.shouldUseNativeHls\n      });\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nenum ChunkedStreamPlaybackMode {\n    Live = 1,\n    OndDemand = 2\n}\n\nexport default ChunkedStreamPlaybackMode;","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport ChannelContext from '../context/ChannelContext';\nimport Discovery from '../discovery/Discovery';\nimport Disposable from '../../lang/Disposable';\nimport DisposableList from '../../lang/DisposableList';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport ChannelState from '../channels/ChannelState';\nimport {ChunkedStreaming} from './ChunkedStreaming';\nimport {ChunkedStreamingStatistics} from './StreamTypes';\nimport IDisposable from '../../lang/IDisposable';\nimport {IStream} from './IStream';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport {NetworkStates} from './NetworkStates';\nimport ChunkedStreamPlaybackMode from './ChunkedStreamPlaybackMode';\n\nexport default class ChunkedStream implements IStream {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('ChunkedStream');\n  private readonly _channelContext: ChannelContext;\n  private readonly _chunkedStreamPlaybackMode: ChunkedStreamPlaybackMode;\n  private readonly _monitorDisposables = new DisposableList();\n  private readonly _handleStreamFailure: () => Promise<void>;\n  private _streamStatistics: ChunkedStreamingStatistics;\n  private _monitorFailureCount = 0;\n\n  constructor(channelContext, chunkedStreamPlaybackMode: ChunkedStreamPlaybackMode, handleStreamFailure: () => Promise<void>) {\n    this._channelContext = channelContext;\n    this._chunkedStreamPlaybackMode = chunkedStreamPlaybackMode;\n    this._handleStreamFailure = handleStreamFailure;\n    this._channelContext.disposables.add(this);\n  }\n\n  start(uri: URL, token: string): Promise<void | IDisposable> {\n    return Discovery.discoverClosestEndPointWithCaching(uri)\n      .then(endPoint => {\n        this._channelContext.online.value = true;\n        this._channelContext.endPoint.value = endPoint;\n        this._logger.info('Connecting to [%s]', endPoint.toString());\n\n        return endPoint.subscribe(token, null, this._channelContext.failureCount.value);\n      })\n      .then(({status, stream, createOfferDescriptionResponse, lag}) => {\n        this._channelContext.stream.value = stream;\n        this._channelContext.lag.value = lag;\n\n        this._channelContext.applySessionAndStreamPropertiesToVideoElement();\n\n        this._logger.debug(\n          '[%s] Subscribe completed [%s] [%j] [%j] [%j] [%j]',\n          this._channelContext.streamId,\n          status,\n          createOfferDescriptionResponse,\n        );\n\n        this._channelContext.state.value = this._channelContext.mapSubscribeStatusToChannelStatus(status);\n\n        this._channelContext.applyStatus(status);\n\n        if (status !== 'ok') {\n          return;\n        }\n\n        const offerSdp = createOfferDescriptionResponse.sessionDescription.sdp;\n        const options = {\n          originStartTime: Date.now() - lag + this._channelContext.endPoint.value.roundTripTime / 2,\n          lag\n        };\n\n        return ChunkedStreaming.start(this._channelContext.videoElement.value, this._channelContext.streamId, offerSdp, options)\n          .then(player => {\n            this.monitor(player);\n\n            return player;\n          })\n          .catch(e => {\n            this._logger.error('ChunkedStreaming failed', e);\n            this._channelContext.loading.value = false;\n            this._channelContext.playing.value = false;\n            this._channelContext.state.value = ChannelState.Stopped;\n          });\n      });\n  }\n\n  private monitor(player: IDisposable): void {\n    this._monitorDisposables.dispose();\n\n    const timeout = window.setTimeout(() => {\n      const newStreamStatistics = ChunkedStreaming.getStats();\n\n      if (this._chunkedStreamPlaybackMode === ChunkedStreamPlaybackMode.Live\n          && newStreamStatistics.networkState === NetworkStates.NetworkNoSource\n          && this._channelContext.videoElement.value.currentTime === this._channelContext.videoElement.value.duration\n      ) {\n        this._monitorFailureCount = 0;\n        this._channelContext.state.value = ChannelState.ConnectionError;\n\n        this._channelContext.playing.value = false;\n        this._channelContext.loading.value = true;\n        player.dispose();\n        this._monitorDisposables.dispose();\n\n        const ignored = this._handleStreamFailure()\n          .catch(e => {\n            this._logger.error('Failed handling end of stream', e);\n          });\n\n        return;\n      }\n\n      if (this._streamStatistics &&\n        !this._channelContext.videoElement.value.paused &&\n        this._streamStatistics.currentTime >= newStreamStatistics.currentTime &&\n          (this._streamStatistics.dataBuffered >= newStreamStatistics.dataBuffered || !newStreamStatistics.dataBuffered)\n      ) {\n        this._monitorFailureCount++;\n\n        if (this._monitorFailureCount > 4) {\n          this._monitorFailureCount = 0;\n          this._channelContext.state.value = ChannelState.ConnectionError;\n\n          this._channelContext.playing.value = false;\n          this._channelContext.loading.value = true;\n          player.dispose();\n          this._monitorDisposables.dispose();\n\n          const ignored = this._handleStreamFailure()\n            .catch(e => {\n              this._logger.error('Failed handling stream failure', e);\n            });\n\n          return;\n        }\n      } else {\n        this._monitorFailureCount = 0;\n      }\n\n      if (this._channelContext.videoElement.value.paused && this._channelContext.state.value === ChannelState.Playing) {\n        this._channelContext.state.value = ChannelState.Paused;\n      }\n\n      if (!this._channelContext.videoElement.value.paused && this._channelContext.state.value !== ChannelState.Playing) {\n        this._channelContext.state.value = ChannelState.Playing;\n      }\n\n      this._streamStatistics = newStreamStatistics;\n\n      this.monitor(player);\n    }, 1000);\n\n    this._monitorDisposables.add(new Disposable(() => {\n      clearTimeout(timeout);\n    }));\n  }\n\n  dispose(): void {\n    this._monitorDisposables.dispose();\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nexport default class SdpParser {\n  private readonly _sdp: string;\n  private readonly _audioCodec: string;\n  private readonly _videoCodec: string;\n  private readonly _isAudioTrackEnabled: boolean;\n  private readonly _isVideoTrackEnabled: boolean;\n\n  constructor(sdp: string) {\n    this._sdp = sdp;\n\n    const sdpSplitByLines = this._sdp.split(/(\\r\\n|\\r|\\n)/);\n    const sdpSplitByTracks = this._sdp.split(/(?:^|[\\r\\n])m=/);\n\n    this._audioCodec = this.applyCodec('audio', sdpSplitByLines);\n    this._videoCodec = this.applyCodec('video', sdpSplitByLines);\n    this._isAudioTrackEnabled = this.isTrackByTypeEnabled('audio', sdpSplitByTracks);\n    this._isVideoTrackEnabled = this.isTrackByTypeEnabled('video', sdpSplitByTracks);\n  }\n\n  get audioCodec(): string {\n    return this._audioCodec;\n  }\n\n  get videoCodec(): string {\n    return this._videoCodec;\n  }\n\n  get isAudioTrackEnabled(): boolean {\n    return this._isAudioTrackEnabled;\n  }\n\n  get isVideoTrackEnabled(): boolean {\n    return this._isVideoTrackEnabled;\n  }\n\n  private isTrackByTypeEnabled(type: string, sdpSplitByTracks: string[]): boolean {\n    const sdpSectionForType = sdpSplitByTracks.find(sdpTrack => sdpTrack.startsWith(type));\n\n    if (!sdpSectionForType) {\n      return false;\n    }\n\n    return !sdpSectionForType.includes(`a=inactive`);\n  }\n\n  private applyCodec(type: string, sdpSplitByLines: string []): string {\n    const usedCodecLine = sdpSplitByLines.find(sdpLine => sdpLine.includes(`a=rtpmap:${sdpSplitByLines.find(i => i.includes(`m=${type}`)).split(' ')[3]}`));\n    const usedCodec = usedCodecLine.split(' ')[1];\n    const codecName = usedCodec.split('/')[0];\n\n    return codecName;\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IPeerConnection from './IPeerConnection';\nimport Subject from '../rx/Subject';\nimport FeatureEnablement from '../environment/FeatureEnablement';\nimport SdpParser from './SdpParser';\nimport IDisposable from '../lang/IDisposable';\n\nexport interface IRtcMonitorStatistic {\n  [kind: string]: IRtcStatistic;\n}\n\nexport interface ILegacyRTCStatsReport {\n  result: () => ILegacyRTCStatsReportItem[];\n}\n\nexport interface ILegacyRTCStatsReportItem extends RTCStatsReport {\n  type: string;\n  names: () => string[];\n  stat: (name) => number;\n}\n\nexport interface IRtcStatistic {\n  ssrc?: string;\n  mediaType?: string;\n  timestamp: number;\n  bitrate?: number;\n  bytesReceived?: number;\n  framesDecoded?: number;\n  packetsLost?: number;\n  packetsReceived?: number;\n  codec?: string;\n  fps?: number;\n  roundTripTime?: number;\n  lastPacketReceivedTimestamp?: number;\n}\n\nconst updateStatisticTimeout = 1000;\n\nexport default class RtcConnectionMonitor implements IDisposable {\n  private readonly _estimatedRoundTripTime: number;\n  private readonly _estimatedVideoCodec: string;\n  private readonly _estimatedAudioCodec: string;\n  private readonly _rtcStatistic: Subject<IRtcMonitorStatistic> = new Subject<IRtcMonitorStatistic>({});\n  private _peerConnection: IPeerConnection;\n  private _isMonitorRunning = true;\n  private _updateTimeout: number;\n  private _tracksToMonitor: string[];\n\n  constructor(peerConnection: IPeerConnection, mediaStream: MediaStream, estimatedRoundTripTime: number) {\n    this._peerConnection = peerConnection;\n    this._estimatedRoundTripTime = estimatedRoundTripTime;\n    this._tracksToMonitor = mediaStream.getTracks().map(track => track.kind) || [];\n\n    if (this._peerConnection) {\n      if (!FeatureEnablement.getCurrentOfferDisabled) {\n        const parsedSDP = new SdpParser(this._peerConnection.currentRemoteDescription.sdp);\n\n        this._estimatedAudioCodec = parsedSDP.audioCodec;\n        this._estimatedVideoCodec = parsedSDP.videoCodec;\n      }\n\n      this.updateStatistic();\n    }\n  }\n\n  get rtcStatistic(): Subject<IRtcMonitorStatistic> {\n    return this._rtcStatistic;\n  }\n\n  dispose(): void {\n    this._isMonitorRunning = false;\n    this._peerConnection = null;\n\n    if (this._updateTimeout) {\n      clearTimeout(this._updateTimeout);\n      this._updateTimeout = null;\n    }\n  }\n\n  private async updateStatistic(): Promise<void> {\n    if (FeatureEnablement.getStatsPromiseBasedDisabled) {\n      const ignored = await this.updateStatisticLegacy();\n\n      return;\n    }\n\n    // Safari 11 doesnt have kind or mediaType so we need to take it from the inbound-rtp object id\n    const getKindForSafari11 = (item): string => item.id.includes('Audio') ? 'audio' : item.id.includes('Video') ? 'video' : '';\n    const ignored = await this._peerConnection.getStats(null)\n      .then(stats => {\n        const rtcStatistics: IRtcMonitorStatistic = {};\n\n        if (stats) {\n          let roundTripTime = this._estimatedRoundTripTime;\n          let lastPacketReceivedTimestamp;\n\n          stats.forEach(report => {\n            if (report.type === 'candidate-pair' && report.currentRoundTripTime) {\n              roundTripTime = report.currentRoundTripTime * 1000;\n\n              if (rtcStatistics['audio']) {\n                rtcStatistics['audio'].roundTripTime = roundTripTime;\n              }\n\n              if (rtcStatistics['video']) {\n                rtcStatistics['video'].roundTripTime = roundTripTime;\n              }\n            }\n\n            if (report.type === 'candidate-pair' && report.lastPacketReceivedTimestamp) {\n              lastPacketReceivedTimestamp = report.lastPacketReceivedTimestamp;\n\n              if (rtcStatistics['audio']) {\n                rtcStatistics['audio'].lastPacketReceivedTimestamp = lastPacketReceivedTimestamp;\n              }\n\n              if (rtcStatistics['video']) {\n                rtcStatistics['video'].lastPacketReceivedTimestamp = lastPacketReceivedTimestamp;\n              }\n            }\n\n            if (report.type === 'inbound-rtp') {\n              const kind = report.kind || report.mediaType || getKindForSafari11(report);\n              let codec = '';\n\n              stats.forEach(item => {\n                if (item.id === report.codecId) {\n                  codec = item.mimeType;\n                }\n              });\n\n              if (kind && this._tracksToMonitor.includes(kind)) {\n                const bytes = report.bytesReceived || 0;\n                const previousBytesReceived = this._rtcStatistic.value?.[kind]?.bytesReceived ?? 0;\n                const bytesDelta = bytes - previousBytesReceived;\n                const timeDelta = report.timestamp - this._rtcStatistic.value?.[kind]?.timestamp;\n                const bitrate = bytesDelta && timeDelta ? Math.floor(8 * bytesDelta /\n                  timeDelta * 1000) : 0;\n\n                rtcStatistics[kind] = {\n                  ssrc: report.ssrc,\n                  mediaType: kind,\n                  timestamp: report.timestamp,\n                  bitrate,\n                  bytesReceived: report.bytesReceived,\n                  packetsLost: report.packetsLost,\n                  packetsReceived: report.packetsReceived,\n                  codec: codec || this.getCodecByType(kind),\n                  roundTripTime\n                };\n\n                if (report.lastPacketReceivedTimestamp || lastPacketReceivedTimestamp) {\n                  rtcStatistics[kind].lastPacketReceivedTimestamp = report.lastPacketReceivedTimestamp || lastPacketReceivedTimestamp;\n                }\n\n                if (kind === 'video' && this._rtcStatistic.value && this._rtcStatistic.value.video) {\n                  rtcStatistics[kind]['framesDecoded'] = report.framesDecoded;\n\n                  const fps = (report.framesDecoded - this._rtcStatistic.value.video.framesDecoded) /\n                    (rtcStatistics[kind].timestamp - this._rtcStatistic.value.video.timestamp) *\n                    1000;\n\n                  rtcStatistics[kind]['fps'] = fps ? Math.round(fps * 100) / 100 : 0;\n                }\n              }\n            }\n          });\n        }\n\n        this._rtcStatistic.value = rtcStatistics;\n      }).then(() => {\n        if (this._isMonitorRunning) {\n          this._updateTimeout = window.setTimeout(() => this.updateStatistic(), updateStatisticTimeout);\n        }\n      });\n  }\n\n  private async updateStatisticLegacy(): Promise<void> {\n    const ignored = await this._peerConnection.getStatsLegacy().then(stats => {\n      const rtcStatistics: IRtcMonitorStatistic = {};\n      let roundTripTime = this._estimatedRoundTripTime;\n\n      stats.result().forEach(report => {\n        report.names().forEach(name => {\n          if (name === 'googRTT') {\n            roundTripTime = report.stat(name);\n          }\n        });\n\n        if (report.type === 'ssrc') {\n          const mediaType = report.stat('mediaType').toString();\n\n          rtcStatistics[mediaType] = {timestamp: Date.now()};\n          rtcStatistics[mediaType]['ssrc'] = report.stat('ssrc').toString();\n          rtcStatistics[mediaType]['mediaType'] = mediaType;\n          rtcStatistics[mediaType]['bytesReceived'] = report.stat('bytesReceived');\n          rtcStatistics[mediaType]['packetsLost'] = report.stat('packetsLost');\n          rtcStatistics[mediaType]['packetsReceived'] = report.stat('packetsReceived');\n          rtcStatistics[mediaType]['codec'] = report.stat('googCodecName').toString() || this.getCodecByType(mediaType);\n          rtcStatistics[mediaType]['roundTripTime'] = roundTripTime;\n\n          if (mediaType === 'video' && this._rtcStatistic.value && this._rtcStatistic.value.video) {\n            rtcStatistics[mediaType]['framesDecoded'] = report.stat('framesDecoded');\n            rtcStatistics[mediaType]['fps'] = (rtcStatistics[mediaType].framesDecoded - this._rtcStatistic.value.video.framesDecoded) /\n              (rtcStatistics[mediaType].timestamp - this._rtcStatistic.value.video.timestamp) *\n            1000 || 0;\n          }\n        }\n      });\n      this._rtcStatistic.value = rtcStatistics;\n    }).then(() => {\n      if (this._isMonitorRunning) {\n        this._updateTimeout = window.setTimeout(() => this.updateStatistic(), updateStatisticTimeout);\n      }\n    });\n  }\n\n  private getCodecByType(type: string): string {\n    switch (type) {\n      case 'audio':\n        return this._estimatedAudioCodec;\n      case 'video':\n        return this._estimatedVideoCodec;\n      default:\n        return 'unknown';\n    }\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nexport default class RtcConfigurationManager {\n  static truncateIceServers(configuration: RTCConfiguration): RTCConfiguration {\n    const iceServers: RTCIceServer[] = [];\n\n    for (let i = 0; i < configuration.iceServers.length; i++) {\n      const urls: string[] = [];\n\n      for (let index = 0; index < 2; index++) {\n        const url = configuration.iceServers[i].urls[index];\n\n        if (url) {\n          urls.push(configuration.iceServers[i].urls[index]);\n        }\n      }\n\n      iceServers.push({\n        urls: urls,\n        username: configuration.iceServers[i].username,\n        credential: configuration.iceServers[i].credential\n      });\n    }\n\n    configuration.iceServers = iceServers;\n\n    return configuration;\n  }\n\n  private constructor() {\n    throw new Error('RtcConfigurationManager is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n\nimport BrowserDetector from '../../dom/BrowserDetector';\n\nexport const SkipFrame = Symbol();\n\nexport type SurrogateFrameType = ArrayBuffer | undefined | typeof SkipFrame;\n\nexport default class SurrogateFrameDataManager {\n  private static readonly _isSafari = BrowserDetector.browserName === 'Safari';\n  private static readonly _isMobileChrome = BrowserDetector.browserName === 'Chrome' && BrowserDetector.isMobile();\n  private static readonly _isAndroidChrome = BrowserDetector.browserName === 'Chrome' && BrowserDetector.isAndroid;\n  private static readonly _singleZeroByte = new Uint8Array([0x00]);\n  private static readonly _dummyAudioSilentPerCodec = {OPUS: new Uint8Array([0x68, 0x07, 0xd9, 0xab, 0xbc, 0x79, 0x87, 0xab, 0x8e, 0x4a, 0x14, 0xf3, 0xa7, 0x1c, 0xf2, 0x9a, 0x7a, 0x45, 0xa7, 0x2d, 0x44, 0x25, 0x74, 0x4c, 0xad, 0x16, 0xb3, 0x0e, 0x51, 0x57, 0xea, 0xe7, 0xad, 0x2a, 0x38, 0xce, 0x33])};\n  private static readonly _dummy2x2VideoIFramePerCodec = {\n    H264: new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, 0x09, 0xf0, // Access unit delimiter\n      0x00, 0x00, 0x00, 0x01, 0x67, 0xf4, 0x00, 0x0a, 0x91, 0x9b, 0x2b, 0xf1, 0xf1, 0xf8, 0x08, 0x80, 0x00, 0x00, 0x03, 0x00, 0x80, 0x00, 0x00, 0x19, 0x07, 0x89, 0x12, 0xcb, // Sequence parameter set\n      0x00, 0x00, 0x00, 0x01, 0x68, 0xeb, 0xe3, 0xc4, 0x48, 0x44, // Picture paramter set\n      /* */ 0x00, 0x00, 0x01, 0x65, 0x88, 0x82, 0x00, 0x3f, 0x70, 0x23, 0x86, 0xe6, 0xd1, 0x80, 0x09, 0xaf, 0x0a, 0x41, 0x66, 0x6b, 0x54, 0x46, 0xfb, 0x71, 0xd9, 0x7f, 0xff, 0xff, 0xf9]), // Slice layer: idr data\n    VP8: new Uint8Array([0xb0, 0x02, 0x00, 0x9d, 0x01, 0x2a, 0x01, 0x00, 0x01, 0x00, 0x39, 0x6b, 0x00, 0x27, 0x1c, 0x24, 0x0c, 0x2c, 0x2c, 0x44, 0xcc, 0x24, 0x41, 0xa8, 0x00, 0x13, 0xa7, 0xa3, 0x7a, 0x50, 0x00, 0xfe, 0xeb, 0xde, 0x2f, 0x8a, 0x1e, 0x6b, 0x7b, 0x07, 0x72, 0x63, 0x09, 0xa4, 0x8e, 0xc0]),\n    VP9: new Uint8Array([0x82, 0x49, 0x83, 0x42, 0x00, 0x00, 0x00, 0x00, 0x06, 0x76, 0x38, 0x24, 0x1c, 0x19, 0xa0, 0x00, 0x00, 0x20, 0x40, 0x00, 0x11, 0xbf, 0xdd, 0x77, 0xff, 0x40, 0x7f, 0xb1, 0x00])\n  };\n  private static readonly _dummy2x2VideoPFramePerCodec = {\n    H264: new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, 0x09, 0xf0, // Access unit delimiter\n      0x00, 0x00, 0x00, 0x01, 0x41, 0x9a, 0x68, 0x49, 0xa8, 0x41, 0x68, 0x99, 0x4c, 0x0f, 0xff, 0x92, 0x81]), // Slice layer: non idr data\n    VP8: new Uint8Array([0x31, 0x03, 0x00, 0xe4, 0xe0, 0xa8, 0x9b, 0x37, 0xaf, 0x10, 0x4f, 0x4f, 0xb1, 0x0a, 0x2f, 0xe4, 0x92, 0xc0, 0x1f, 0xe7, 0x4f, 0x46, 0xff, 0xee, 0x51, 0xc1, 0x5d, 0x00, 0xfe, 0xeb, 0xde, 0x2f, 0x8a, 0x1e, 0x6b, 0x7b, 0x07, 0x72, 0x63, 0x09, 0xa4, 0x8e, 0xc0]),\n    VP9: new Uint8Array([0x86, 0x00, 0x40, 0x92, 0x9c, 0x24, 0x48, 0x00, 0x00, 0x03, 0x70, 0x00, 0x00, 0x4b, 0x40])\n  };\n  private static readonly _dummy82x82H264 = {\n    IFrame: new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, 0x67, 0x42, 0xc0, 0x0d, 0xda, 0x18, 0xde, 0x22, 0x22, 0x10, 0x00, 0x00, 0x03, 0x00, 0x10, 0x00, 0x00, 0x03, 0x03, 0xc8, 0xf1, 0x42, 0xaa, // Sequence parameter set\n      0x00, 0x00, 0x00, 0x01, 0x68, 0xce, 0x0f, 0xc8, // Picture parameter set\n      0x00, 0x00, 0x00, 0x01, 0x06, 0x03, ...new Uint8Array(40).fill(0xff), 0x5f, ...new Uint8Array(10295).fill(0xff), 0x80, // Supplemental enhancement information (SEI)\n      0x00, 0x00, 0x00, 0x01, 0x65, 0x88, 0x84, 0x05, ...new Uint8Array(3).fill(0xff), 0x0f, 0x45, 0x00, 0x01, 0x57, 0x9f, 0x27, 0x27, 0x27, 0x27, 0x27, 0x5d, 0x75, 0xd7, 0x5d, 0x75, 0xd7, 0x5d, 0x75, 0xd7, 0x5d, 0x75, 0xd7, 0x5d, 0x75, 0xd7, 0x5d, 0x75, 0xd7, 0x5d, 0x75, 0xd7, 0x5d, 0x78]), // Slice layer: Idr data\n    PFrame: new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, 0x06, 0x03, ...new Uint8Array(40).fill(0xff), 0xa4, ...new Uint8Array(10364).fill(0xff), 0x80, // SEI\n      0x00, 0x00, 0x00, 0x01, 0x41, 0x9a, 0x20, 0x15, 0xf0, 0x4b]) // Slice layer: non idr data\n  };\n  private static readonly _dummy82x82H264PFrameFrameNumberIndex = 10418;\n  private static readonly _surrogate82x82PFrameFrameNumberReset = 1;\n  private static readonly _useUpdateSurrogate82x82PFrameFrameNumber = SurrogateFrameDataManager._isMobileChrome || SurrogateFrameDataManager._isSafari;\n  private static _surrogate82x82PFrameFrameNumber = SurrogateFrameDataManager._surrogate82x82PFrameFrameNumberReset;\n\n  static getSurrogateAudioSilentPerCodec(codec: string): ArrayBuffer | undefined {\n    switch (codec.toUpperCase()) {\n      case 'OPUS': {\n        return SurrogateFrameDataManager._dummyAudioSilentPerCodec.OPUS.buffer;\n      }\n\n      default: {\n        return undefined;\n      }\n    }\n  }\n\n  static getInvalidSurrogateAudioData(): ArrayBuffer {\n    return SurrogateFrameDataManager._singleZeroByte.buffer;\n  }\n\n  static getSurrogateVideoIFramePerCodec(codec: string): ArrayBuffer | undefined {\n    switch (codec.toUpperCase()) {\n      case 'H264': {\n        if (SurrogateFrameDataManager._useUpdateSurrogate82x82PFrameFrameNumber) {\n          SurrogateFrameDataManager._surrogate82x82PFrameFrameNumber = SurrogateFrameDataManager._surrogate82x82PFrameFrameNumberReset;\n\n          return SurrogateFrameDataManager._dummy82x82H264.IFrame.buffer;\n        }\n\n        return SurrogateFrameDataManager._dummy2x2VideoIFramePerCodec.H264.buffer;\n      }\n\n      case 'VP8': {\n        return SurrogateFrameDataManager._dummy2x2VideoIFramePerCodec.VP8.buffer;\n      }\n\n      case 'VP9': {\n        return SurrogateFrameDataManager._dummy2x2VideoIFramePerCodec.VP9.buffer;\n      }\n\n      default: {\n        return undefined;\n      }\n    }\n  }\n\n  static getInvalidSurrogateVideoIFrame(codec: string): SurrogateFrameType {\n    if ((codec.toUpperCase() === 'H264') && SurrogateFrameDataManager._useUpdateSurrogate82x82PFrameFrameNumber) {\n      SurrogateFrameDataManager._surrogate82x82PFrameFrameNumber = SurrogateFrameDataManager._surrogate82x82PFrameFrameNumberReset;\n\n      if (SurrogateFrameDataManager._isAndroidChrome) {\n        return SkipFrame;\n      }\n    }\n\n    return SurrogateFrameDataManager._singleZeroByte.buffer;\n  }\n\n  static getSurrogateVideoPFramePerCodec(codec: string): ArrayBuffer | undefined {\n    switch (codec.toUpperCase()) {\n      case 'H264': {\n        if (SurrogateFrameDataManager._useUpdateSurrogate82x82PFrameFrameNumber) {\n          const buffer = SurrogateFrameDataManager.getSurrogate82x82PFrameAndUpdateFrameNumber();\n\n          return buffer;\n        }\n\n        return SurrogateFrameDataManager._dummy2x2VideoPFramePerCodec.H264.buffer;\n      }\n\n      case 'VP8': {\n        return SurrogateFrameDataManager._dummy2x2VideoPFramePerCodec.VP8.buffer;\n      }\n\n      case 'VP9': {\n        return SurrogateFrameDataManager._dummy2x2VideoPFramePerCodec.VP9.buffer;\n      }\n\n      default: {\n        return undefined;\n      }\n    }\n  }\n\n  static getInvalidSurrogateVideoPFrame(codec: string): SurrogateFrameType {\n    if ((codec.toUpperCase() === 'H264') && SurrogateFrameDataManager._useUpdateSurrogate82x82PFrameFrameNumber) {\n      const savedSurrogateFrameNumber = SurrogateFrameDataManager._surrogate82x82PFrameFrameNumber;\n      const buffer = SurrogateFrameDataManager.getSurrogate82x82PFrameAndUpdateFrameNumber();\n\n      if (savedSurrogateFrameNumber > SurrogateFrameDataManager._surrogate82x82PFrameFrameNumberReset) {\n        if (SurrogateFrameDataManager._isAndroidChrome) {\n          return SkipFrame;\n        }\n\n        return SurrogateFrameDataManager._singleZeroByte.buffer;\n      }\n\n      SurrogateFrameDataManager._surrogate82x82PFrameFrameNumber++;\n\n      return buffer;\n    }\n\n    return SurrogateFrameDataManager._singleZeroByte.buffer;\n  }\n\n  private static getSurrogate82x82PFrameAndUpdateFrameNumber(): ArrayBuffer {\n    const bitMask1 = 0x0e;\n    const bitMask2 = 0x01;\n    const bitShiftRightBy1 = 1;\n    const bitShiftLeftBy7 = 7;\n    const byte1 = ((SurrogateFrameDataManager._surrogate82x82PFrameFrameNumber & bitMask1) >> bitShiftRightBy1);\n    const byte2 = ((SurrogateFrameDataManager._surrogate82x82PFrameFrameNumber & bitMask2) << bitShiftLeftBy7);\n    const copyOfDummyPFrames = SurrogateFrameDataManager._dummy82x82H264.PFrame.slice();\n    const buffer = copyOfDummyPFrames.buffer;\n    const bufferIndex = SurrogateFrameDataManager._dummy82x82H264PFrameFrameNumberIndex;\n\n    buffer[bufferIndex] |= byte1;\n    buffer[bufferIndex + 1] |= byte2;\n    SurrogateFrameDataManager._surrogate82x82PFrameFrameNumber++;\n\n    return buffer;\n  }\n\n  private constructor() {\n    throw new Error('SurrogateFrameDataManager is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Disposable from '../../lang/Disposable';\nimport DisposableList from '../../lang/DisposableList';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport {IStreamTrackTransform} from '../transformation/StreamTrackTransform';\nimport {IEncodedStreamSink} from '../transformation/EncodedStreamSink';\nimport FeatureEnablement from '../../environment/FeatureEnablement';\nimport SurrogateFrameDataManager, {SurrogateFrameType, SkipFrame} from './SurrogateFrameDataManager';\n\ntype MediaStreamTrackKind = 'video' | 'audio';\n\nexport default class InsertableStreams {\n  static applyEncodedStreamTransformation(stream: MediaStream, receivers: RTCRtpReceiver[], encodedVideoStreamSink: IEncodedStreamSink<RTCEncodedVideoFrame>, encodedAudioStreamSink: IEncodedStreamSink<RTCEncodedAudioFrame>, videoCodec: string, audioCodec: string): {disposables: DisposableList} {\n    const disposables: DisposableList = new DisposableList();\n\n    stream.getTracks().forEach(track => {\n      const receiver = receivers.filter(receive => receive.track === track)[0];\n      const kind: MediaStreamTrackKind = track.kind as MediaStreamTrackKind;\n\n      switch (kind) {\n        case 'video': {\n          if (encodedVideoStreamSink) {\n            if (FeatureEnablement.isRTCRtpScriptTransformSupported) {\n              const worker = new Worker(new URL('./WorkerTransformStream.ts', import.meta.url), {type: 'module'});\n\n              worker.onmessage = async event => {\n                console.log('NIKNIK: IS onmessage ...');\n\n                if (!await encodedVideoStreamSink(track, event.data.chunk)) {\n                  worker.postMessage({forceInvalidFrame: true});\n                }\n              };\n\n              receiver.transform = new RTCRtpScriptTransform(worker, {\n                kind: track.kind,\n                codec: videoCodec\n              });\n              disposables.add(new Disposable(() => {\n                worker.terminate();\n              }));\n\n              break;\n            }\n\n            const encodedStreamTransformCallback: TransformerTransformCallback<RTCEncodedVideoFrame, RTCEncodedVideoFrame> = async(chunk, controller) => {\n              console.log('NIKNIK: IS createEncodedStreams SHOULD NOT BE HERE ...');\n\n              if (!await encodedVideoStreamSink(track, chunk)) {\n                let surrogate: SurrogateFrameType;\n\n                if (chunk.type === 'key') {\n                  surrogate = SurrogateFrameDataManager.getInvalidSurrogateVideoIFrame(videoCodec);\n                } else {\n                  surrogate = SurrogateFrameDataManager.getInvalidSurrogateVideoPFrame(videoCodec);\n                }\n\n                if (surrogate === SkipFrame) {\n                  return;\n                }\n\n                chunk.data = surrogate || chunk.data;\n              } else {\n                if (chunk.type === 'key') {\n                  chunk.data = SurrogateFrameDataManager.getSurrogateVideoIFramePerCodec(videoCodec) || chunk.data;\n                } else {\n                  chunk.data = SurrogateFrameDataManager.getSurrogateVideoPFramePerCodec(videoCodec) || chunk.data;\n                }\n              }\n\n              controller.enqueue(chunk);\n            };\n\n            const transformer = new TransformStream({transform: encodedStreamTransformCallback});\n            const receiverStreams = receiver.createEncodedStreams();\n            const source = receiverStreams.readable;\n            const sink = receiverStreams.writable;\n\n            source\n              .pipeThrough(transformer)\n              .pipeTo(sink);\n          }\n\n          break;\n        }\n\n        case 'audio': {\n          if (encodedAudioStreamSink) {\n            if (FeatureEnablement.isRTCRtpScriptTransformSupported) {\n              const worker = new Worker(new URL('./WorkerTransformStream.ts', import.meta.url), {type: 'module'});\n\n              worker.onmessage = async event => {\n                if (!await encodedAudioStreamSink(track, event.data.chunk)) {\n                  worker.postMessage({forceInvalidFrame: true});\n                }\n              };\n\n              receiver.transform = new RTCRtpScriptTransform(worker, {\n                kind: track.kind,\n                codec: audioCodec\n              });\n\n              const mediaStream = new MediaStream();\n              const audioPumper = new Audio();\n\n              audioPumper.srcObject = mediaStream;\n              document.body.appendChild(audioPumper);\n\n              disposables.add(new Disposable(() => {\n                worker.terminate();\n                document.body.removeChild(audioPumper);\n              }));\n\n              break;\n            }\n\n            const encodedStreamTransformCallback: TransformerTransformCallback<RTCEncodedAudioFrame, RTCEncodedAudioFrame> = async(chunk, controller) => {\n              if (!await encodedAudioStreamSink(track, chunk)) {\n                chunk.data = SurrogateFrameDataManager.getInvalidSurrogateAudioData();\n              } else {\n                chunk.data = SurrogateFrameDataManager.getSurrogateAudioSilentPerCodec(audioCodec) || chunk.data;\n              }\n\n              controller.enqueue(chunk);\n            };\n\n            const transformer = new TransformStream({transform: encodedStreamTransformCallback});\n            const receiverStreams = receiver.createEncodedStreams();\n            const source = receiverStreams.readable;\n            const sink = receiverStreams.writable;\n\n            source\n              .pipeThrough(transformer)\n              .pipeTo(sink);\n          }\n\n          break;\n        }\n\n        default:\n          assertUnreachable(kind);\n      }\n    });\n\n    return {disposables};\n  }\n\n  static applyInsertableStreamTransformation(stream: MediaStream, videoStreamTransformCallback: IStreamTrackTransform<VideoFrame>, audioStreamTransformCallback: IStreamTrackTransform<AudioData>): {transformedStream: MediaStream; disposables: DisposableList} {\n    const transformedStream = new MediaStream();\n    const disposables: DisposableList = new DisposableList();\n\n    stream.getTracks().forEach(track => {\n      const kind: MediaStreamTrackKind = track.kind as MediaStreamTrackKind;\n\n      switch (kind) {\n        case 'video': {\n          if (videoStreamTransformCallback) {\n            const insertableStreamTransformCallback: TransformerTransformCallback<VideoFrame, VideoFrame> = (chunk, controller) => {\n              videoStreamTransformCallback(track, chunk, controller);\n            };\n\n            const videoTrack = track as MediaStreamVideoTrack;\n            const transformer = new TransformStream({transform: insertableStreamTransformCallback});\n            const processor = new MediaStreamTrackProcessor({track: videoTrack});\n            const generator = new MediaStreamTrackGenerator({kind: videoTrack.kind});\n            const source = processor.readable;\n            const sink = generator.writable;\n\n            source\n              .pipeThrough(transformer)\n              .pipeTo(sink);\n\n            transformedStream.addTrack(generator);\n            disposables.add(new Disposable(() => {\n              transformedStream.removeTrack(generator);\n            }));\n          } else {\n            transformedStream.addTrack(track);\n          }\n\n          break;\n        }\n\n        case 'audio': {\n          if (audioStreamTransformCallback) {\n            const insertableStreamTransformCallback: TransformerTransformCallback<AudioData, AudioData> = (chunk, controller) => {\n              audioStreamTransformCallback(track, chunk, controller);\n            };\n\n            const audioTrack = track as MediaStreamAudioTrack;\n            const transformer = new TransformStream({transform: insertableStreamTransformCallback});\n            const processor = new MediaStreamTrackProcessor({track: audioTrack});\n            const generator = new MediaStreamTrackGenerator({kind: audioTrack.kind});\n            const source = processor.readable;\n            const sink = generator.writable;\n\n            source\n              .pipeThrough(transformer)\n              .pipeTo(sink);\n\n            transformedStream.addTrack(generator);\n\n            const mediaStream = new MediaStream();\n            const audioPumper = new Audio();\n\n            mediaStream.addTrack(track);\n            audioPumper.srcObject = mediaStream;\n            document.body.appendChild(audioPumper);\n            disposables.add(new Disposable(() => {\n              transformedStream.removeTrack(generator);\n              document.body.removeChild(audioPumper);\n            }));\n          } else {\n            transformedStream.addTrack(track);\n          }\n\n          break;\n        }\n\n        default:\n          assertUnreachable(kind);\n      }\n    });\n\n    return {\n      transformedStream,\n      disposables\n    };\n  }\n\n  constructor() {\n    throw new Error('InsertableStreams is a static class that may not be instantiated');\n  }\n}\n","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport IPeerConnection from '../../rtc/IPeerConnection';\nimport SDK from '../SDK';\nimport DisposableList from '../../lang/DisposableList';\nimport GarbageCollectorManager from '../../dom/GarbageCollectorManager';\nimport {IStream} from './IStream';\nimport {SetRemoteDescriptionStatus} from '../discovery/EndPoint';\nimport PeerConnectionService from '../../rtc/PeerConnectionService';\nimport Discovery from '../discovery/Discovery';\nimport FeatureEnablement from '../../environment/FeatureEnablement';\nimport ChannelState from '../channels/ChannelState';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport RtcConnectionMonitor from '../../rtc/RtcConnectionMonitor';\nimport Durations from '../../time/Duration';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport ChannelContext from '../context/ChannelContext';\nimport RtcConfigurationManager from '../../rtc/RtcConfigurationManager';\nimport PeerConnectionContext from '../context/PeerConnectionContext';\nimport StreamTransformContext from '../context/StreamTransformContext';\nimport InsertableStreams from '../transformation/InsertableStreams';\nimport SdpParser from '../../rtc/SdpParser';\n\nconst iceCandidateAccumulationInterval = 100;\nconst defaultStreamSetupTimeout = 30000;\n\nexport default class RealTimeStream implements IStream {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('RealTimeStream');\n  private readonly _channelContext: ChannelContext;\n  private readonly _peerConnectionContext: PeerConnectionContext;\n  private readonly _streamTransformContext: StreamTransformContext;\n  private readonly _handleStreamFailure: () => Promise<void>;\n  private readonly _disposables: DisposableList;\n\n  constructor(channelContext, peerConnectionContext, streamTransformContext, handleStreamFailure: () => Promise<void>) {\n    this._channelContext = channelContext;\n    this._peerConnectionContext = peerConnectionContext;\n    this._streamTransformContext = streamTransformContext;\n    this._handleStreamFailure = handleStreamFailure;\n    this._disposables = new DisposableList();\n    this._channelContext.disposables.add(this);\n  }\n\n  start(uri, token, listenOnStreamSetup, playMediaStreamInVideoElement): Promise<void> {\n    const encodedInsertableStreams = typeof this._streamTransformContext.encodedVideoStreamSink === 'function' || typeof this._streamTransformContext.encodedAudioStreamSink === 'function';\n\n    return Promise.all([\n      Discovery.discoverClosestEndPointWithCaching(uri),\n      PeerConnectionService.createPeerConnectionOffer('recvonly', encodedInsertableStreams)\n        .then(({localOffer, peerConnection}) => {\n          this._peerConnectionContext.peerConnection.value = peerConnection;\n\n          return {\n            localOffer,\n            peerConnection\n          };\n        })\n    ])\n      .then(([endPoint, {localOffer, peerConnection}]) => {\n        this._channelContext.online.value = true;\n        this._channelContext.endPoint.value = endPoint;\n        this._logger.info('Connecting to [%s]', endPoint.toString());\n        this._logger.info('Local offer:\\n' + localOffer.sdp);\n\n        if (FeatureEnablement.clientOfferDisabled || !peerConnection.supportsSetConfiguration || !peerConnection.supportsGetConfiguration) {\n          peerConnection.close();\n          peerConnection.dispose();\n\n          if (SDK.forceGarbageCollectionOnRestart && !(FeatureEnablement.isMobile && SDK.skipGarbageCollectionOnMobileDevices)) {\n            GarbageCollectorManager.forceGarbageCollection();\n          }\n\n          peerConnection = null;\n          localOffer = null;\n          this._peerConnectionContext.peerConnection.value = peerConnection;\n        }\n\n        return endPoint.subscribe(token, localOffer, this._channelContext.failureCount.value);\n      })\n      .then(({status, stream, rtcConfiguration, setRemoteDescriptionResponse, createOfferDescriptionResponse, createAnswerDescriptionResponse, lag}) => {\n        this._channelContext.stream.value = stream;\n        this._channelContext.lag.value = lag;\n\n        this._channelContext.applySessionAndStreamPropertiesToVideoElement();\n\n        this._logger.debug(\n          '[%s] Subscribe completed [%s] [%j] [%j] [%j] [%j]',\n          this._channelContext.streamId,\n          status,\n          rtcConfiguration,\n          setRemoteDescriptionResponse,\n          createOfferDescriptionResponse,\n          createAnswerDescriptionResponse\n        );\n\n        this._channelContext.state.value = this._channelContext.mapSubscribeStatusToChannelStatus(status);\n\n        this._channelContext.applyStatus(status);\n\n        if (status !== 'ok') {\n          return;\n        }\n\n        return this.applyRtcConfiguration(this._peerConnectionContext.peerConnection.value, rtcConfiguration)\n          .then(peerConnection => {\n            let submitCandidatesTimeout;\n            let cancelDiscovery = false;\n            let discoveryCompleted = false;\n            const candidates: RTCIceCandidate[] = [];\n\n            if (!this._peerConnectionContext.peerConnection.value) {\n              this._peerConnectionContext.peerConnection.value = peerConnection;\n            }\n\n            peerConnection.onicecandidate = (e): void => {\n              if (this._channelContext.stream.value !== stream) {\n                return;\n              }\n\n              if (this._peerConnectionContext.peerConnection.value !== peerConnection) {\n                return;\n              }\n\n              if (cancelDiscovery) {\n                return;\n              }\n\n              if (!SDK.sendLocalCandidates.value) {\n                return;\n              }\n\n              if (e.candidate && e.candidate.candidate) {\n                candidates.push(e.candidate);\n              } else {\n                discoveryCompleted = true;\n              }\n\n              if (!submitCandidatesTimeout) {\n                submitCandidatesTimeout = setTimeout(() => {\n                  if (this._channelContext.stream.value !== stream) {\n                    return;\n                  }\n\n                  if (cancelDiscovery) {\n                    return;\n                  }\n\n                  const ignored = this._channelContext.endPoint.value.addIceCandidates(stream, candidates, discoveryCompleted)\n                    .then(({status, options}) => {\n                      if (status !== 'ok') {\n                        this._logger.warn('[%s] Failed to add ICE candidates with reason [%s]', this._channelContext.streamId, status);\n\n                        return;\n                      }\n\n                      if (options.includes('cancel')) {\n                        cancelDiscovery = true;\n                      }\n\n                      this._logger.info('[%s] Added ICE candidates with reason [%s] and options [%s]', this._channelContext.streamId, status, options);\n                    })\n                    .catch(e => {\n                      this._logger.error('[%s] Failed to add ICE candidates', this._channelContext.streamId, e);\n                    });\n                }, iceCandidateAccumulationInterval);\n              }\n            };\n\n            peerConnection.oniceconnectionstatechange = (): void => {\n              if (this._channelContext.stream.value !== stream) {\n                return;\n              }\n\n              if (this._peerConnectionContext.peerConnection.value !== peerConnection) {\n                return;\n              }\n\n              const retryCallback = (): void => {\n                // If we stop normally the peer connection is unregistered first.\n                // Thus anytime we see a closed peer connection that is still valid, it is an error.\n                this._channelContext.state.value = ChannelState.ConnectionError;\n\n                if (this._channelContext.videoElement.value) {\n                  this._channelContext.videoElement.value.pause();\n                  this._channelContext.videoElement.value.srcObject = null;\n                }\n\n                this._channelContext.playing.value = false;\n                this._channelContext.loading.value = true;\n\n                const ignored = this._handleStreamFailure()\n                  .catch(e => {\n                    this._logger.error(\n                      '[%s] Failed handling stream failure after peer connection stopped with state [%s]',\n                      this._channelContext.streamId,\n                      peerConnection.iceConnectionState,\n                      e\n                    );\n                  });\n              };\n\n              switch (peerConnection.iceConnectionState) {\n                case 'checking':\n                case 'completed':\n                case 'connected':\n                case 'new':\n                  return;\n\n                case 'disconnected':\n                case 'failed':\n                  if (navigator.onLine) {\n                    this._logger.info('[%s] ICE connection state changed to [%s], trying to reconnect', this._channelContext.streamId, peerConnection.iceConnectionState);\n                    this.reconnectPeerConnection(peerConnection, retryCallback);\n                  }\n\n                  return;\n                case 'closed':\n                  this._logger.info('[%s] ICE connection state changed to [%s], retrying to connect', this._channelContext.streamId, peerConnection.iceConnectionState);\n\n                  retryCallback();\n\n                  return;\n                default:\n                  assertUnreachable(peerConnection.iceConnectionState);\n              }\n            };\n\n            const mediaStreamPromise = new Promise<MediaStream>((resolve, reject) => {\n              if (!FeatureEnablement.onTrackDisabled) {\n                const timeoutId = setTimeout(() => reject(new Error('Stream setup timed out')), defaultStreamSetupTimeout);\n\n                peerConnection.ontrack = (e): void => {\n                  clearTimeout(timeoutId);\n                  resolve(e.streams[0]);\n                };\n\n                return;\n              }\n\n              const trackListener = (e): void => {\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                clearTimeout(timeoutId);\n                peerConnection.removeEventListener('track', trackListener);\n                peerConnection.removeEventListener('addstream', trackListener);\n\n                if (e.streams) {\n                  resolve(e.streams[0]);\n                } else {\n                  resolve(e.stream);\n                }\n              };\n\n              const timeoutId = setTimeout(() => {\n                peerConnection.removeEventListener('track', trackListener);\n                peerConnection.removeEventListener('addstream', trackListener);\n                reject(new Error('Stream setup timed out'));\n              }, defaultStreamSetupTimeout);\n\n              peerConnection.addEventListener('track', trackListener);\n              peerConnection.addEventListener('addstream', trackListener);\n\n              return;\n            });\n\n            return new Promise<void>(resolve => {\n              resolve();\n            }).then(() => {\n              if (!setRemoteDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set local SDP offer [%s]', this._channelContext.streamId, setRemoteDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setLocalDescription(setRemoteDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set local description [%j] with message [%s]', this._channelContext.streamId, setRemoteDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                });\n            }).then(() => {\n              if (!createAnswerDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set remote SDP answer [%s]', this._channelContext.streamId, createAnswerDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setRemoteDescription(createAnswerDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set remote description [%j] with message [%s]', this._channelContext.streamId, createAnswerDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                });\n            }).then(() => {\n              if (!createOfferDescriptionResponse) {\n                return;\n              }\n\n              this._logger.info('[%s] Set remote SDP offer [%s]', this._channelContext.streamId, createOfferDescriptionResponse.sessionDescription.sdp);\n\n              return peerConnection.setRemoteDescription(createOfferDescriptionResponse.sessionDescription)\n                .catch(e => {\n                  this._logger.info('[%s] Failed to set remote description [%j] with message [%s]', this._channelContext.streamId, createOfferDescriptionResponse.sessionDescription, e.message);\n\n                  throw e;\n                })\n                .then(() => {\n                  return peerConnection.createAnswer({\n                    offerToReceiveAudio: true,\n                    offerToReceiveVideo: true\n                  });\n                }).then(answer => {\n                  this._logger.info('[%s] Set local SDP answer [%j]', this._channelContext.streamId, answer);\n\n                  return this._channelContext.endPoint.value.setRemoteDescription(stream, answer);\n                }).then(({status, sessionDescription}) => {\n                  this._channelContext.state.value = this.mapSetRemoteDescriptionStatusToChannelStatus(status);\n\n                  if (status !== 'ok') {\n                    this._channelContext.playing.value = false;\n                    this._channelContext.standby.value = true;\n                    this._channelContext.stopped.value = false;\n\n                    return;\n                  }\n\n                  return peerConnection.setLocalDescription(sessionDescription)\n                    .catch(e => {\n                      this._logger.info('[%s] Failed to set local description [%j] with message [%s]', this._channelContext.streamId, sessionDescription, e.message);\n\n                      throw e;\n                    });\n                });\n            }).then(() => {\n              listenOnStreamSetup.success(this._channelContext.streamId);\n\n              return mediaStreamPromise;\n            }).then(mediaStream => {\n              if (this._streamTransformContext.hasEncodedInsertableStreams.value) {\n                const parsedRemoteDescription = new SdpParser(peerConnection.currentRemoteDescription.sdp);\n                const {disposables} = InsertableStreams.applyEncodedStreamTransformation(mediaStream, peerConnection.getReceivers(), this._streamTransformContext.encodedVideoStreamSink, this._streamTransformContext.encodedAudioStreamSink, parsedRemoteDescription.videoCodec, parsedRemoteDescription.audioCodec);\n\n                this._disposables.add(disposables);\n              }\n\n              if (this._streamTransformContext.hasInsertableStreams.value) {\n                const {transformedStream, disposables} = InsertableStreams.applyInsertableStreamTransformation(mediaStream, this._streamTransformContext.videoStreamTransformCallback, this._streamTransformContext.audioStreamTransformCallback);\n\n                this._disposables.add(disposables);\n                mediaStream = transformedStream;\n              }\n\n              this._peerConnectionContext.mediaStream.value = mediaStream;\n\n              const rtcConnectionMonitor = new RtcConnectionMonitor(peerConnection, mediaStream, this._channelContext.endPoint.value.roundTripTime / 4);\n\n              this._disposables.add(rtcConnectionMonitor);\n\n              const rtcConnectionMonitorStatisticSubscription = rtcConnectionMonitor.rtcStatistic.subscribe(statistics => {\n                this._channelContext.rtcStatistics.value = statistics;\n\n                if (!this._channelContext.rtcVideoStatistic && !this._channelContext.rtcAudioStatistic) {\n                  this._channelContext.rtcAudioStatistic = statistics.audio;\n                  this._channelContext.rtcVideoStatistic = statistics.video;\n\n                  return;\n                }\n\n                let audioTrackFailed = false;\n                let videoTrackFailed = false;\n\n                if (statistics.audio) {\n                  if (this._channelContext.rtcAudioStatistic && this._channelContext.rtcAudioStatistic.timestamp !== statistics.audio.timestamp) {\n                    audioTrackFailed = this._channelContext.rtcAudioStatistic && this._channelContext.rtcAudioStatistic.bytesReceived === statistics.audio.bytesReceived;\n\n                    if (audioTrackFailed && navigator.onLine) {\n                      this._logger.info(\n                        '[%s] Audio track failed with last bytesReceived [%s] is equal to previous bytesReceived [%s] within [%s]',\n                        this._channelContext.streamId,\n                        statistics.audio.bytesReceived,\n                        this._channelContext.rtcAudioStatistic.bytesReceived,\n                        new Durations(statistics.audio.timestamp - this._channelContext.rtcAudioStatistic.timestamp).toIsoString()\n                      );\n                    }\n\n                    this._channelContext.rtcAudioStatistic = statistics.audio;\n                  }\n                }\n\n                if (statistics.video) {\n                  if (this._channelContext.rtcVideoStatistic && this._channelContext.rtcVideoStatistic.timestamp !== statistics.video.timestamp) {\n                    videoTrackFailed = this._channelContext.rtcVideoStatistic && this._channelContext.rtcVideoStatistic.bytesReceived === statistics.video.bytesReceived;\n\n                    if (videoTrackFailed && navigator.onLine) {\n                      this._logger.info(\n                        '[%s] Video track failed with last bytesReceived [%s] is equal to previous bytesReceived [%s] within [%s]',\n                        this._channelContext.streamId,\n                        statistics.video.bytesReceived,\n                        this._channelContext.rtcVideoStatistic.bytesReceived,\n                        new Durations(statistics.video.timestamp - this._channelContext.rtcVideoStatistic.timestamp).toIsoString()\n                      );\n                    }\n\n                    this._channelContext.rtcVideoStatistic = statistics.video;\n                  }\n                }\n\n                if ((videoTrackFailed || audioTrackFailed) && navigator.onLine) {\n                  const retryCallback = (): void => {\n                    this._channelContext.state.value = ChannelState.ConnectionError;\n\n                    if (this._channelContext.videoElement.value) {\n                      this._channelContext.videoElement.value.pause();\n                      this._channelContext.videoElement.value.srcObject = null;\n                    }\n\n                    this._channelContext.playing.value = false;\n                    this._channelContext.loading.value = true;\n\n                    rtcConnectionMonitor.dispose();\n\n                    const ignored = this._handleStreamFailure()\n                      .catch(e => {\n                        this._logger.error(\n                          '[%s] Failed handling stream failure after track stopped with state [%s]',\n                          this._channelContext.streamId,\n                          peerConnection.iceConnectionState,\n                          e\n                        );\n                      });\n                  };\n\n                  this.reconnectPeerConnection(peerConnection, retryCallback);\n                } else {\n                  this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n\n                  if (this._channelContext.state.value !== ChannelState.Reconnecting) {\n                    return;\n                  }\n\n                  this._channelContext.state.value = this._channelContext.playing.value ? ChannelState.Playing : ChannelState.Paused;\n                  this._logger.info('Channel state restored to [%s] after reconnecting', ChannelState[this._channelContext.state.value]);\n                }\n              });\n\n              this._disposables.add(rtcConnectionMonitorStatisticSubscription);\n\n              if (!SDK.automaticallyPlayMediaStream) {\n                this._channelContext.autoMuted.value = false;\n                this._channelContext.autoPaused.value = true;\n                this._channelContext.loading.value = false;\n                this._channelContext.playing.value = false;\n                this._channelContext.state.value = ChannelState.Paused;\n\n                return;\n              }\n\n              return playMediaStreamInVideoElement(mediaStream);\n            });\n          });\n      });\n  }\n\n  private async applyRtcConfiguration(\n    optionalPeerConnection: IPeerConnection | null,\n    rtcConfiguration: RTCConfiguration): Promise<IPeerConnection> {\n    if (FeatureEnablement.isLimitedIceServersListLength || !optionalPeerConnection) {\n      rtcConfiguration = RtcConfigurationManager.truncateIceServers(rtcConfiguration);\n    }\n\n    if (!optionalPeerConnection) {\n      return SDK.peerConnectionFactory.value.createPeerConnection(rtcConfiguration);\n    }\n\n    const newRtcConfiguration = {\n      ...optionalPeerConnection.getConfiguration(),\n      ...rtcConfiguration\n    };\n\n    optionalPeerConnection.setConfiguration(newRtcConfiguration);\n\n    return optionalPeerConnection;\n  }\n\n  private reconnectPeerConnection(peerConnection: IPeerConnection, retryCallback: () => void): void {\n    if (peerConnection.iceConnectionState === 'closed') {\n      return;\n    }\n\n    this._channelContext.state.value = ChannelState.Reconnecting;\n\n    if (this._peerConnectionContext.peerConnectionReconnectAttempts < SDK.maximalNumberOfPeerConnectionReconnectAttempts || !SDK.automaticallyReconnectPeerConnection) {\n      this._peerConnectionContext.peerConnectionReconnectAttempts++;\n\n      const isClientOfferFlow = peerConnection.currentLocalDescription?.type === 'offer';\n\n      if (FeatureEnablement.clientOfferDisabled ||\n        !peerConnection.supportsSetConfiguration ||\n        !peerConnection.supportsGetConfiguration ||\n        !isClientOfferFlow\n      ) {\n        return;\n      }\n\n      this._logger.info('Reconnecting peer connection by restarting ICE');\n\n      const currentLocalDescription = peerConnection.currentLocalDescription;\n      const ignored = peerConnection.createOffer({iceRestart: true}).then(offer => {\n        return peerConnection.setLocalDescription(offer).then(() => {\n          return peerConnection.setLocalDescription(currentLocalDescription);\n        });\n      })\n        .catch(e => {\n          this._logger.error('Failed to reconnect peer connection', e);\n          this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n          retryCallback();\n        });\n\n      return;\n    }\n\n    this._logger.info('Failed to reconnect peer connection after [%s] attempts, performing full recovery', this._peerConnectionContext.peerConnectionReconnectAttempts);\n    this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n    retryCallback();\n  }\n\n  dispose(): void {\n    this._disposables.dispose();\n  }\n\n  private mapSetRemoteDescriptionStatusToChannelStatus(status: SetRemoteDescriptionStatus): ChannelState {\n    switch (status) {\n      case 'ok':\n        return ChannelState.Starting;\n      case 'unauthorized':\n        return ChannelState.Unauthorized;\n      case 'not-found':\n      case 'capacity':\n      case 'rate-limited':\n      case 'timeout':\n        return ChannelState.Recovering;\n      case 'failed':\n        return ChannelState.Error;\n      default:\n        assertUnreachable(status);\n    }\n  }\n}\n","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport {IStream} from './IStream';\nimport EdgeAuthParser from '../../edgeAuth/EdgeAuthParser';\nimport ChunkedStream from './ChunkedStream';\nimport RealTimeStream from './RealTimeStream';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport ChunkedStreamPlaybackMode from './ChunkedStreamPlaybackMode';\n\nexport default class StreamFactory {\n  private static _logger: ILogger = LoggerFactory.getLogger('Streaming');\n\n  static create(token: string, channelContext, peerConnectionContext, streamTransformContext, handleStreamFailure: () => Promise<void>): IStream {\n    const tokenCapabilities = EdgeAuthParser.parseToken(token).capabilities;\n    const hasStreaming = tokenCapabilities.includes('streaming');\n    const hasOnDemand = tokenCapabilities.includes('on-demand');\n\n    if (hasStreaming || hasOnDemand) {\n      return new ChunkedStream(channelContext, !hasOnDemand ? ChunkedStreamPlaybackMode.Live : ChunkedStreamPlaybackMode.OndDemand, handleStreamFailure);\n    }\n\n    return new RealTimeStream(channelContext, peerConnectionContext, streamTransformContext, handleStreamFailure);\n  }\n\n  constructor() {\n    throw new Error('StreamFactory is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport LoggerFactory from '../../logger/LoggerFactory';\nimport IDisposable from '../../lang/IDisposable';\nimport ReadOnlySubject from '../../rx/ReadOnlySubject';\nimport Dimension from '../../video/Dimension';\nimport ExponentialBackoff from '../../time/ExponentialBackoff';\nimport EndPoint, {IStream} from '../discovery/EndPoint';\nimport SDK from '../SDK';\nimport GarbageCollectorManager from '../../dom/GarbageCollectorManager';\nimport IPeerConnection from '../../rtc/IPeerConnection';\nimport ChannelState from './ChannelState';\nimport assertUnreachable from '../../lang/assertUnreachable';\nimport Disposable from '../../lang/Disposable';\nimport {ILogger} from '../../logger/LoggerInterface';\nimport VideoTelemetry from '../../video/VideoTelemetry';\nimport SessionTelemetry from '../../video/SessionTelemetry';\nimport {IRtcMonitorStatistic} from '../../rtc/RtcConnectionMonitor';\nimport {BitrateMode, BitrateState} from '../api/SetTemporaryMaximalBitrate';\nimport EdgeAuthParser from '../../edgeAuth/EdgeAuthParser';\nimport {EncodedEdgeToken} from '../../edgeAuth/EncodedEdgeToken';\nimport {BitsPerSecond, Millisecond} from '../../units/Units';\nimport TokenContext from '../context/TokenContext';\nimport ChannelContext, {ChannelContextOptions} from '../context/ChannelContext';\nimport EncodedStreamSink, {IEncodedStreamSink} from '../transformation/EncodedStreamSink';\nimport StreamTrackTransform, {IStreamTrackTransform} from '../transformation/StreamTrackTransform';\nimport StreamTransformContext, {StreamTransformContextOptions} from '../context/StreamTransformContext';\nimport PeerConnectionContext from '../context/PeerConnectionContext';\nimport StateContext from '../context/StateContext';\nimport StreamFactory from '../streaming/StreamFactory';\nimport Discovery from '../discovery/Discovery';\nimport DiscoveryUri from '../discovery/DiscoveryUri';\nimport MetricsFactory from '../../metrics/MetricsFactory';\nimport MetricsService from '../../metrics/MetricsService';\nimport FeatureEnablement from '../../environment/FeatureEnablement';\n\nconst defaultStreamTerminationReason = 'client:termination';\nconst failureCountCleanUpIntervalInMilliseconds = 3000;\nconst standbyPollingIntervalInMilliseconds = 15000;\n\nexport type ChannelOptions = {\n  targetLag?: Millisecond;\n  videoStreamTransformCallback?: IStreamTrackTransform<VideoFrame>;\n  audioStreamTransformCallback?: IStreamTrackTransform<AudioData>;\n  encodedVideoStreamSink?: IEncodedStreamSink<RTCEncodedVideoFrame>;\n  encodedAudioStreamSink?: IEncodedStreamSink<RTCEncodedAudioFrame>;\n};\n\nexport default class Channel implements IDisposable {\n  private readonly _logger: ILogger = LoggerFactory.getLogger('Channel');\n  private readonly _tokenContext: TokenContext;\n  private readonly _channelContext: ChannelContext;\n  private readonly _peerConnectionContext: PeerConnectionContext;\n  private readonly _streamTransformContext: StreamTransformContext;\n  private readonly _stateContext: StateContext;\n  private readonly _exponentialBackoff: ExponentialBackoff;\n  private readonly _channelStartTime: number;\n  private readonly _readOnlyVideoElement: ReadOnlySubject<HTMLVideoElement>;\n  private readonly _readOnlyToken: ReadOnlySubject<EncodedEdgeToken>;\n  private readonly _readOnlyPeerConnection: ReadOnlySubject<IPeerConnection>;\n  private readonly _readOnlyState: ReadOnlySubject<ChannelState>;\n  private readonly _readOnlyAutoMuted: ReadOnlySubject<boolean>;\n  private readonly _readOnlyAutoPaused: ReadOnlySubject<boolean>;\n  private readonly _readOnlyTokenExpiring: ReadOnlySubject<boolean>;\n  private readonly _readOnlyAuthorized: ReadOnlySubject<boolean>;\n  private readonly _readOnlyOnline: ReadOnlySubject<boolean>;\n  private readonly _readOnlyLoading: ReadOnlySubject<boolean>;\n  private readonly _readOnlyPlaying: ReadOnlySubject<boolean>;\n  private readonly _readOnlyStandby: ReadOnlySubject<boolean>;\n  private readonly _readOnlyStopped: ReadOnlySubject<boolean>;\n  private readonly _readOnlyTargetLag: ReadOnlySubject<Millisecond>;\n  private readonly _readOnlyLag: ReadOnlySubject<Millisecond>;\n  private readonly _readOnlyBitrateLimit: ReadOnlySubject<BitsPerSecond>;\n  private readonly _readOnlyResolution: ReadOnlySubject<Dimension>;\n  private readonly _readOnlyFailureCount: ReadOnlySubject<number>;\n  private readonly _readOnlyEndPoint: ReadOnlySubject<EndPoint>;\n  private readonly _readOnlyStream: ReadOnlySubject<IStream>;\n  private readonly _readOnlyRtcStatistics: ReadOnlySubject<IRtcMonitorStatistic>;\n  private readonly _readOnlyMediaStream: ReadOnlySubject<MediaStream>;\n\n  private _metricsService: MetricsService;\n  private readonly _sessionTelemetry: SessionTelemetry;\n  private readonly _videoMetaDataChangedHandler: () => void;\n\n  constructor(videoElement: HTMLVideoElement, token: EncodedEdgeToken, options?: ChannelOptions) {\n    const edgeToken = EdgeAuthParser.parseToken(token);\n    const channelContextOptions: ChannelContextOptions = {targetLag: options?.targetLag};\n    const streamTransformContextOptions: StreamTransformContextOptions = {\n      hasInsertableStreams: edgeToken.capabilities.includes('insertable-streams'),\n      hasEncodedInsertableStreams: edgeToken.capabilities.includes('encoded-insertable-streams'),\n      videoStreamTransformCallback: options?.videoStreamTransformCallback,\n      audioStreamTransformCallback: options?.audioStreamTransformCallback,\n      encodedVideoStreamSink: options?.encodedVideoStreamSink,\n      encodedAudioStreamSink: options?.encodedAudioStreamSink\n    };\n\n    this._tokenContext = new TokenContext(token);\n    this._channelContext = new ChannelContext(channelContextOptions);\n    this._peerConnectionContext = new PeerConnectionContext();\n    this._streamTransformContext = new StreamTransformContext(streamTransformContextOptions);\n    this._stateContext = new StateContext();\n    this._exponentialBackoff = new ExponentialBackoff();\n    this._channelStartTime = Date.now();\n    this._readOnlyVideoElement = new ReadOnlySubject<HTMLVideoElement>(this._channelContext.videoElement);\n    this._readOnlyToken = new ReadOnlySubject<string>(this._tokenContext.token);\n    this._readOnlyPeerConnection = new ReadOnlySubject<IPeerConnection>(this._peerConnectionContext.peerConnection);\n    this._readOnlyState = new ReadOnlySubject<ChannelState>(this._channelContext.state);\n    this._readOnlyAutoMuted = new ReadOnlySubject<boolean>(this._channelContext.autoMuted);\n    this._readOnlyAutoPaused = new ReadOnlySubject<boolean>(this._channelContext.autoPaused);\n    this._readOnlyTokenExpiring = new ReadOnlySubject<boolean>(this._tokenContext.tokenExpiring);\n    this._readOnlyAuthorized = new ReadOnlySubject<boolean>(this._channelContext.authorized);\n    this._readOnlyOnline = new ReadOnlySubject<boolean>(this._channelContext.online);\n    this._readOnlyLoading = new ReadOnlySubject<boolean>(this._channelContext.loading);\n    this._readOnlyPlaying = new ReadOnlySubject<boolean>(this._channelContext.playing);\n    this._readOnlyStandby = new ReadOnlySubject<boolean>(this._channelContext.standby);\n    this._readOnlyStopped = new ReadOnlySubject<boolean>(this._channelContext.stopped);\n    this._readOnlyTargetLag = new ReadOnlySubject<number>(this._channelContext.targetLag);\n    this._readOnlyLag = new ReadOnlySubject<number>(this._channelContext.lag);\n    this._readOnlyBitrateLimit = new ReadOnlySubject<number>(this._channelContext.bitrateLimit);\n    this._readOnlyResolution = new ReadOnlySubject<Dimension>(this._channelContext.resolution);\n    this._readOnlyFailureCount = new ReadOnlySubject<number>(this._channelContext.failureCount);\n    this._readOnlyEndPoint = new ReadOnlySubject<EndPoint>(this._channelContext.endPoint);\n    this._readOnlyStream = new ReadOnlySubject<IStream>(this._channelContext.stream);\n    this._readOnlyRtcStatistics = new ReadOnlySubject<IRtcMonitorStatistic>(this._channelContext.rtcStatistics);\n    this._readOnlyMediaStream = new ReadOnlySubject<MediaStream>(this._peerConnectionContext.mediaStream);\n\n    const discoveryUri = (edgeToken.uri || SDK.discoveryUri.value).toString();\n\n    SDK.tenancy.value = edgeToken.tenancy || SDK.tenancy.value;\n    DiscoveryUri.uri.value = discoveryUri;\n    this._metricsService = MetricsFactory.getMetricsService(discoveryUri);\n    this._sessionTelemetry = new SessionTelemetry(SDK.pageLoadTime, this._metricsService);\n    this._channelContext.channelDisposables.add(this._sessionTelemetry);\n    this._videoMetaDataChangedHandler = this.handleVideoMetaDataChanged.bind(this);\n    this.videoElement = videoElement;\n\n    this._channelContext.channelDisposables.add(\n      this._channelContext.videoElement.subscribe(videoElement => {\n        this._channelContext.rendererDisposables.dispose();\n\n        if (!videoElement) {\n          return;\n        }\n\n        this._channelContext.rendererDisposables.add(this._channelContext.stream.subscribe(stream => {\n          if (this._channelContext.videoTelemetry) {\n            this._channelContext.videoTelemetry.dispose();\n          }\n\n          if (!stream) {\n            return;\n          }\n\n          if (!this.videoElement) {\n            return;\n          }\n\n          if (this.videoElement.dataset) {\n            this.videoElement.dataset.sessionId = SDK.clientSessionId;\n            this.videoElement.dataset.streamId = this.streamId;\n          }\n\n          this._channelContext.videoTelemetry = new VideoTelemetry(this.streamId, SDK.pageLoadTime, this._channelStartTime, this._metricsService);\n          this._channelContext.videoTelemetry.setupListenerForTimeToFirstTime(this.videoElement);\n          this._channelContext.videoTelemetry.setupListenerForRebuffering(this.videoElement);\n\n          if (this._channelContext.state.value === ChannelState.Stopped) {\n            const ignored = this.restartAfterStop();\n          }\n        }));\n\n        this._channelContext.channelDisposables.add(this._channelContext.rendererDisposables);\n      }));\n    this._channelContext.channelDisposables.add(\n      this._channelContext.state.subscribe(state => {\n        if (this._channelContext.clearFailureCountTimeout) {\n          clearTimeout(this._channelContext.clearFailureCountTimeout);\n        }\n\n        if (!this._channelContext.failureCount.value) {\n          return;\n        }\n\n        if (state !== ChannelState.Playing) {\n          return;\n        }\n\n        this._channelContext.clearFailureCountTimeout = window.setTimeout(() => {\n          this._channelContext.failureCount.value = 0;\n        }, failureCountCleanUpIntervalInMilliseconds);\n      }));\n    this._channelContext.channelDisposables.add(\n      this._channelContext.resolution.subscribe(resolution => {\n        if (this._channelContext.videoTelemetry) {\n          this._channelContext.videoTelemetry.onVideoResolutionChanges(resolution.toString());\n        }\n      }));\n    this._channelContext.channelDisposables.add(\n      this._channelContext.bitrateLimit.subscribe(bitrateLimit => {\n        if (bitrateLimit && this._channelContext.endPoint.value && this._channelContext.stream.value) {\n          const elapsedInMilliseconds = Date.now() - this._channelContext.channelInitialization.getTime();\n          const ignored = this._channelContext.endPoint.value.limitBitrate(\n            this._channelContext.stream.value,\n            elapsedInMilliseconds,\n            bitrateLimit,\n            BitrateState.Keep,\n            BitrateMode.Normal\n          )\n            .catch(e => {\n              this._logger.error('Error while setting limit bitrate', e);\n            });\n        }\n      })\n    );\n\n    const destroyStreamOnUnmount = () => {\n      if (this._channelContext.stream.value && this._channelContext.endPoint.value) {\n        const ignored = this._channelContext.endPoint.value.destroyStreamOnUnmount(this._channelContext.stream.value, 'client:termination-on-window-unload');\n      }\n    };\n\n    window.addEventListener('beforeunload', destroyStreamOnUnmount);\n\n    this._channelContext.channelDisposables.add(new Disposable(() => {\n      window.removeEventListener('beforeunload', destroyStreamOnUnmount);\n    }));\n\n    this.start();\n  }\n\n  get videoElement(): HTMLVideoElement {\n    return this._channelContext.videoElement.value;\n  }\n\n  set videoElement(videoElement: HTMLVideoElement) {\n    if (this._channelContext.videoElement.value) {\n      this._channelContext.videoElement.value.removeEventListener('loadeddata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.removeEventListener('loadedmetadata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.removeEventListener('resize', this._videoMetaDataChangedHandler);\n\n      if (this._channelContext.videoElement.value.dataset) {\n        this._channelContext.videoElement.value.dataset.sessionId = '';\n        this._channelContext.videoElement.value.dataset.streamId = '';\n      }\n\n      this._channelContext.rendererDisposables.dispose();\n\n      this._channelContext.videoElement.value.pause();\n      this._channelContext.videoElement.value.srcObject = null;\n    }\n\n    this._channelContext.autoMuted.value = false;\n    this._channelContext.autoPaused.value = false;\n    this._channelContext.loading.value = false;\n    this._channelContext.playing.value = false;\n    this._channelContext.state.value = ChannelState.Stopped;\n\n    this._channelContext.videoElement.value = videoElement;\n\n    if (this._channelContext.videoElement.value) {\n      this._channelContext.videoElement.value.addEventListener('loadeddata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.addEventListener('loadedmetadata', this._videoMetaDataChangedHandler);\n      this._channelContext.videoElement.value.addEventListener('resize', this._videoMetaDataChangedHandler);\n    }\n  }\n\n  private handleVideoMetaDataChanged(): void {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (videoElement) {\n      if (this.resolution.value.width !== videoElement.videoWidth || this.resolution.value.height !== videoElement.videoHeight) {\n        this._channelContext.resolution.value = new Dimension(videoElement.videoWidth, videoElement.videoHeight);\n      }\n    } else {\n      this._channelContext.resolution.value = Dimension.empty;\n    }\n  }\n\n  get token(): EncodedEdgeToken {\n    return this._tokenContext.token.value;\n  }\n\n  set token(token: EncodedEdgeToken) {\n    this._channelContext.disposables.dispose();\n\n    this._tokenContext.token.value = token;\n    this._tokenContext.tokenExpiring.value = false;\n\n    const edgeToken = EdgeAuthParser.parseToken(this._tokenContext.token.value);\n    const discoveryUri = (edgeToken.uri || SDK.discoveryUri.value).toString();\n\n    SDK.tenancy.value = edgeToken.tenancy || SDK.tenancy.value;\n    DiscoveryUri.uri.value = discoveryUri;\n\n    this._metricsService = MetricsFactory.getMetricsService(discoveryUri);\n\n    this._streamTransformContext.hasInsertableStreams.value = edgeToken.capabilities.includes('insertable-streams');\n    this._streamTransformContext.hasEncodedInsertableStreams.value = edgeToken.capabilities.includes('encoded-insertable-streams');\n\n    this.start();\n  }\n\n  get peerConnection(): ReadOnlySubject<IPeerConnection> {\n    return this._readOnlyPeerConnection;\n  }\n\n  get state(): ReadOnlySubject<ChannelState> {\n    return this._readOnlyState;\n  }\n\n  get autoMuted(): ReadOnlySubject<boolean> {\n    return this._readOnlyAutoMuted;\n  }\n\n  get autoPaused(): ReadOnlySubject<boolean> {\n    return this._readOnlyAutoPaused;\n  }\n\n  get tokenExpiring(): ReadOnlySubject<boolean> {\n    return this._readOnlyTokenExpiring;\n  }\n\n  get authorized(): ReadOnlySubject<boolean> {\n    return this._readOnlyAuthorized;\n  }\n\n  get online(): ReadOnlySubject<boolean> {\n    return this._readOnlyOnline;\n  }\n\n  get loading(): ReadOnlySubject<boolean> {\n    return this._readOnlyLoading;\n  }\n\n  get playing(): ReadOnlySubject<boolean> {\n    return this._readOnlyPlaying;\n  }\n\n  get standby(): ReadOnlySubject<boolean> {\n    return this._readOnlyStandby;\n  }\n\n  get stopped(): ReadOnlySubject<boolean> {\n    return this._readOnlyStopped;\n  }\n\n  get targetLag(): ReadOnlySubject<Millisecond> {\n    return this._readOnlyTargetLag;\n  }\n\n  get lag(): ReadOnlySubject<Millisecond> {\n    return this._readOnlyLag;\n  }\n\n  get bitrateLimit(): number {\n    return this._readOnlyBitrateLimit.value;\n  }\n\n  get resolution(): ReadOnlySubject<Dimension> {\n    return this._readOnlyResolution;\n  }\n\n  get failureCount(): ReadOnlySubject<number> {\n    return this._readOnlyFailureCount;\n  }\n\n  get endPoint(): ReadOnlySubject<EndPoint> {\n    return this._readOnlyEndPoint;\n  }\n\n  get stream(): ReadOnlySubject<IStream> {\n    return this._readOnlyStream;\n  }\n\n  get streamId(): string {\n    return this._channelContext.streamId;\n  }\n\n  get rtcStatistics(): ReadOnlySubject<IRtcMonitorStatistic> {\n    return this._readOnlyRtcStatistics;\n  }\n\n  get mediaStream(): ReadOnlySubject<MediaStream> {\n    return this._readOnlyMediaStream;\n  }\n\n  setBitrateLimit(bitrateLimit: BitsPerSecond): void {\n    this._channelContext.bitrateLimit.value = bitrateLimit;\n  }\n\n  clearBitrateLimit(): void {\n    if (this._channelContext.bitrateLimit.value && this._channelContext.endPoint.value && this._channelContext.stream.value) {\n      const elapsedInMilliseconds = Date.now() - this._channelContext.channelInitialization.getTime();\n      const bitrateInBitsPerSecond = 0;\n      const ignored = this._channelContext.endPoint.value.limitBitrate(\n        this._channelContext.stream.value,\n        elapsedInMilliseconds,\n        bitrateInBitsPerSecond,\n        BitrateState.Keep,\n        BitrateMode.Reset\n      )\n        .then(({status}) => {\n          if (status === 'ok') {\n            this._channelContext.bitrateLimit.value = 0;\n          }\n        })\n        .catch(e => {\n          this._logger.error('Error while setting limit bitrate', e);\n        });\n    }\n  }\n\n  updateTargetLag(lag: Millisecond): void {\n    this._channelContext.targetLag.value = lag;\n  }\n\n  async stop(reason: string): Promise<void> {\n    return new Promise(resolve => {\n      if (!this._stateContext.isStarting.value) {\n        this.processStop(reason);\n\n        resolve();\n\n        return;\n      }\n\n      this._channelContext.rendererDisposables.add(this._stateContext.isStarting.subscribe(isStarting => {\n        if (!isStarting) {\n          this.processStop(reason);\n          resolve();\n        }\n      }));\n    });\n  }\n\n  private processStop(reason: string): void {\n    if (this._channelContext.videoElement.value) {\n      this._channelContext.videoElement.value.pause();\n      this._channelContext.videoElement.value.srcObject = null;\n    }\n\n    this._channelContext.rendererDisposables.dispose();\n\n    this.cleanUpResources(reason);\n\n    this._channelContext.state.value = ChannelState.Stopped;\n  }\n\n  async resume(): Promise<void> {\n    if (this._peerConnectionContext.mediaStream.value) {\n      this._channelContext.autoPaused.value = false;\n\n      return this.playMediaStreamInVideoElement(this._peerConnectionContext.mediaStream.value);\n    }\n  }\n\n  mute(): void {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (videoElement) {\n      videoElement.muted = true;\n    }\n  }\n\n  unmute(): void {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (videoElement) {\n      videoElement.muted = false;\n      this._channelContext.autoMuted.value = false;\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return this.stop('client:channel-dispose').then(() => {\n      this._channelContext.channelDisposables.dispose();\n      this._stateContext.isDisposed = true;\n    });\n  }\n\n  getUri(token: EncodedEdgeToken): URL {\n    const url = EdgeAuthParser.parseToken(token).uri;\n\n    if (url) {\n      return url;\n    }\n\n    this._logger.info('Fall back to the default discover URI [%s]', SDK.discoveryUri.value);\n\n    return new URL(SDK.discoveryUri.value);\n  }\n\n  async start(): Promise<void> {\n    if (this._stateContext.isDisposed) {\n      throw new Error('Channel was already disposed');\n    }\n\n    if (this._stateContext.isStarting.value) {\n      this._logger.info('Channel is already starting, skipping start');\n\n      return;\n    }\n\n    this._stateContext.isStarting.value = true;\n\n    return this.processStart();\n  }\n\n  private async processStart(): Promise<void> {\n    const token: EncodedEdgeToken = this._tokenContext.token.value;\n    const listenOnStreamSetup = this._sessionTelemetry.listenOnStreamSetup();\n\n    if (!EdgeAuthParser.isEncodedEdgeTokenValid(token)) {\n      this._logger.error('Failed to parse token [%s]', token);\n      this._channelContext.state.value = ChannelState.Unauthorized;\n      this._channelContext.authorized.value = false;\n      this._stateContext.isStarting.value = false;\n\n      return;\n    }\n\n    if (this._streamTransformContext.videoStreamTransformCallback) {\n      const {valid, validationResult} = StreamTrackTransform.validateMediaStreamTrackTransform('video', this._streamTransformContext.videoStreamTransformCallback);\n\n      if (!valid) {\n        this._logger.error(validationResult);\n        this._channelContext.state.value = ChannelState.ConfigurationError;\n        this._channelContext.authorized.value = false;\n        this._stateContext.isStarting.value = false;\n\n        return;\n      }\n    }\n\n    if (this._streamTransformContext.audioStreamTransformCallback) {\n      const {valid, validationResult} = StreamTrackTransform.validateMediaStreamTrackTransform('audio', this._streamTransformContext.audioStreamTransformCallback);\n\n      if (!valid) {\n        this._logger.error(validationResult);\n        this._channelContext.state.value = ChannelState.ConfigurationError;\n        this._channelContext.authorized.value = false;\n        this._stateContext.isStarting.value = false;\n\n        return;\n      }\n    }\n\n    if (this._streamTransformContext.encodedVideoStreamSink) {\n      const {valid, validationResult} = EncodedStreamSink.validateEncodedStreamSink('video', this._streamTransformContext.encodedVideoStreamSink);\n\n      if (!valid) {\n        this._logger.error(validationResult);\n        this._channelContext.state.value = ChannelState.ConfigurationError;\n        this._channelContext.authorized.value = false;\n        this._stateContext.isStarting.value = false;\n\n        return;\n      }\n    }\n\n    if (this._streamTransformContext.encodedAudioStreamSink) {\n      const {valid, validationResult} = EncodedStreamSink.validateEncodedStreamSink('audio', this._streamTransformContext.encodedAudioStreamSink);\n\n      if (!valid) {\n        this._logger.error(validationResult);\n        this._channelContext.state.value = ChannelState.ConfigurationError;\n        this._channelContext.authorized.value = false;\n        this._stateContext.isStarting.value = false;\n\n        return;\n      }\n    }\n\n    if (this._streamTransformContext.hasInsertableStreams.value && this._streamTransformContext.hasEncodedInsertableStreams.value) {\n      this._logger.error('Both insertable-streams and encoded-insertable-streams are enabled, only use one or the other');\n      this._channelContext.state.value = ChannelState.ConfigurationError;\n      this._channelContext.authorized.value = false;\n      this._stateContext.isStarting.value = false;\n\n      return;\n    }\n\n    const hasTransformStreamCallback = typeof this._streamTransformContext.videoStreamTransformCallback === 'function' || typeof this._streamTransformContext.audioStreamTransformCallback === 'function';\n    const hasEncodedStreamSink = typeof this._streamTransformContext.encodedVideoStreamSink === 'function' || typeof this._streamTransformContext.encodedAudioStreamSink === 'function';\n\n    if (hasTransformStreamCallback && hasEncodedStreamSink) {\n      this._logger.error('Both Media Stream Track transform callback and encodedInsertableStreams sink function found, only use one type or the other');\n      this._channelContext.state.value = ChannelState.ConfigurationError;\n      this._channelContext.authorized.value = false;\n      this._stateContext.isStarting.value = false;\n\n      return;\n    }\n\n    if (this._streamTransformContext.hasInsertableStreams.value) {\n      if (!FeatureEnablement.isInsertableStreamsSupported) {\n        this._logger.error('Browser does not support Media Stream Track API');\n        this._channelContext.state.value = ChannelState.UnsupportedFeature;\n        this._channelContext.authorized.value = false;\n        this._stateContext.isStarting.value = false;\n\n        return;\n      }\n\n      if (!hasTransformStreamCallback) {\n        this._logger.error('CreateChannelOptions transform callback function is missing; however, insertable-streams is enabled');\n        this._channelContext.state.value = ChannelState.ConfigurationError;\n        this._channelContext.authorized.value = false;\n        this._stateContext.isStarting.value = false;\n\n        return;\n      }\n    } else {\n      if (hasTransformStreamCallback) {\n        this._logger.error(`CreateChannelOptions transform callback function found; however, insertable-streams is not enabled`);\n        this._channelContext.state.value = ChannelState.ConfigurationError;\n        this._channelContext.authorized.value = false;\n        this._stateContext.isStarting.value = false;\n\n        return;\n      }\n    }\n\n    if (this._streamTransformContext.hasEncodedInsertableStreams.value) {\n      if (!(FeatureEnablement.isEncodedInsertableStreamsSupported || FeatureEnablement.isRTCRtpScriptTransformSupported)) {\n        this._logger.error('Browser does not support encodedInsertableStreams API');\n        this._channelContext.state.value = ChannelState.UnsupportedFeature;\n        this._channelContext.authorized.value = false;\n        this._stateContext.isStarting.value = false;\n\n        return;\n      }\n\n      if (!hasEncodedStreamSink) {\n        this._logger.error('CreateChannelOptions transform sink function is missing; however, encoded-insertable-streams is enabled');\n        this._channelContext.state.value = ChannelState.ConfigurationError;\n        this._channelContext.authorized.value = false;\n        this._stateContext.isStarting.value = false;\n\n        return;\n      }\n    } else {\n      if (hasEncodedStreamSink) {\n        this._logger.error(`CreateChannelOptions transform sink function found; however, encoded-insertable-streams is not enabled`);\n        this._channelContext.state.value = ChannelState.ConfigurationError;\n        this._channelContext.authorized.value = false;\n        this._stateContext.isStarting.value = false;\n\n        return;\n      }\n    }\n\n    this.cleanUpResources('client:start');\n    this._channelContext.state.value = ChannelState.Starting;\n    this._channelContext.loading.value = true;\n\n    const uri = this.getUri(token);\n\n    this._channelContext.disposables.add(\n      this._channelContext.state.subscribe(state => {\n        if (state === ChannelState.Error || state === ChannelState.Recovering) {\n          Discovery.clearCachedClosestEndpoint(uri);\n        }\n      })\n    );\n\n    const handleStreamFailureCallback: () => Promise<void> = () => new Promise((resolve): void => {\n      // Need to set isStarting to false and call handleStreamFailure if stream monitors found an issue\n      this._stateContext.isStarting.value = false;\n\n      return resolve(this.handleStreamFailure());\n    });\n    const streamPlayer = StreamFactory.create(token, this._channelContext, this._peerConnectionContext, this._streamTransformContext, handleStreamFailureCallback);\n\n    if (!streamPlayer) {\n      this._stateContext.isStarting.value = false;\n\n      return;\n    }\n\n    return streamPlayer.start(\n      uri,\n      token,\n      listenOnStreamSetup,\n      this.playMediaStreamInVideoElement.bind(this))\n      .then(() => {\n        this._channelContext.loading.value = false;\n      })\n      .catch(e => {\n        listenOnStreamSetup.fail();\n\n        this._channelContext.failureCount.value++;\n\n        this._channelContext.online.value = false;\n\n        this.cleanUpResources('client:cleanup-after-failed-setup');\n\n        this._channelContext.state.value = ChannelState.ClientStartError;\n\n        this._logger.error('Failed to start channel', e);\n      })\n      .finally(() => {\n        this._stateContext.isStarting.value = false;\n\n        if (this._channelContext.state.value === ChannelState.Playing || !SDK.automaticRetryOnFailure) {\n          return;\n        }\n\n        const timeoutId = setTimeout(() => {\n          const ignored = this.handleStreamFailure()\n            .catch(e => {\n              this._logger.error('Failed handling stream failure', e);\n            });\n        }, this.getRetryInterval());\n\n        this._channelContext.disposables.add(new Disposable(() => {\n          clearTimeout(timeoutId);\n        }));\n      });\n  }\n\n  private async restartAfterStop(): Promise<void> {\n    if (this._stateContext.isDisposed) {\n      throw new Error('Channel was already disposed');\n    }\n\n    if (this._peerConnectionContext.mediaStream.value) {\n      return this.playMediaStreamInVideoElement(this._peerConnectionContext.mediaStream.value);\n    }\n\n    if (this._tokenContext.token.value) {\n      const ignored = this.start();\n    }\n  }\n\n  public async play(): Promise<void> {\n    const mediaStream = this._peerConnectionContext.mediaStream.value;\n\n    if (!mediaStream) {\n      return this.start();\n    }\n\n    return this.playMediaStreamInVideoElement(mediaStream);\n  }\n\n  private getRetryInterval(): number {\n    switch (this._channelContext.state.value) {\n      case ChannelState.StandBy:\n      case ChannelState.Offline:\n        return standbyPollingIntervalInMilliseconds;\n      case ChannelState.Error:\n      case ChannelState.Recovering:\n      case ChannelState.Unauthorized:\n      case ChannelState.GeoRestricted:\n      case ChannelState.GeoBlocked:\n      case ChannelState.Stopped:\n      case ChannelState.Starting:\n      case ChannelState.Playing:\n      case ChannelState.Paused:\n      case ChannelState.Reconnecting:\n      case ChannelState.UnsupportedFeature:\n      case ChannelState.ConfigurationError:\n      case ChannelState.TransientConfigurationError:\n      case ChannelState.ConnectionError:\n      case ChannelState.ClientStartError:\n        // First and second attempt fast, after that exponential with backoff interval\n        return this._exponentialBackoff.getExponentialBackoffIntervalByFailureCount(this._channelContext.failureCount.value);\n      default:\n        assertUnreachable(this._channelContext.state.value);\n    }\n  }\n\n  private async handleStreamFailure(): Promise<void> {\n    switch (this._channelContext.state.value) {\n      case ChannelState.Error:\n      case ChannelState.Reconnecting:\n      case ChannelState.StandBy:\n      case ChannelState.Offline:\n      case ChannelState.Recovering:\n      case ChannelState.TransientConfigurationError:\n      case ChannelState.ConnectionError:\n      case ChannelState.ClientStartError:\n        this._logger.info('Retry start with initial state [%s] [%s]', this._channelContext.state.value, ChannelState[this._channelContext.state.value]);\n\n        break;\n      case ChannelState.Unauthorized:\n        this._logger.info('Channel is unauthorized, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case ChannelState.GeoRestricted:\n        this._logger.info('Channel is geo restricted, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case ChannelState.GeoBlocked:\n        this._logger.info('Channel is geo blocked, skipping retry of start. Please provide a new token and invoke start()');\n\n        return;\n      case ChannelState.Stopped:\n        this._logger.info('Channel is stopped, skipping retry of start.');\n\n        return;\n      case ChannelState.Playing:\n        this._logger.info('Channel is playing, skipping retry of start');\n\n        return;\n      case ChannelState.Paused:\n        this._logger.info('Channel is paused, skipping retry of start. Please invoke play()');\n\n        return;\n      case ChannelState.Starting:\n        this._logger.info('Channel is already starting, skipping retry of start');\n\n        return;\n      case ChannelState.UnsupportedFeature:\n        this._logger.info('Channel is stopped due to unsupported feature, skipping retry of start.');\n\n        return;\n      case ChannelState.ConfigurationError:\n        this._logger.info('Channel is stopped due to configuration error, skipping retry of start.');\n\n        return;\n      default:\n        assertUnreachable(this._channelContext.state.value);\n    }\n\n    return this.start();\n  }\n\n  private cleanUpResources(reason: string = defaultStreamTerminationReason): void {\n    this._channelContext.disposables.dispose();\n\n    const peerConnection = this._peerConnectionContext.peerConnection.value;\n\n    if (peerConnection) {\n      this._peerConnectionContext.peerConnection.value = null;\n      peerConnection.close();\n      peerConnection.dispose();\n\n      if (SDK.forceGarbageCollectionOnRestart && !(FeatureEnablement.isMobile && SDK.skipGarbageCollectionOnMobileDevices)) {\n        GarbageCollectorManager.forceGarbageCollection();\n      }\n    }\n\n    if (this._peerConnectionContext.mediaStream.value) {\n      this._peerConnectionContext.mediaStream.value.getTracks().forEach(track => track.stop());\n      this._peerConnectionContext.mediaStream.value = null;\n    }\n\n    this._channelContext.autoPaused.value = false;\n    this._channelContext.autoMuted.value = false;\n    this._channelContext.playing.value = false;\n    this._channelContext.stopped.value = true;\n    this._channelContext.standby.value = false;\n\n    if (this._channelContext.stream.value && this._channelContext.endPoint.value) {\n      const ignored = this._channelContext.endPoint.value.destroyStream(this._channelContext.stream.value, reason)\n        .then(({status}) => {\n          if (status !== 'ok') {\n            this._logger.warn('[%s] Failed to destroy stream with reason [%s]', this.streamId, status);\n\n            return;\n          }\n\n          this._logger.info('[%s] Destroyed stream with reason [%s]', this.streamId, status);\n        })\n        .catch(e => {\n          this._logger.error('[%s] Failed to destroy stream', this.streamId, e);\n        });\n    }\n\n    if (this.videoElement && this.videoElement.dataset) {\n      this.videoElement.dataset.sessionId = '';\n      this.videoElement.dataset.streamId = '';\n    }\n\n    this._channelContext.stream.value = null;\n    this._channelContext.endPoint.value = null;\n    this._peerConnectionContext.peerConnectionReconnectAttempts = 0;\n  }\n\n  private async playMediaStreamInVideoElement(mediaStream: MediaStream): Promise<void> {\n    const videoElement = this._channelContext.videoElement.value;\n\n    if (!videoElement) {\n      this._channelContext.autoMuted.value = false;\n      this._channelContext.autoPaused.value = false;\n      this._channelContext.loading.value = false;\n      this._channelContext.playing.value = false;\n      this._channelContext.state.value = ChannelState.Stopped;\n\n      return;\n    }\n\n    if (!this._streamTransformContext.hasEncodedInsertableStreams.value) {\n      videoElement.srcObject = mediaStream;\n    }\n\n    const playPromise = videoElement.play();\n\n    if (playPromise === undefined) {\n      this._channelContext.autoMuted.value = false;\n      this._channelContext.autoPaused.value = false;\n      this._channelContext.loading.value = false;\n      this._channelContext.playing.value = true;\n      this._channelContext.state.value = ChannelState.Playing;\n\n      return;\n    }\n\n    return playPromise.then(() => {\n      this._channelContext.autoMuted.value = false;\n      this._channelContext.autoPaused.value = false;\n      this._channelContext.loading.value = false;\n      this._channelContext.playing.value = true;\n      this._channelContext.state.value = ChannelState.Playing;\n    }).catch(e => {\n      const hasAudioTrack = !!mediaStream.getTracks().filter(track => {\n        return track.kind === 'audio';\n      }).length;\n      const automaticallyMuteVideoOnPlayFailureOff = !SDK.automaticallyMuteVideoOnPlayFailure;\n\n      if (automaticallyMuteVideoOnPlayFailureOff || videoElement.muted || !hasAudioTrack) {\n        videoElement.srcObject = null;\n        this._channelContext.autoMuted.value = false;\n        this._channelContext.autoPaused.value = true;\n        this._channelContext.loading.value = false;\n        this._channelContext.playing.value = false;\n        this._channelContext.state.value = ChannelState.Paused;\n\n        if (automaticallyMuteVideoOnPlayFailureOff) {\n          this._logger.info('[%s] Paused video after play failed. Manual user action required.', this.streamId, e);\n\n          return;\n        }\n\n        if (hasAudioTrack) {\n          this._logger.info('[%s] Failed to play video. Manual user action required.', this.streamId, e);\n\n          return;\n        }\n\n        this._logger.info('[%s] Failed to play muted video. Manual user action required.', this.streamId, e);\n\n        return;\n      }\n\n      videoElement.muted = true;\n\n      return videoElement.play()\n        .then(() => {\n          this._logger.info('[%s] Played video after auto muting. Manual user action required to unmute.', this.streamId);\n\n          this._channelContext.autoMuted.value = true;\n          this._channelContext.autoPaused.value = false;\n          this._channelContext.loading.value = false;\n          this._channelContext.playing.value = true;\n          this._channelContext.state.value = ChannelState.Playing;\n        }).catch(e => {\n          videoElement.muted = false;\n\n          this._logger.info('[%s] Failed to play video. Manual user action required.', this.streamId, e);\n\n          videoElement.srcObject = null;\n          this._channelContext.autoMuted.value = false;\n          this._channelContext.autoPaused.value = true;\n          this._channelContext.loading.value = false;\n          this._channelContext.playing.value = false;\n          this._channelContext.state.value = ChannelState.Paused;\n        });\n    });\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\nimport Channel, {ChannelOptions} from './Channel';\nimport {IEncodedStreamSink} from '../transformation/EncodedStreamSink';\nimport {IStreamTrackTransform} from '../transformation/StreamTrackTransform';\nimport SDK from '../SDK';\nimport {EncodedEdgeToken} from '../../edgeAuth/EncodedEdgeToken';\nimport {Millisecond} from '../../units/Units';\n\ntype CreateChannelOptions = {\n  videoElement: HTMLVideoElement;\n  token: EncodedEdgeToken;\n  targetLag?: Millisecond;\n  videoStreamTransformCallback?: IStreamTrackTransform<VideoFrame>;\n  audioStreamTransformCallback?: IStreamTrackTransform<AudioData>;\n  encodedVideoStreamSink?: IEncodedStreamSink<RTCEncodedVideoFrame>;\n  encodedAudioStreamSink?: IEncodedStreamSink<RTCEncodedAudioFrame>;\n};\n\nexport default class Channels {\n  static createChannel(options: CreateChannelOptions): Channel {\n    if (!SDK.initialized.value) {\n      throw new Error('SDK is not loaded.');\n    }\n\n    const channelOptions: ChannelOptions = {\n      targetLag: options.targetLag,\n      videoStreamTransformCallback: options.videoStreamTransformCallback,\n      audioStreamTransformCallback: options.audioStreamTransformCallback,\n      encodedVideoStreamSink: options.encodedVideoStreamSink,\n      encodedAudioStreamSink: options.encodedAudioStreamSink\n    };\n\n    return new Channel(options.videoElement, options.token, channelOptions);\n  }\n\n  private constructor() {\n    throw new Error('Channels is a static class that may not be instantiated');\n  }\n}","/**\n * Copyright 2024 Phenix Real Time Solutions, Inc. Confidential and Proprietary. All Rights Reserved.\n */\n// /* global phenix */\n// Alternate ways to load the sdk directly:\n// import phenix from '@phenixrts/sdk';\nimport phenix from '../../dist/channels/min/channels';\n// Import phenix from '../../dist/channels/debug/channels';\n// import phenix from '../../src/sdk/channels';\n\nconst version = '10d4-final'; // WIP\n\nconsole.log(`NIKNIK: sendKFreq - build ${version} interval - mk2`);\n\n// ------------------------------------------------------------\nconst status = document.getElementById('PliStatus');\nconst keyFrames = document.getElementById('keyFrames');\nlet triggerPli = false;\n\nstatus.innerHTML = `${version} status: GOOD`;\nsetInterval(() => {\n  triggerPli = !triggerPli;\n\n  if (triggerPli) {\n    status.innerHTML = `${version} status: PLIs for each frame`;\n  } else {\n    status.innerHTML = `${version} status: GOOD`;\n  }\n}, 15000);\n\n// ------------------------------------------------------------\nconst timeStart = Date.now();\nconst frameStatistics = {\n  key: {\n    count: 0,\n    totalBytes: 0,\n    largestBytes: 0,\n    smallestBytes: Infinity\n  },\n  delta: {\n    count: 0,\n    totalBytes: 0,\n    largestBytes: 0,\n    smallestBytes: Infinity\n  },\n  audio: {\n    count: 0,\n    totalBytes: 0,\n    largestBytes: 0,\n    smallestBytes: Infinity\n  }\n};\n\n// ------------------------------------------------------------\nfunction processVideo(track, frame) {\n  console.log('NIKNIK: TEST CODE process VIDEO ...');\n\n  if (triggerPli) {\n    // X triggerPli = false;\n\n    return false;\n  }\n\n  if (frame.data) {\n    if (frame.type === 'key') {\n      frameStatistics.key.count++;\n      frameStatistics.key.totalBytes += frame.data.byteLength;\n\n      if (frame.data.byteLength < frameStatistics.key.smallestBytes) {\n        frameStatistics.key.smallestBytes = frame.data.byteLength;\n      }\n\n      if (frame.data.byteLength > frameStatistics.key.largestBytes) {\n        frameStatistics.key.largestBytes = frame.data.byteLength;\n      }\n\n      const timeNow = new Date();\n      const totalSeconds = (timeNow.getTime() - timeStart) / 1000;\n      const keyFramesPerSecond = (frameStatistics.key.count / totalSeconds).toFixed(2);\n      const framesPerSecond = ((frameStatistics.key.count + frameStatistics.delta.count) / totalSeconds).toFixed(2);\n      const averageKeyFrameSize = Math.trunc(frameStatistics.key.totalBytes / frameStatistics.key.count);\n      const averageDeltaFrameSize = Math.trunc(frameStatistics.delta.totalBytes / frameStatistics.delta.count);\n      const averageAudioDataSize = Math.trunc(frameStatistics.audio.totalBytes / frameStatistics.audio.count);\n      const smallestVideoBytes = Math.min(frameStatistics.key.smallestBytes, frameStatistics.delta.smallestBytes);\n      const largestVideoBytes = Math.max(frameStatistics.key.largestBytes, frameStatistics.delta.largestBytes);\n      let XXX_TS = timeNow.toISOString();\n\n      keyFrames.innerHTML = `<p>[${XXX_TS}] KF: [${keyFramesPerSecond}] KF/s [${framesPerSecond}] FPS ([${averageKeyFrameSize}] Bytes Average I-frame Size, [${averageDeltaFrameSize}] Bytes Average P-frame Size, [${smallestVideoBytes}] Bytes Minimum Video Frame Size, [${largestVideoBytes}] Bytes Maximum Video Frame Size, [${averageAudioDataSize}] Bytes Average Audio Data Size)`;\n    } else if (frame.type === 'delta') {\n      frameStatistics.delta.count++;\n      frameStatistics.delta.totalBytes += frame.data.byteLength;\n\n      if (frame.data.byteLength < frameStatistics.delta.smallestBytes) {\n        frameStatistics.delta.smallestBytes = frame.data.byteLength;\n      }\n\n      if (frame.data.byteLength > frameStatistics.delta.largestBytes) {\n        frameStatistics.delta.largestBytes = frame.data.byteLength;\n      }\n    }\n  }\n\n  return true;\n}\n\n// ------------------------------------------------------------\nfunction processAudio(track, frame) {\n  console.log('NIKNIK: TEST CODE process AUDIO ...');\n\n  if (frame.data) {\n    frameStatistics.audio.count++;\n    frameStatistics.audio.totalBytes += frame.data.byteLength;\n\n    if (frame.data.byteLength < frameStatistics.audio.smallestBytes) {\n      frameStatistics.audio.smallestBytes = frame.data.byteLength;\n    }\n\n    if (frame.data.byteLength > frameStatistics.audio.largestBytes) {\n      frameStatistics.audio.largestBytes = frame.data.byteLength;\n    }\n  }\n\n  return true;\n}\n\n// ------------------------------------------------------------\n// The token capabilities must include 'encoded-insertable-streams' to\n// use \"Encoded Transform\" API\nconst videoElement = document.getElementsByTagName('video')[0];\nconst createChannelOptions = {\n  videoElement,\n  token: new URLSearchParams(location.search).get('token') || '',\n  encodedVideoStreamSink: processVideo,\n  encodedAudioStreamSink: processAudio\n};\n\nphenix.Channels.createChannel(createChannelOptions);\n"]}